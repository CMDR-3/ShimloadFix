#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_hacksaw

#include "Basic.hpp"

#include "Prop_hacksaw_classes.hpp"
#include "Prop_hacksaw_parameters.hpp"


namespace SDK
{

// Function prop_hacksaw.prop_hacksaw_C.ExecuteUbergraph_prop_hacksaw
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProp_hacksaw_C::ExecuteUbergraph_prop_hacksaw(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_hacksaw_C", "ExecuteUbergraph_prop_hacksaw");

	Params::Prop_hacksaw_C_ExecuteUbergraph_prop_hacksaw Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function prop_hacksaw.prop_hacksaw_C.sawSound
// (BlueprintCallable, BlueprintEvent)

void AProp_hacksaw_C::SawSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_hacksaw_C", "sawSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function prop_hacksaw.prop_hacksaw_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProp_hacksaw_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_hacksaw_C", "ReceiveTick");

	Params::Prop_hacksaw_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function prop_hacksaw.prop_hacksaw_C.completeSaw
// (Public, BlueprintCallable, BlueprintEvent)

void AProp_hacksaw_C::CompleteSaw()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_hacksaw_C", "completeSaw");

	UObject::ProcessEvent(Func, nullptr);
}


// Function prop_hacksaw.prop_hacksaw_C.processMat
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AProp_hacksaw_C::ProcessMat(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_hacksaw_C", "processMat");

	Params::Prop_hacksaw_C_ProcessMat Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function prop_hacksaw.prop_hacksaw_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void AProp_hacksaw_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_hacksaw_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function prop_hacksaw.prop_hacksaw_C.playerHandRelease_LMB
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainPlayer_C*                    Player_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProp_hacksaw_C::PlayerHandRelease_LMB(class AMainPlayer_C* Player_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_hacksaw_C", "playerHandRelease_LMB");

	Params::Prop_hacksaw_C_PlayerHandRelease_LMB Parms{};

	Parms.Player_0 = Player_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function prop_hacksaw.prop_hacksaw_C.playerHandUse_LMB
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainPlayer_C*                    Player_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProp_hacksaw_C::PlayerHandUse_LMB(class AMainPlayer_C* Player_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_hacksaw_C", "playerHandUse_LMB");

	Params::Prop_hacksaw_C_PlayerHandUse_LMB Parms{};

	Parms.Player_0 = Player_0;

	UObject::ProcessEvent(Func, &Parms);
}

}

