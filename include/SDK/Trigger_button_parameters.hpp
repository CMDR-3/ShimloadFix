#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Trigger_button

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Enum_interactionActions_structs.hpp"


namespace SDK::Params
{

// Function trigger_button.trigger_button_C.ExecuteUbergraph_trigger_button
// 0x01F8 (0x01F8 - 0x0000)
struct Trigger_button_C_ExecuteUbergraph_trigger_button final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x0010(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       K2Node_Event_action;                               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_6;                             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_2;                                // 0x00A8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_Event_kick;                                 // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_name;                                 // 0x0134(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_5;                             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_4;                             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_1;                                // 0x0150(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_Event_damage;                               // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_3;                             // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_2;                             // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_1;                             // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Trigger_button_C_ExecuteUbergraph_trigger_button) == 0x000008, "Wrong alignment on Trigger_button_C_ExecuteUbergraph_trigger_button");
static_assert(sizeof(Trigger_button_C_ExecuteUbergraph_trigger_button) == 0x0001F8, "Wrong size on Trigger_button_C_ExecuteUbergraph_trigger_button");
static_assert(offsetof(Trigger_button_C_ExecuteUbergraph_trigger_button, EntryPoint) == 0x000000, "Member 'Trigger_button_C_ExecuteUbergraph_trigger_button::EntryPoint' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_ExecuteUbergraph_trigger_button, K2Node_Event_player) == 0x000008, "Member 'Trigger_button_C_ExecuteUbergraph_trigger_button::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_ExecuteUbergraph_trigger_button, K2Node_Event_hit) == 0x000010, "Member 'Trigger_button_C_ExecuteUbergraph_trigger_button::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_ExecuteUbergraph_trigger_button, K2Node_Event_action) == 0x000098, "Member 'Trigger_button_C_ExecuteUbergraph_trigger_button::K2Node_Event_action' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_ExecuteUbergraph_trigger_button, K2Node_Event_player_6) == 0x0000A0, "Member 'Trigger_button_C_ExecuteUbergraph_trigger_button::K2Node_Event_player_6' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_ExecuteUbergraph_trigger_button, K2Node_Event_hit_2) == 0x0000A8, "Member 'Trigger_button_C_ExecuteUbergraph_trigger_button::K2Node_Event_hit_2' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_ExecuteUbergraph_trigger_button, K2Node_Event_kick) == 0x000130, "Member 'Trigger_button_C_ExecuteUbergraph_trigger_button::K2Node_Event_kick' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_ExecuteUbergraph_trigger_button, K2Node_Event_name) == 0x000134, "Member 'Trigger_button_C_ExecuteUbergraph_trigger_button::K2Node_Event_name' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_ExecuteUbergraph_trigger_button, K2Node_Event_player_5) == 0x000140, "Member 'Trigger_button_C_ExecuteUbergraph_trigger_button::K2Node_Event_player_5' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_ExecuteUbergraph_trigger_button, K2Node_Event_player_4) == 0x000148, "Member 'Trigger_button_C_ExecuteUbergraph_trigger_button::K2Node_Event_player_4' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_ExecuteUbergraph_trigger_button, K2Node_Event_hit_1) == 0x000150, "Member 'Trigger_button_C_ExecuteUbergraph_trigger_button::K2Node_Event_hit_1' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_ExecuteUbergraph_trigger_button, K2Node_Event_damage) == 0x0001D8, "Member 'Trigger_button_C_ExecuteUbergraph_trigger_button::K2Node_Event_damage' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_ExecuteUbergraph_trigger_button, K2Node_Event_player_3) == 0x0001E0, "Member 'Trigger_button_C_ExecuteUbergraph_trigger_button::K2Node_Event_player_3' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_ExecuteUbergraph_trigger_button, K2Node_Event_player_2) == 0x0001E8, "Member 'Trigger_button_C_ExecuteUbergraph_trigger_button::K2Node_Event_player_2' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_ExecuteUbergraph_trigger_button, K2Node_Event_player_1) == 0x0001F0, "Member 'Trigger_button_C_ExecuteUbergraph_trigger_button::K2Node_Event_player_1' has a wrong offset!");

// Function trigger_button.trigger_button_C.playerR
// 0x0008 (0x0008 - 0x0000)
struct Trigger_button_C_PlayerR final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Trigger_button_C_PlayerR) == 0x000008, "Wrong alignment on Trigger_button_C_PlayerR");
static_assert(sizeof(Trigger_button_C_PlayerR) == 0x000008, "Wrong size on Trigger_button_C_PlayerR");
static_assert(offsetof(Trigger_button_C_PlayerR, Player) == 0x000000, "Member 'Trigger_button_C_PlayerR::Player' has a wrong offset!");

// Function trigger_button.trigger_button_C.playerHold
// 0x0008 (0x0008 - 0x0000)
struct Trigger_button_C_PlayerHold final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Trigger_button_C_PlayerHold) == 0x000008, "Wrong alignment on Trigger_button_C_PlayerHold");
static_assert(sizeof(Trigger_button_C_PlayerHold) == 0x000008, "Wrong size on Trigger_button_C_PlayerHold");
static_assert(offsetof(Trigger_button_C_PlayerHold, Player) == 0x000000, "Member 'Trigger_button_C_PlayerHold::Player' has a wrong offset!");

// Function trigger_button.trigger_button_C.playerUnequip
// 0x0008 (0x0008 - 0x0000)
struct Trigger_button_C_PlayerUnequip final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Trigger_button_C_PlayerUnequip) == 0x000008, "Wrong alignment on Trigger_button_C_PlayerUnequip");
static_assert(sizeof(Trigger_button_C_PlayerUnequip) == 0x000008, "Wrong size on Trigger_button_C_PlayerUnequip");
static_assert(offsetof(Trigger_button_C_PlayerUnequip, Player) == 0x000000, "Member 'Trigger_button_C_PlayerUnequip::Player' has a wrong offset!");

// Function trigger_button.trigger_button_C.damageByPlayer
// 0x0098 (0x0098 - 0x0000)
struct Trigger_button_C_DamageByPlayer final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         Damage;                                            // 0x0090(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Trigger_button_C_DamageByPlayer) == 0x000008, "Wrong alignment on Trigger_button_C_DamageByPlayer");
static_assert(sizeof(Trigger_button_C_DamageByPlayer) == 0x000098, "Wrong size on Trigger_button_C_DamageByPlayer");
static_assert(offsetof(Trigger_button_C_DamageByPlayer, Player) == 0x000000, "Member 'Trigger_button_C_DamageByPlayer::Player' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_DamageByPlayer, Hit) == 0x000008, "Member 'Trigger_button_C_DamageByPlayer::Hit' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_DamageByPlayer, Damage) == 0x000090, "Member 'Trigger_button_C_DamageByPlayer::Damage' has a wrong offset!");

// Function trigger_button.trigger_button_C.thrown
// 0x0008 (0x0008 - 0x0000)
struct Trigger_button_C_Thrown final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Trigger_button_C_Thrown) == 0x000008, "Wrong alignment on Trigger_button_C_Thrown");
static_assert(sizeof(Trigger_button_C_Thrown) == 0x000008, "Wrong size on Trigger_button_C_Thrown");
static_assert(offsetof(Trigger_button_C_Thrown, Player) == 0x000000, "Member 'Trigger_button_C_Thrown::Player' has a wrong offset!");

// Function trigger_button.trigger_button_C.sendName
// 0x0008 (0x0008 - 0x0000)
struct Trigger_button_C_SendName final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Trigger_button_C_SendName) == 0x000004, "Wrong alignment on Trigger_button_C_SendName");
static_assert(sizeof(Trigger_button_C_SendName) == 0x000008, "Wrong size on Trigger_button_C_SendName");
static_assert(offsetof(Trigger_button_C_SendName, Name_0) == 0x000000, "Member 'Trigger_button_C_SendName::Name_0' has a wrong offset!");

// Function trigger_button.trigger_button_C.kicked
// 0x0001 (0x0001 - 0x0000)
struct Trigger_button_C_Kicked final
{
public:
	bool                                          Kick;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Trigger_button_C_Kicked) == 0x000001, "Wrong alignment on Trigger_button_C_Kicked");
static_assert(sizeof(Trigger_button_C_Kicked) == 0x000001, "Wrong size on Trigger_button_C_Kicked");
static_assert(offsetof(Trigger_button_C_Kicked, Kick) == 0x000000, "Member 'Trigger_button_C_Kicked::Kick' has a wrong offset!");

// Function trigger_button.trigger_button_C.player_use
// 0x0090 (0x0090 - 0x0000)
struct Trigger_button_C_Player_use final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Trigger_button_C_Player_use) == 0x000008, "Wrong alignment on Trigger_button_C_Player_use");
static_assert(sizeof(Trigger_button_C_Player_use) == 0x000090, "Wrong size on Trigger_button_C_Player_use");
static_assert(offsetof(Trigger_button_C_Player_use, Player) == 0x000000, "Member 'Trigger_button_C_Player_use::Player' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_Player_use, Hit) == 0x000008, "Member 'Trigger_button_C_Player_use::Hit' has a wrong offset!");

// Function trigger_button.trigger_button_C.isButtonUsed
// 0x0001 (0x0001 - 0x0000)
struct Trigger_button_C_IsButtonUsed final
{
public:
	bool                                          Failed;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Trigger_button_C_IsButtonUsed) == 0x000001, "Wrong alignment on Trigger_button_C_IsButtonUsed");
static_assert(sizeof(Trigger_button_C_IsButtonUsed) == 0x000001, "Wrong size on Trigger_button_C_IsButtonUsed");
static_assert(offsetof(Trigger_button_C_IsButtonUsed, Failed) == 0x000000, "Member 'Trigger_button_C_IsButtonUsed::Failed' has a wrong offset!");

// Function trigger_button.trigger_button_C.lookAt
// 0x00E0 (0x00E0 - 0x0000)
struct Trigger_button_C_LookAt final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Return;                                            // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Text;                                              // 0x0098(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    boundObjectReplace;                                // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Number;                                            // 0x00B0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x00B8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Trigger_button_C_LookAt) == 0x000008, "Wrong alignment on Trigger_button_C_LookAt");
static_assert(sizeof(Trigger_button_C_LookAt) == 0x0000E0, "Wrong size on Trigger_button_C_LookAt");
static_assert(offsetof(Trigger_button_C_LookAt, Player) == 0x000000, "Member 'Trigger_button_C_LookAt::Player' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_LookAt, Hit) == 0x000008, "Member 'Trigger_button_C_LookAt::Hit' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_LookAt, Return) == 0x000090, "Member 'Trigger_button_C_LookAt::Return' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_LookAt, Text) == 0x000098, "Member 'Trigger_button_C_LookAt::Text' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_LookAt, boundObjectReplace) == 0x0000A8, "Member 'Trigger_button_C_LookAt::boundObjectReplace' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_LookAt, Number) == 0x0000B0, "Member 'Trigger_button_C_LookAt::Number' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_LookAt, CallFunc_MakeLiteralText_ReturnValue) == 0x0000B8, "Member 'Trigger_button_C_LookAt::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_LookAt, CallFunc_Conv_TextToString_ReturnValue) == 0x0000D0, "Member 'Trigger_button_C_LookAt::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function trigger_button.trigger_button_C.noRespawn
// 0x0002 (0x0002 - 0x0000)
struct Trigger_button_C_NoRespawn final
{
public:
	bool                                          NoRespawn_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Return;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Trigger_button_C_NoRespawn) == 0x000001, "Wrong alignment on Trigger_button_C_NoRespawn");
static_assert(sizeof(Trigger_button_C_NoRespawn) == 0x000002, "Wrong size on Trigger_button_C_NoRespawn");
static_assert(offsetof(Trigger_button_C_NoRespawn, NoRespawn_0) == 0x000000, "Member 'Trigger_button_C_NoRespawn::NoRespawn_0' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_NoRespawn, Return) == 0x000001, "Member 'Trigger_button_C_NoRespawn::Return' has a wrong offset!");

// Function trigger_button.trigger_button_C.canPickup
// 0x0001 (0x0001 - 0x0000)
struct Trigger_button_C_CanPickup final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Trigger_button_C_CanPickup) == 0x000001, "Wrong alignment on Trigger_button_C_CanPickup");
static_assert(sizeof(Trigger_button_C_CanPickup) == 0x000001, "Wrong size on Trigger_button_C_CanPickup");
static_assert(offsetof(Trigger_button_C_CanPickup, Return) == 0x000000, "Member 'Trigger_button_C_CanPickup::Return' has a wrong offset!");

// Function trigger_button.trigger_button_C.asProp
// 0x0008 (0x0008 - 0x0000)
struct Trigger_button_C_AsProp final
{
public:
	class AProp_C*                                Return;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Trigger_button_C_AsProp) == 0x000008, "Wrong alignment on Trigger_button_C_AsProp");
static_assert(sizeof(Trigger_button_C_AsProp) == 0x000008, "Wrong size on Trigger_button_C_AsProp");
static_assert(offsetof(Trigger_button_C_AsProp, Return) == 0x000000, "Member 'Trigger_button_C_AsProp::Return' has a wrong offset!");

// Function trigger_button.trigger_button_C.canBePutInContainer
// 0x0001 (0x0001 - 0x0000)
struct Trigger_button_C_CanBePutInContainer final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Trigger_button_C_CanBePutInContainer) == 0x000001, "Wrong alignment on Trigger_button_C_CanBePutInContainer");
static_assert(sizeof(Trigger_button_C_CanBePutInContainer) == 0x000001, "Wrong size on Trigger_button_C_CanBePutInContainer");
static_assert(offsetof(Trigger_button_C_CanBePutInContainer, Return) == 0x000000, "Member 'Trigger_button_C_CanBePutInContainer::Return' has a wrong offset!");

// Function trigger_button.trigger_button_C.landedOn
// 0x0010 (0x0010 - 0x0000)
struct Trigger_button_C_LandedOn final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreFallDamage;                                  // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Trigger_button_C_LandedOn) == 0x000008, "Wrong alignment on Trigger_button_C_LandedOn");
static_assert(sizeof(Trigger_button_C_LandedOn) == 0x000010, "Wrong size on Trigger_button_C_LandedOn");
static_assert(offsetof(Trigger_button_C_LandedOn, Player) == 0x000000, "Member 'Trigger_button_C_LandedOn::Player' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_LandedOn, IgnoreFallDamage) == 0x000008, "Member 'Trigger_button_C_LandedOn::IgnoreFallDamage' has a wrong offset!");

// Function trigger_button.trigger_button_C.actionOptionIndex
// 0x0098 (0x0098 - 0x0000)
struct Trigger_button_C_ActionOptionIndex final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       Action;                                            // 0x0090(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Trigger_button_C_ActionOptionIndex) == 0x000008, "Wrong alignment on Trigger_button_C_ActionOptionIndex");
static_assert(sizeof(Trigger_button_C_ActionOptionIndex) == 0x000098, "Wrong size on Trigger_button_C_ActionOptionIndex");
static_assert(offsetof(Trigger_button_C_ActionOptionIndex, Player) == 0x000000, "Member 'Trigger_button_C_ActionOptionIndex::Player' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_ActionOptionIndex, Hit) == 0x000008, "Member 'Trigger_button_C_ActionOptionIndex::Hit' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_ActionOptionIndex, Action) == 0x000090, "Member 'Trigger_button_C_ActionOptionIndex::Action' has a wrong offset!");

// Function trigger_button.trigger_button_C.getActionOptions
// 0x0060 (0x0060 - 0x0000)
struct Trigger_button_C_GetActionOptions final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Options;                                           // 0x0018(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               Options_enum;                                      // 0x0028(0x0010)(Parm, OutParm)
	TArray<class FText>                           OptionsNamesOverlay;                               // 0x0038(0x0010)(Parm, OutParm)
	uint8                                         Number;                                            // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<Enum_interactionActions>               K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
};
static_assert(alignof(Trigger_button_C_GetActionOptions) == 0x000008, "Wrong alignment on Trigger_button_C_GetActionOptions");
static_assert(sizeof(Trigger_button_C_GetActionOptions) == 0x000060, "Wrong size on Trigger_button_C_GetActionOptions");
static_assert(offsetof(Trigger_button_C_GetActionOptions, Player) == 0x000000, "Member 'Trigger_button_C_GetActionOptions::Player' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_GetActionOptions, Component) == 0x000008, "Member 'Trigger_button_C_GetActionOptions::Component' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_GetActionOptions, Actor) == 0x000010, "Member 'Trigger_button_C_GetActionOptions::Actor' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_GetActionOptions, Options) == 0x000018, "Member 'Trigger_button_C_GetActionOptions::Options' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_GetActionOptions, Options_enum) == 0x000028, "Member 'Trigger_button_C_GetActionOptions::Options_enum' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_GetActionOptions, OptionsNamesOverlay) == 0x000038, "Member 'Trigger_button_C_GetActionOptions::OptionsNamesOverlay' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_GetActionOptions, Number) == 0x000048, "Member 'Trigger_button_C_GetActionOptions::Number' has a wrong offset!");
static_assert(offsetof(Trigger_button_C_GetActionOptions, K2Node_MakeArray_Array) == 0x000050, "Member 'Trigger_button_C_GetActionOptions::K2Node_MakeArray_Array' has a wrong offset!");

}

