#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_tableclock

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Enum_interactionActions_structs.hpp"
#include "Prop_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass prop_tableclock.prop_tableclock_C
// 0x0038 (0x0390 - 0x0358)
class AProp_tableclock_C final : public AProp_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Prop_tableclock_C;                  // 0x0358(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Audio;                                             // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Arrows;                                            // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTableclockArrows_Skeleton_AnimBlueprint_C* Anim;                                              // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Alarm;                                             // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_379[0x3];                                      // 0x0379(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AlarmHour;                                         // 0x037C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AlarmMin;                                          // 0x0380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ringing;                                           // 0x0384(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Alarmed;                                           // 0x0385(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_386[0x2];                                      // 0x0386(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LastDay;                                           // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_prop_tableclock(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void Upd();
	int32 Conv(int32 Value, int32 Value2);
	void ReceiveBeginPlay();
	void ActionName(class AMainPlayer_C* Player, const struct FHitResult& Hit_0, const class FString& Name_0);
	void LoadData(const struct FStruct_save& Data, bool* Return);
	void GetData(struct FStruct_save* Data);
	void GetActionOptions(class AMainPlayer_C* Player, class UPrimitiveComponent* Component, class AActor* Actor, TArray<class FString>* Options, TArray<Enum_interactionActions>* Options_enum, TArray<class FText>* OptionsNamesOverlay, uint8* Number);
	void LookAt(class AMainPlayer_C* Player, const struct FHitResult& Hit_0, bool* Return, class FString* Text, class UPrimitiveComponent** boundObjectReplace, uint8* Number);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"prop_tableclock_C">();
	}
	static class AProp_tableclock_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProp_tableclock_C>();
	}
};
static_assert(alignof(AProp_tableclock_C) == 0x000008, "Wrong alignment on AProp_tableclock_C");
static_assert(sizeof(AProp_tableclock_C) == 0x000390, "Wrong size on AProp_tableclock_C");
static_assert(offsetof(AProp_tableclock_C, UberGraphFrame_Prop_tableclock_C) == 0x000358, "Member 'AProp_tableclock_C::UberGraphFrame_Prop_tableclock_C' has a wrong offset!");
static_assert(offsetof(AProp_tableclock_C, Audio) == 0x000360, "Member 'AProp_tableclock_C::Audio' has a wrong offset!");
static_assert(offsetof(AProp_tableclock_C, Arrows) == 0x000368, "Member 'AProp_tableclock_C::Arrows' has a wrong offset!");
static_assert(offsetof(AProp_tableclock_C, Anim) == 0x000370, "Member 'AProp_tableclock_C::Anim' has a wrong offset!");
static_assert(offsetof(AProp_tableclock_C, Alarm) == 0x000378, "Member 'AProp_tableclock_C::Alarm' has a wrong offset!");
static_assert(offsetof(AProp_tableclock_C, AlarmHour) == 0x00037C, "Member 'AProp_tableclock_C::AlarmHour' has a wrong offset!");
static_assert(offsetof(AProp_tableclock_C, AlarmMin) == 0x000380, "Member 'AProp_tableclock_C::AlarmMin' has a wrong offset!");
static_assert(offsetof(AProp_tableclock_C, Ringing) == 0x000384, "Member 'AProp_tableclock_C::Ringing' has a wrong offset!");
static_assert(offsetof(AProp_tableclock_C, Alarmed) == 0x000385, "Member 'AProp_tableclock_C::Alarmed' has a wrong offset!");
static_assert(offsetof(AProp_tableclock_C, LastDay) == 0x000388, "Member 'AProp_tableclock_C::LastDay' has a wrong offset!");

}

