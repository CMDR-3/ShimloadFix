#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GrowingPlant

#include "Basic.hpp"

#include "Struct_farmPlant_structs.hpp"
#include "Engine_structs.hpp"
#include "Enum_interactionActions_structs.hpp"
#include "Actor_save_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass growingPlant.growingPlant_C
// 0x0100 (0x0350 - 0x0250)
class AGrowingPlant_C : public AActor_save_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GrowingPlant_C;                     // 0x0250(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UComp_physicsImpact_C*                  PhysicsImpact;                                     // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Support;                                           // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Coll;                                              // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Dirt;                                              // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mesh;                                              // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   Plant;                                             // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         Grow;                                              // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         GrowRate;                                          // 0x028C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            VisualMesh;                                        // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Obj;                                               // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 AttachParent;                                      // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FStruct_farmPlant                      Data;                                              // 0x02B8(0x0080)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         Fertilizer;                                        // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Water;                                             // 0x033C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Discard;                                           // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341[0x3];                                      // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FruitGrow;                                         // 0x0344(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          HideDirt;                                          // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_growingPlant(int32 EntryPoint);
	void CustomEvent(float Damage, const struct FHitResult& Hit, class AActor* Actor, const struct FVector& Impact);
	void FireDamage(float Damage);
	void AddDamage(class AActor* Actor, float Damage, const struct FHitResult& Hit, const struct FVector& Impact, bool SkipSetting);
	void Dest(class AActor* DestroyedActor);
	void MakeDest();
	void ReceiveBeginPlay();
	void ActionOptionIndex(class AMainPlayer_C* Player, const struct FHitResult& Hit, Enum_interactionActions Action);
	void ReceiveTick(float DeltaSeconds);
	void PlayerR(class AMainPlayer_C* Player);
	void PlayerHold(class AMainPlayer_C* Player);
	void PlayerUnequip(class AMainPlayer_C* Player);
	void UpdateStrAgl();
	void DamageByPlayer(class AMainPlayer_C* Player, const struct FHitResult& Hit, float Damage);
	void Thrown(class AMainPlayer_C* Player);
	void broken_fire();
	void broken();
	void SendName(class FName Name_0);
	void Kicked(bool Kick);
	void Player_use(class AMainPlayer_C* Player, const struct FHitResult& Hit);
	void DriveDetached();
	void UserConstructionScript();
	void UpdLoc();
	void GetActionOptions(class AMainPlayer_C* Player, class UPrimitiveComponent* Component, class AActor* Actor, TArray<class FString>* Options, TArray<Enum_interactionActions>* Options_enum, TArray<class FText>* OptionsNamesOverlay, uint8* Number);
	void LoadData(const struct FStruct_save& Data_0, bool* Return);
	void GetData(struct FStruct_save* Data_0);
	void ProcessKeys(bool* Return);
	void Upd();
	void AddFruit();
	void CanBePutInContainer(bool* Return);
	void AsProp(class AProp_C** Return);
	void CanPickup(bool* Return);
	void NoRespawn(bool NoRespawn_0, bool* Return);
	void LookAt(class AMainPlayer_C* Player, const struct FHitResult& Hit, bool* Return, class FString* Text, class UPrimitiveComponent** boundObjectReplace, uint8* Number);
	void IsButtonUsed(bool* Failed);
	void LandedOn(class AMainPlayer_C* Player, bool* IgnoreFallDamage);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"growingPlant_C">();
	}
	static class AGrowingPlant_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGrowingPlant_C>();
	}
};
static_assert(alignof(AGrowingPlant_C) == 0x000008, "Wrong alignment on AGrowingPlant_C");
static_assert(sizeof(AGrowingPlant_C) == 0x000350, "Wrong size on AGrowingPlant_C");
static_assert(offsetof(AGrowingPlant_C, UberGraphFrame_GrowingPlant_C) == 0x000250, "Member 'AGrowingPlant_C::UberGraphFrame_GrowingPlant_C' has a wrong offset!");
static_assert(offsetof(AGrowingPlant_C, PhysicsImpact) == 0x000258, "Member 'AGrowingPlant_C::PhysicsImpact' has a wrong offset!");
static_assert(offsetof(AGrowingPlant_C, Support) == 0x000260, "Member 'AGrowingPlant_C::Support' has a wrong offset!");
static_assert(offsetof(AGrowingPlant_C, Coll) == 0x000268, "Member 'AGrowingPlant_C::Coll' has a wrong offset!");
static_assert(offsetof(AGrowingPlant_C, Dirt) == 0x000270, "Member 'AGrowingPlant_C::Dirt' has a wrong offset!");
static_assert(offsetof(AGrowingPlant_C, Mesh) == 0x000278, "Member 'AGrowingPlant_C::Mesh' has a wrong offset!");
static_assert(offsetof(AGrowingPlant_C, Plant) == 0x000280, "Member 'AGrowingPlant_C::Plant' has a wrong offset!");
static_assert(offsetof(AGrowingPlant_C, Grow) == 0x000288, "Member 'AGrowingPlant_C::Grow' has a wrong offset!");
static_assert(offsetof(AGrowingPlant_C, GrowRate) == 0x00028C, "Member 'AGrowingPlant_C::GrowRate' has a wrong offset!");
static_assert(offsetof(AGrowingPlant_C, Amount) == 0x000290, "Member 'AGrowingPlant_C::Amount' has a wrong offset!");
static_assert(offsetof(AGrowingPlant_C, VisualMesh) == 0x000298, "Member 'AGrowingPlant_C::VisualMesh' has a wrong offset!");
static_assert(offsetof(AGrowingPlant_C, Obj) == 0x0002A0, "Member 'AGrowingPlant_C::Obj' has a wrong offset!");
static_assert(offsetof(AGrowingPlant_C, AttachParent) == 0x0002A8, "Member 'AGrowingPlant_C::AttachParent' has a wrong offset!");
static_assert(offsetof(AGrowingPlant_C, Data) == 0x0002B8, "Member 'AGrowingPlant_C::Data' has a wrong offset!");
static_assert(offsetof(AGrowingPlant_C, Fertilizer) == 0x000338, "Member 'AGrowingPlant_C::Fertilizer' has a wrong offset!");
static_assert(offsetof(AGrowingPlant_C, Water) == 0x00033C, "Member 'AGrowingPlant_C::Water' has a wrong offset!");
static_assert(offsetof(AGrowingPlant_C, Discard) == 0x000340, "Member 'AGrowingPlant_C::Discard' has a wrong offset!");
static_assert(offsetof(AGrowingPlant_C, FruitGrow) == 0x000344, "Member 'AGrowingPlant_C::FruitGrow' has a wrong offset!");
static_assert(offsetof(AGrowingPlant_C, HideDirt) == 0x000348, "Member 'AGrowingPlant_C::HideDirt' has a wrong offset!");

}

