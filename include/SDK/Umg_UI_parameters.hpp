#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Umg_UI

#include "Basic.hpp"

#include "Struct_save_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Slate_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Enum_interactionActions_structs.hpp"
#include "UMG_structs.hpp"
#include "Struct_mObject_structs.hpp"
#include "Struct_mString_structs.hpp"
#include "Struct_settings_structs.hpp"
#include "InputCore_structs.hpp"
#include "Enum_crosshairType_structs.hpp"


namespace SDK::Params
{

// Function umg_UI.umg_UI_C.ExecuteUbergraph_umg_UI
// 0x0618 (0x0618 - 0x0000)
struct Umg_UI_C_ExecuteUbergraph_umg_UI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_crosshairType                            Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_settings                       K2Node_Event_settings;                             // 0x0048(0x0100)(HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_compassAngle_ReturnValue;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_152[0x6];                                      // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_calcSize_size;                            // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_calcSize_min;                             // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_calcSize_max;                             // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_calcSize_origin;                          // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPrimaryMonitorResolution_Width;        // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPrimaryMonitorResolution_Height;       // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_2;           // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_IntPointToVector2D_ReturnValue;      // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_3;           // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x3];                                      // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_2;                           // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_4;                        // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_4;                        // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_2;                       // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_3;                       // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_4;                       // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_5;                       // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UImage*>                         K2Node_MakeArray_Array;                            // 0x0260(0x0010)(ReferenceParm, ContainsInstancedReference)
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue;        // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player;              // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_5;                        // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_5;                        // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_4;        // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_5;        // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x02A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_3;                           // 0x02AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTextBlock*>                     K2Node_MakeArray_Array_1;                          // 0x02B8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          Temp_bool_Variable_4;                              // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x02CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x02CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x02CC(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUmg_texturePicker_C*                   K2Node_Event_picker;                               // 0x0308(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Event_texture;                              // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_index;                                // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Event_color;                                // 0x031C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_6;                        // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_6;                        // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x3];                                      // 0x0339(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_4;               // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A[0x6];                                      // 0x035A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0360(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0378(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_1;           // 0x0388(0x0018)()
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x03A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x03B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x03C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x03D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x03E0(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x03F8(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_2;           // 0x0410(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_3;           // 0x0428(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x0440(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_3;          // 0x0450(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0460(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0470(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0480(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x0498(0x0018)()
	bool                                          Temp_bool_Variable_6;                              // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x04B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B2[0x2];                                      // 0x04B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B9[0x3];                                      // 0x04B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_6;        // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_6;                           // 0x04C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C5[0x3];                                      // 0x04C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue_1;         // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DC[0x4];                                      // 0x04DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x04E0(0x0018)()
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC[0x4];                                      // 0x04FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0500(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0540(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0558(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_599[0x7];                                      // 0x0599(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x05A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x05B0(0x0018)()
	struct FKey                                   K2Node_Event_key;                                  // 0x05C8(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_Event_pressed;                              // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E1[0x7];                                      // 0x05E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_4;           // 0x05E8(0x0018)()
	bool                                          CallFunc_MakeLiteralBool_ReturnValue;              // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_601[0x7];                                      // 0x0601(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        K2Node_Event_gamemode;                             // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0614(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_UI_C_ExecuteUbergraph_umg_UI) == 0x000008, "Wrong alignment on Umg_UI_C_ExecuteUbergraph_umg_UI");
static_assert(sizeof(Umg_UI_C_ExecuteUbergraph_umg_UI) == 0x000618, "Wrong size on Umg_UI_C_ExecuteUbergraph_umg_UI");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, EntryPoint) == 0x000000, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::EntryPoint' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, Temp_byte_Variable) == 0x000004, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, Temp_bool_Variable) == 0x000005, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, Temp_byte_Variable_1) == 0x000006, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, Temp_int_Variable) == 0x000008, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, Temp_int_Variable_1) == 0x00000C, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, Temp_int_Variable_2) == 0x000010, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, Temp_int_Variable_3) == 0x000014, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, Temp_bool_Variable_1) == 0x000018, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, Temp_byte_Variable_2) == 0x00002C, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000030, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, Temp_byte_Variable_3) == 0x000038, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00003C, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000040, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_Event_settings) == 0x000048, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_Event_settings' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_Select_Default) == 0x000148, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_compassAngle_ReturnValue) == 0x00014C, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_compassAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_IsValid_ReturnValue) == 0x000150, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_IsValid_ReturnValue_1) == 0x000151, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000158, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000160, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_calcSize_size) == 0x000168, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_calcSize_size' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_calcSize_min) == 0x000170, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_calcSize_min' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_calcSize_max) == 0x000178, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_calcSize_max' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_calcSize_origin) == 0x000180, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_calcSize_origin' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_GetPrimaryMonitorResolution_Width) == 0x000188, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_GetPrimaryMonitorResolution_Width' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_GetPrimaryMonitorResolution_Height) == 0x00018C, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_GetPrimaryMonitorResolution_Height' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_SlotAsCanvasSlot_ReturnValue_2) == 0x000190, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_SlotAsCanvasSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_MakeStruct_IntPoint) == 0x000198, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Conv_IntPointToVector2D_ReturnValue) == 0x0001A0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Conv_IntPointToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_BreakVector2D_X) == 0x0001A8, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_BreakVector2D_Y) == 0x0001AC, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, Temp_bool_Variable_2) == 0x0001B0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_SlotAsCanvasSlot_ReturnValue_3) == 0x0001B8, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_SlotAsCanvasSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Not_PreBool_ReturnValue) == 0x0001C0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001C1, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_BooleanAND_ReturnValue) == 0x0001C2, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_BooleanOR_ReturnValue) == 0x0001C3, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_SelectFloat_ReturnValue) == 0x0001C4, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_Select_Default_1) == 0x0001C8, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_MakeVector2D_ReturnValue) == 0x0001D0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_BreakVector2D_X_1) == 0x0001D8, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_BreakVector2D_Y_1) == 0x0001DC, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_BreakVector2D_X_2) == 0x0001E0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_BreakVector2D_Y_2) == 0x0001E4, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_GetDesiredSize_ReturnValue) == 0x0001E8, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_BreakVector2D_X_3) == 0x0001F0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_BreakVector2D_Y_3) == 0x0001F4, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, Temp_bool_Variable_3) == 0x0001F8, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Array_Length_ReturnValue) == 0x0001FC, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000200, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000204, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_MakeVector2D_ReturnValue_1) == 0x000208, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_Select_Default_2) == 0x000210, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_BreakVector2D_X_4) == 0x000218, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_BreakVector2D_Y_4) == 0x00021C, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_FMax_ReturnValue) == 0x000220, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_FMax_ReturnValue_1) == 0x000224, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_FMax_ReturnValue_2) == 0x000228, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_FMax_ReturnValue_3) == 0x00022C, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_FMax_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Add_FloatFloat_ReturnValue) == 0x000230, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000234, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000238, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x00023C, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000240, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000244, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_FMax_ReturnValue_4) == 0x000248, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_FMax_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_FMax_ReturnValue_5) == 0x00024C, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_FMax_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000250, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x000254, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_MakeVector2D_ReturnValue_2) == 0x000258, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_MakeArray_Array) == 0x000260, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_GetGlobalTimeDilation_ReturnValue) == 0x000270, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_GetGlobalTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000274, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_getMainPlayer_AsMain_Player) == 0x000278, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_getMainPlayer_AsMain_Player' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000280, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_FInterpTo_ReturnValue) == 0x000284, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_BreakVector2D_X_5) == 0x000288, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_BreakVector2D_Y_5) == 0x00028C, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Subtract_FloatFloat_ReturnValue_4) == 0x000290, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Subtract_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000298, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Subtract_FloatFloat_ReturnValue_5) == 0x0002A0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Subtract_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_MakeVector2D_ReturnValue_3) == 0x0002A4, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_Select_Default_3) == 0x0002AC, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_MakeArray_Array_1) == 0x0002B8, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, Temp_bool_Variable_4) == 0x0002C8, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Not_PreBool_ReturnValue_2) == 0x0002C9, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_Select_Default_4) == 0x0002CA, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, Temp_bool_Variable_5) == 0x0002CB, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_Event_MyGeometry) == 0x0002CC, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_Event_InDeltaTime) == 0x000304, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_Event_picker) == 0x000308, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_Event_picker' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_Event_texture) == 0x000310, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_Event_texture' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_Event_index) == 0x000318, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_Event_index' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_Event_color) == 0x00031C, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_Event_color' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_BreakVector2D_X_6) == 0x00032C, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_BreakVector2D_X_6' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_BreakVector2D_Y_6) == 0x000330, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_BreakVector2D_Y_6' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000334, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, Temp_byte_Variable_4) == 0x000338, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_SelectFloat_ReturnValue_1) == 0x00033C, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_MakeVector2D_ReturnValue_4) == 0x000340, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_MakeVector2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, Temp_byte_Variable_5) == 0x000348, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000350, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_IsValid_ReturnValue_2) == 0x000358, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000359, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Conv_FloatToText_ReturnValue) == 0x000360, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Conv_TextToString_ReturnValue) == 0x000378, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Conv_FloatToText_ReturnValue_1) == 0x000388, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Conv_FloatToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_SelectString_ReturnValue) == 0x0003A0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0003B0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Concat_StrStr_ReturnValue) == 0x0003C0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0003D0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Conv_StringToText_ReturnValue) == 0x0003E0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0003F8, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Conv_FloatToText_ReturnValue_2) == 0x000410, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Conv_FloatToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Conv_FloatToText_ReturnValue_3) == 0x000428, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Conv_FloatToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Conv_TextToString_ReturnValue_2) == 0x000440, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Conv_TextToString_ReturnValue_3) == 0x000450, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Conv_TextToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000460, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000470, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000480, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Conv_StringToText_ReturnValue_3) == 0x000498, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, Temp_bool_Variable_6) == 0x0004B0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_Select_Default_5) == 0x0004B1, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0004B4, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, Temp_byte_Variable_6) == 0x0004B8, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Subtract_FloatFloat_ReturnValue_6) == 0x0004BC, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Subtract_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x0004C0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_Select_Default_6) == 0x0004C4, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Percent_FloatFloat_ReturnValue) == 0x0004C8, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0004CC, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x0004D0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_FTrunc_ReturnValue) == 0x0004D4, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Percent_FloatFloat_ReturnValue_1) == 0x0004D8, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Percent_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Conv_IntToText_ReturnValue) == 0x0004E0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_FTrunc_ReturnValue_1) == 0x0004F8, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_MakeStruct_FormatArgumentData) == 0x000500, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000540, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_MakeStruct_FormatArgumentData_1) == 0x000558, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_IsVisible_ReturnValue) == 0x000598, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_MakeArray_Array_2) == 0x0005A0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Format_ReturnValue) == 0x0005B0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_Event_key) == 0x0005C8, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_Event_key' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_Event_pressed) == 0x0005E0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_Event_pressed' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Conv_FloatToText_ReturnValue_4) == 0x0005E8, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Conv_FloatToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_MakeLiteralBool_ReturnValue) == 0x000600, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_MakeLiteralBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_Event_gamemode) == 0x000608, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_Event_gamemode' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_SelectFloat_ReturnValue_2) == 0x000610, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_SelectInt_ReturnValue) == 0x000614, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_SelectInt_ReturnValue' has a wrong offset!");

// Function umg_UI.umg_UI_C.stuffUpgraded
// 0x0008 (0x0008 - 0x0000)
struct Umg_UI_C_StuffUpgraded final
{
public:
	class AMainGamemode_C*                        GameMode_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_UI_C_StuffUpgraded) == 0x000008, "Wrong alignment on Umg_UI_C_StuffUpgraded");
static_assert(sizeof(Umg_UI_C_StuffUpgraded) == 0x000008, "Wrong size on Umg_UI_C_StuffUpgraded");
static_assert(offsetof(Umg_UI_C_StuffUpgraded, GameMode_0) == 0x000000, "Member 'Umg_UI_C_StuffUpgraded::GameMode_0' has a wrong offset!");

// Function umg_UI.umg_UI_C.AnyKey
// 0x0020 (0x0020 - 0x0000)
struct Umg_UI_C_AnyKey final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Pressed;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_UI_C_AnyKey) == 0x000008, "Wrong alignment on Umg_UI_C_AnyKey");
static_assert(sizeof(Umg_UI_C_AnyKey) == 0x000020, "Wrong size on Umg_UI_C_AnyKey");
static_assert(offsetof(Umg_UI_C_AnyKey, Key) == 0x000000, "Member 'Umg_UI_C_AnyKey::Key' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AnyKey, Pressed) == 0x000018, "Member 'Umg_UI_C_AnyKey::Pressed' has a wrong offset!");

// Function umg_UI.umg_UI_C.applyColor
// 0x0010 (0x0010 - 0x0000)
struct Umg_UI_C_ApplyColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_UI_C_ApplyColor) == 0x000004, "Wrong alignment on Umg_UI_C_ApplyColor");
static_assert(sizeof(Umg_UI_C_ApplyColor) == 0x000010, "Wrong size on Umg_UI_C_ApplyColor");
static_assert(offsetof(Umg_UI_C_ApplyColor, Color) == 0x000000, "Member 'Umg_UI_C_ApplyColor::Color' has a wrong offset!");

// Function umg_UI.umg_UI_C.texturePickerApply
// 0x0018 (0x0018 - 0x0000)
struct Umg_UI_C_TexturePickerApply final
{
public:
	class UUmg_texturePicker_C*                   Picker;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Texture;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_UI_C_TexturePickerApply) == 0x000008, "Wrong alignment on Umg_UI_C_TexturePickerApply");
static_assert(sizeof(Umg_UI_C_TexturePickerApply) == 0x000018, "Wrong size on Umg_UI_C_TexturePickerApply");
static_assert(offsetof(Umg_UI_C_TexturePickerApply, Picker) == 0x000000, "Member 'Umg_UI_C_TexturePickerApply::Picker' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_TexturePickerApply, Texture) == 0x000008, "Member 'Umg_UI_C_TexturePickerApply::Texture' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_TexturePickerApply, Index_0) == 0x000010, "Member 'Umg_UI_C_TexturePickerApply::Index_0' has a wrong offset!");

// Function umg_UI.umg_UI_C.Tick
// 0x003C (0x003C - 0x0000)
struct Umg_UI_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_UI_C_Tick) == 0x000004, "Wrong alignment on Umg_UI_C_Tick");
static_assert(sizeof(Umg_UI_C_Tick) == 0x00003C, "Wrong size on Umg_UI_C_Tick");
static_assert(offsetof(Umg_UI_C_Tick, MyGeometry) == 0x000000, "Member 'Umg_UI_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_Tick, InDeltaTime) == 0x000038, "Member 'Umg_UI_C_Tick::InDeltaTime' has a wrong offset!");

// Function umg_UI.umg_UI_C.settingsApplied
// 0x0100 (0x0100 - 0x0000)
struct Umg_UI_C_SettingsApplied final
{
public:
	struct FStruct_settings                       Settings;                                          // 0x0000(0x0100)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(Umg_UI_C_SettingsApplied) == 0x000008, "Wrong alignment on Umg_UI_C_SettingsApplied");
static_assert(sizeof(Umg_UI_C_SettingsApplied) == 0x000100, "Wrong size on Umg_UI_C_SettingsApplied");
static_assert(offsetof(Umg_UI_C_SettingsApplied, Settings) == 0x000000, "Member 'Umg_UI_C_SettingsApplied::Settings' has a wrong offset!");

// Function umg_UI.umg_UI_C.openHovertext
// 0x0068 (0x0068 - 0x0000)
struct Umg_UI_C_OpenHovertext final
{
public:
	class UPrimitiveComponent*                    HovertextLoc_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SettActive;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   InText;                                            // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          IsActor;                                           // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Hide;                                              // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Name_0;                                            // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USave_main_C*                           CallFunc_getMainSave_save_main;                    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_UI_C_OpenHovertext) == 0x000008, "Wrong alignment on Umg_UI_C_OpenHovertext");
static_assert(sizeof(Umg_UI_C_OpenHovertext) == 0x000068, "Wrong size on Umg_UI_C_OpenHovertext");
static_assert(offsetof(Umg_UI_C_OpenHovertext, HovertextLoc_0) == 0x000000, "Member 'Umg_UI_C_OpenHovertext::HovertextLoc_0' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, SettActive) == 0x000008, "Member 'Umg_UI_C_OpenHovertext::SettActive' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, InText) == 0x000010, "Member 'Umg_UI_C_OpenHovertext::InText' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, IsActor) == 0x000028, "Member 'Umg_UI_C_OpenHovertext::IsActor' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, Hide) == 0x000029, "Member 'Umg_UI_C_OpenHovertext::Hide' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, Name_0) == 0x000030, "Member 'Umg_UI_C_OpenHovertext::Name_0' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, Temp_byte_Variable) == 0x000048, "Member 'Umg_UI_C_OpenHovertext::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, CallFunc_TextIsEmpty_ReturnValue) == 0x000049, "Member 'Umg_UI_C_OpenHovertext::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, CallFunc_Not_PreBool_ReturnValue) == 0x00004A, "Member 'Umg_UI_C_OpenHovertext::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, Temp_byte_Variable_1) == 0x00004B, "Member 'Umg_UI_C_OpenHovertext::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, Temp_bool_Variable) == 0x00004C, "Member 'Umg_UI_C_OpenHovertext::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, Temp_byte_Variable_2) == 0x00004D, "Member 'Umg_UI_C_OpenHovertext::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, Temp_byte_Variable_3) == 0x00004E, "Member 'Umg_UI_C_OpenHovertext::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, Temp_bool_Variable_1) == 0x00004F, "Member 'Umg_UI_C_OpenHovertext::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, Temp_byte_Variable_4) == 0x000050, "Member 'Umg_UI_C_OpenHovertext::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, Temp_byte_Variable_5) == 0x000051, "Member 'Umg_UI_C_OpenHovertext::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, CallFunc_Not_PreBool_ReturnValue_1) == 0x000052, "Member 'Umg_UI_C_OpenHovertext::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, CallFunc_BooleanAND_ReturnValue) == 0x000053, "Member 'Umg_UI_C_OpenHovertext::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, CallFunc_getMainSave_save_main) == 0x000058, "Member 'Umg_UI_C_OpenHovertext::CallFunc_getMainSave_save_main' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, Temp_bool_Variable_2) == 0x000060, "Member 'Umg_UI_C_OpenHovertext::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, CallFunc_BooleanOR_ReturnValue) == 0x000061, "Member 'Umg_UI_C_OpenHovertext::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, K2Node_Select_Default) == 0x000062, "Member 'Umg_UI_C_OpenHovertext::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, K2Node_Select_Default_1) == 0x000063, "Member 'Umg_UI_C_OpenHovertext::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, K2Node_Select_Default_2) == 0x000064, "Member 'Umg_UI_C_OpenHovertext::K2Node_Select_Default_2' has a wrong offset!");

// Function umg_UI.umg_UI_C.addHint
// 0x0028 (0x0028 - 0x0000)
struct Umg_UI_C_AddHint final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UUmg_hint_C*                            CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_UI_C_AddHint) == 0x000008, "Wrong alignment on Umg_UI_C_AddHint");
static_assert(sizeof(Umg_UI_C_AddHint) == 0x000028, "Wrong size on Umg_UI_C_AddHint");
static_assert(offsetof(Umg_UI_C_AddHint, InText) == 0x000000, "Member 'Umg_UI_C_AddHint::InText' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AddHint, CallFunc_Create_ReturnValue) == 0x000018, "Member 'Umg_UI_C_AddHint::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AddHint, CallFunc_AddChild_ReturnValue) == 0x000020, "Member 'Umg_UI_C_AddHint::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function umg_UI.umg_UI_C.compassAngle
// 0x0160 (0x0160 - 0x0000)
struct Umg_UI_C_CompassAngle final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue;         // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue_1;       // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualExactly_VectorVector_ReturnValue;    // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_2;     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_3;     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue_1;        // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_2;      // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue_2;       // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_4;     // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue_3;       // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_3;                      // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_3;                     // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_3;                       // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_UI_C_CompassAngle) == 0x000008, "Wrong alignment on Umg_UI_C_CompassAngle");
static_assert(sizeof(Umg_UI_C_CompassAngle) == 0x000160, "Wrong size on Umg_UI_C_CompassAngle");
static_assert(offsetof(Umg_UI_C_CompassAngle, ReturnValue) == 0x000000, "Member 'Umg_UI_C_CompassAngle::ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000008, "Member 'Umg_UI_C_CompassAngle::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x000010, "Member 'Umg_UI_C_CompassAngle::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_GetActorRightVector_ReturnValue) == 0x000018, "Member 'Umg_UI_C_CompassAngle::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000024, "Member 'Umg_UI_C_CompassAngle::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_GetActorForwardVector_ReturnValue) == 0x000030, "Member 'Umg_UI_C_CompassAngle::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00003C, "Member 'Umg_UI_C_CompassAngle::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_MakeRotationFromAxes_ReturnValue) == 0x000048, "Member 'Umg_UI_C_CompassAngle::CallFunc_MakeRotationFromAxes_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_Cross_VectorVector_ReturnValue) == 0x000054, "Member 'Umg_UI_C_CompassAngle::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_BreakRotator_Roll) == 0x000060, "Member 'Umg_UI_C_CompassAngle::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_BreakRotator_Pitch) == 0x000064, "Member 'Umg_UI_C_CompassAngle::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_BreakRotator_Yaw) == 0x000068, "Member 'Umg_UI_C_CompassAngle::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_MakeRotationFromAxes_ReturnValue_1) == 0x00006C, "Member 'Umg_UI_C_CompassAngle::CallFunc_MakeRotationFromAxes_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_BreakRotator_Roll_1) == 0x000078, "Member 'Umg_UI_C_CompassAngle::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_BreakRotator_Pitch_1) == 0x00007C, "Member 'Umg_UI_C_CompassAngle::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_BreakRotator_Yaw_1) == 0x000080, "Member 'Umg_UI_C_CompassAngle::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_EqualExactly_VectorVector_ReturnValue) == 0x000084, "Member 'Umg_UI_C_CompassAngle::CallFunc_EqualExactly_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000088, "Member 'Umg_UI_C_CompassAngle::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_Add_FloatFloat_ReturnValue) == 0x00008C, "Member 'Umg_UI_C_CompassAngle::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000090, "Member 'Umg_UI_C_CompassAngle::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_GetPlayerCameraManager_ReturnValue_2) == 0x0000A0, "Member 'Umg_UI_C_CompassAngle::CallFunc_GetPlayerCameraManager_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'Umg_UI_C_CompassAngle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x0000AC, "Member 'Umg_UI_C_CompassAngle::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000B8, "Member 'Umg_UI_C_CompassAngle::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_GetPlayerCameraManager_ReturnValue_3) == 0x0000C8, "Member 'Umg_UI_C_CompassAngle::CallFunc_GetPlayerCameraManager_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_BreakVector_X) == 0x0000D0, "Member 'Umg_UI_C_CompassAngle::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_BreakVector_Y) == 0x0000D4, "Member 'Umg_UI_C_CompassAngle::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_BreakVector_Z) == 0x0000D8, "Member 'Umg_UI_C_CompassAngle::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_GetActorRightVector_ReturnValue_1) == 0x0000DC, "Member 'Umg_UI_C_CompassAngle::CallFunc_GetActorRightVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_DegAtan2_ReturnValue) == 0x0000E8, "Member 'Umg_UI_C_CompassAngle::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_GetActorForwardVector_ReturnValue_2) == 0x0000EC, "Member 'Umg_UI_C_CompassAngle::CallFunc_GetActorForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_MakeRotationFromAxes_ReturnValue_2) == 0x0000F8, "Member 'Umg_UI_C_CompassAngle::CallFunc_MakeRotationFromAxes_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_GetPlayerCameraManager_ReturnValue_4) == 0x000108, "Member 'Umg_UI_C_CompassAngle::CallFunc_GetPlayerCameraManager_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_BreakRotator_Roll_2) == 0x000110, "Member 'Umg_UI_C_CompassAngle::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_BreakRotator_Pitch_2) == 0x000114, "Member 'Umg_UI_C_CompassAngle::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_BreakRotator_Yaw_2) == 0x000118, "Member 'Umg_UI_C_CompassAngle::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x00011C, "Member 'Umg_UI_C_CompassAngle::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000128, "Member 'Umg_UI_C_CompassAngle::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x000134, "Member 'Umg_UI_C_CompassAngle::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_MakeRotationFromAxes_ReturnValue_3) == 0x000140, "Member 'Umg_UI_C_CompassAngle::CallFunc_MakeRotationFromAxes_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_BreakRotator_Roll_3) == 0x00014C, "Member 'Umg_UI_C_CompassAngle::CallFunc_BreakRotator_Roll_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_BreakRotator_Pitch_3) == 0x000150, "Member 'Umg_UI_C_CompassAngle::CallFunc_BreakRotator_Pitch_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_BreakRotator_Yaw_3) == 0x000154, "Member 'Umg_UI_C_CompassAngle::CallFunc_BreakRotator_Yaw_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000158, "Member 'Umg_UI_C_CompassAngle::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00015C, "Member 'Umg_UI_C_CompassAngle::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function umg_UI.umg_UI_C.calcSize
// 0x00F0 (0x00F0 - 0x0000)
struct Umg_UI_C_CalcSize final
{
public:
	struct FVector2D                              Size;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Min;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Max;                                               // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Origin;                                            // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             T;                                                 // 0x0020(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        CallFunc_BoundingBox2D_verts;                      // 0x0070(0x0010)(ReferenceParm)
	struct FVector2D                              CallFunc_BoundingBox2D_min;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BoundingBox2D_max;                        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BoundingBox2D_origin;                     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BoundingBox2D_size;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BoundingBox2D_clipX;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BoundingBox2D_clipY;                      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue_1;  // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x00C0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_UI_C_CalcSize) == 0x000010, "Wrong alignment on Umg_UI_C_CalcSize");
static_assert(sizeof(Umg_UI_C_CalcSize) == 0x0000F0, "Wrong size on Umg_UI_C_CalcSize");
static_assert(offsetof(Umg_UI_C_CalcSize, Size) == 0x000000, "Member 'Umg_UI_C_CalcSize::Size' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, Min) == 0x000008, "Member 'Umg_UI_C_CalcSize::Min' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, Max) == 0x000010, "Member 'Umg_UI_C_CalcSize::Max' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, Origin) == 0x000018, "Member 'Umg_UI_C_CalcSize::Origin' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, T) == 0x000020, "Member 'Umg_UI_C_CalcSize::T' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, CallFunc_GetViewportScale_ReturnValue) == 0x000050, "Member 'Umg_UI_C_CalcSize::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, CallFunc_GetPlayerController_ReturnValue) == 0x000058, "Member 'Umg_UI_C_CalcSize::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000060, "Member 'Umg_UI_C_CalcSize::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, CallFunc_MakeVector2D_ReturnValue) == 0x000064, "Member 'Umg_UI_C_CalcSize::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, CallFunc_BoundingBox2D_verts) == 0x000070, "Member 'Umg_UI_C_CalcSize::CallFunc_BoundingBox2D_verts' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, CallFunc_BoundingBox2D_min) == 0x000080, "Member 'Umg_UI_C_CalcSize::CallFunc_BoundingBox2D_min' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, CallFunc_BoundingBox2D_max) == 0x000088, "Member 'Umg_UI_C_CalcSize::CallFunc_BoundingBox2D_max' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, CallFunc_BoundingBox2D_origin) == 0x000090, "Member 'Umg_UI_C_CalcSize::CallFunc_BoundingBox2D_origin' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, CallFunc_BoundingBox2D_size) == 0x000098, "Member 'Umg_UI_C_CalcSize::CallFunc_BoundingBox2D_size' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, CallFunc_BoundingBox2D_clipX) == 0x0000A0, "Member 'Umg_UI_C_CalcSize::CallFunc_BoundingBox2D_clipX' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, CallFunc_BoundingBox2D_clipY) == 0x0000A1, "Member 'Umg_UI_C_CalcSize::CallFunc_BoundingBox2D_clipY' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000A4, "Member 'Umg_UI_C_CalcSize::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x0000AC, "Member 'Umg_UI_C_CalcSize::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, CallFunc_Multiply_Vector2DVector2D_ReturnValue_1) == 0x0000B4, "Member 'Umg_UI_C_CalcSize::CallFunc_Multiply_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0000C0, "Member 'Umg_UI_C_CalcSize::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");

// Function umg_UI.umg_UI_C.projectClamped
// 0x0050 (0x0050 - 0x0000)
struct Umg_UI_C_ProjectClamped final
{
public:
	struct FVector                                WorldLocation;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Vec;                                               // 0x000C(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_UI_C_ProjectClamped) == 0x000008, "Wrong alignment on Umg_UI_C_ProjectClamped");
static_assert(sizeof(Umg_UI_C_ProjectClamped) == 0x000050, "Wrong size on Umg_UI_C_ProjectClamped");
static_assert(offsetof(Umg_UI_C_ProjectClamped, WorldLocation) == 0x000000, "Member 'Umg_UI_C_ProjectClamped::WorldLocation' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProjectClamped, Vec) == 0x00000C, "Member 'Umg_UI_C_ProjectClamped::Vec' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProjectClamped, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'Umg_UI_C_ProjectClamped::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProjectClamped, CallFunc_BreakVector2D_X) == 0x000020, "Member 'Umg_UI_C_ProjectClamped::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProjectClamped, CallFunc_BreakVector2D_Y) == 0x000024, "Member 'Umg_UI_C_ProjectClamped::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProjectClamped, CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition) == 0x000028, "Member 'Umg_UI_C_ProjectClamped::CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProjectClamped, CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue) == 0x000030, "Member 'Umg_UI_C_ProjectClamped::CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProjectClamped, CallFunc_BreakVector2D_X_1) == 0x000034, "Member 'Umg_UI_C_ProjectClamped::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProjectClamped, CallFunc_BreakVector2D_Y_1) == 0x000038, "Member 'Umg_UI_C_ProjectClamped::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProjectClamped, CallFunc_FClamp_ReturnValue) == 0x00003C, "Member 'Umg_UI_C_ProjectClamped::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProjectClamped, CallFunc_FClamp_ReturnValue_1) == 0x000040, "Member 'Umg_UI_C_ProjectClamped::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProjectClamped, CallFunc_MakeVector2D_ReturnValue) == 0x000044, "Member 'Umg_UI_C_ProjectClamped::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function umg_UI.umg_UI_C.bbox
// 0x0078 (0x0078 - 0x0000)
struct Umg_UI_C_bbox final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue_Origin;                                // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue_BoxExtent;                             // 0x0014(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USphereComponent*                       K2Node_DynamicCast_AsSphere_Collision;             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue;                    // 0x003C(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          K2Node_DynamicCast_AsBox_Collision;                // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_UI_C_bbox) == 0x000008, "Wrong alignment on Umg_UI_C_bbox");
static_assert(sizeof(Umg_UI_C_bbox) == 0x000078, "Wrong size on Umg_UI_C_bbox");
static_assert(offsetof(Umg_UI_C_bbox, Object) == 0x000000, "Member 'Umg_UI_C_bbox::Object' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_bbox, ReturnValue_Origin) == 0x000008, "Member 'Umg_UI_C_bbox::ReturnValue_Origin' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_bbox, ReturnValue_BoxExtent) == 0x000014, "Member 'Umg_UI_C_bbox::ReturnValue_BoxExtent' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_bbox, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000020, "Member 'Umg_UI_C_bbox::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_bbox, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Umg_UI_C_bbox::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_bbox, K2Node_DynamicCast_AsSphere_Collision) == 0x000030, "Member 'Umg_UI_C_bbox::K2Node_DynamicCast_AsSphere_Collision' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_bbox, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'Umg_UI_C_bbox::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_bbox, CallFunc_GetBounds_ReturnValue) == 0x00003C, "Member 'Umg_UI_C_bbox::CallFunc_GetBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_bbox, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000058, "Member 'Umg_UI_C_bbox::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_bbox, CallFunc_Conv_FloatToVector_ReturnValue) == 0x00005C, "Member 'Umg_UI_C_bbox::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_bbox, K2Node_DynamicCast_AsBox_Collision) == 0x000068, "Member 'Umg_UI_C_bbox::K2Node_DynamicCast_AsBox_Collision' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_bbox, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'Umg_UI_C_bbox::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function umg_UI.umg_UI_C.updSelect
// 0x0018 (0x0018 - 0x0000)
struct Umg_UI_C_UpdSelect final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUmg_objectActionButton_C*              CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_UI_C_UpdSelect) == 0x000008, "Wrong alignment on Umg_UI_C_UpdSelect");
static_assert(sizeof(Umg_UI_C_UpdSelect) == 0x000018, "Wrong size on Umg_UI_C_UpdSelect");
static_assert(offsetof(Umg_UI_C_UpdSelect, Temp_int_Variable) == 0x000000, "Member 'Umg_UI_C_UpdSelect::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdSelect, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'Umg_UI_C_UpdSelect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdSelect, CallFunc_Array_Get_Item) == 0x000008, "Member 'Umg_UI_C_UpdSelect::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdSelect, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'Umg_UI_C_UpdSelect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdSelect, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'Umg_UI_C_UpdSelect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function umg_UI.umg_UI_C.buildActions
// 0x00E8 (0x00E8 - 0x0000)
struct Umg_UI_C_buildActions final
{
public:
	TArray<Enum_interactionActions>               Actions_enums;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class FString>                         Actions_names;                                     // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class FText>                           Actions_overlays;                                  // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UUmg_objectActionButton_C*              CallFunc_Create_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0040(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       CallFunc_Array_Get_Item_1;                         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Array_Get_Item_2;                         // 0x0088(0x0018)()
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUmg_objectActionButton_C*              CallFunc_Create_ReturnValue_1;                     // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_3;                         // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_1;                   // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_UI_C_buildActions) == 0x000008, "Wrong alignment on Umg_UI_C_buildActions");
static_assert(sizeof(Umg_UI_C_buildActions) == 0x0000E8, "Wrong size on Umg_UI_C_buildActions");
static_assert(offsetof(Umg_UI_C_buildActions, Actions_enums) == 0x000000, "Member 'Umg_UI_C_buildActions::Actions_enums' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, Actions_names) == 0x000010, "Member 'Umg_UI_C_buildActions::Actions_names' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, Actions_overlays) == 0x000020, "Member 'Umg_UI_C_buildActions::Actions_overlays' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Create_ReturnValue) == 0x000030, "Member 'Umg_UI_C_buildActions::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000038, "Member 'Umg_UI_C_buildActions::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'Umg_UI_C_buildActions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Array_Get_Item) == 0x000040, "Member 'Umg_UI_C_buildActions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'Umg_UI_C_buildActions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x00005C, "Member 'Umg_UI_C_buildActions::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'Umg_UI_C_buildActions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'Umg_UI_C_buildActions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'Umg_UI_C_buildActions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, Temp_int_Array_Index_Variable_1) == 0x00006C, "Member 'Umg_UI_C_buildActions::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'Umg_UI_C_buildActions::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000078, "Member 'Umg_UI_C_buildActions::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Array_Get_Item_2) == 0x000088, "Member 'Umg_UI_C_buildActions::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x0000A0, "Member 'Umg_UI_C_buildActions::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Create_ReturnValue_1) == 0x0000A8, "Member 'Umg_UI_C_buildActions::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Array_Get_Item_3) == 0x0000B0, "Member 'Umg_UI_C_buildActions::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Array_Add_ReturnValue) == 0x0000C0, "Member 'Umg_UI_C_buildActions::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Array_Length_ReturnValue_1) == 0x0000C4, "Member 'Umg_UI_C_buildActions::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_AddChild_ReturnValue) == 0x0000C8, "Member 'Umg_UI_C_buildActions::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, Temp_int_Loop_Counter_Variable_1) == 0x0000D0, "Member 'Umg_UI_C_buildActions::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D4, "Member 'Umg_UI_C_buildActions::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D8, "Member 'Umg_UI_C_buildActions::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Array_Add_ReturnValue_1) == 0x0000DC, "Member 'Umg_UI_C_buildActions::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_AddChild_ReturnValue_1) == 0x0000E0, "Member 'Umg_UI_C_buildActions::CallFunc_AddChild_ReturnValue_1' has a wrong offset!");

// Function umg_UI.umg_UI_C.clearActions
// 0x0018 (0x0018 - 0x0000)
struct Umg_UI_C_ClearActions final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUmg_objectActionButton_C*              CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_UI_C_ClearActions) == 0x000008, "Wrong alignment on Umg_UI_C_ClearActions");
static_assert(sizeof(Umg_UI_C_ClearActions) == 0x000018, "Wrong size on Umg_UI_C_ClearActions");
static_assert(offsetof(Umg_UI_C_ClearActions, Temp_int_Variable) == 0x000000, "Member 'Umg_UI_C_ClearActions::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ClearActions, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'Umg_UI_C_ClearActions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ClearActions, CallFunc_Array_Get_Item) == 0x000008, "Member 'Umg_UI_C_ClearActions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ClearActions, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'Umg_UI_C_ClearActions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ClearActions, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'Umg_UI_C_ClearActions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function umg_UI.umg_UI_C.updHovertext
// 0x0018 (0x0018 - 0x0000)
struct Umg_UI_C_UpdHovertext final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Umg_UI_C_UpdHovertext) == 0x000008, "Wrong alignment on Umg_UI_C_UpdHovertext");
static_assert(sizeof(Umg_UI_C_UpdHovertext) == 0x000018, "Wrong size on Umg_UI_C_UpdHovertext");
static_assert(offsetof(Umg_UI_C_UpdHovertext, InText) == 0x000000, "Member 'Umg_UI_C_UpdHovertext::InText' has a wrong offset!");

// Function umg_UI.umg_UI_C.updateSlotInv
// 0x01D8 (0x01D8 - 0x0000)
struct Umg_UI_C_UpdateSlotInv final
{
public:
	TArray<class FString>                         NmsTg;                                             // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Lst;                                               // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Is;                                                // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lastind;                                           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Listids;                                           // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Amts;                                              // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           Nms;                                               // 0x0040(0x0010)(Edit, BlueprintVisible)
	int32                                         I;                                                 // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStruct_save>                   Loc;                                               // 0x0058(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mObject                        CallFunc_Array_Get_Item;                           // 0x0088(0x0010)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item_1;                         // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             CallFunc_Array_Get_Item_2;                         // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_3;                         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_propToIcon_Output;                        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             CallFunc_Array_Get_Item_4;                         // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_5;                         // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0108(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mString                        CallFunc_Array_Get_Item_6;                         // 0x0140(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_7;                         // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_8;                         // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x01B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B7[0x1];                                      // 0x01B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x01B8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CallFunc_Array_Get_Item_9;                         // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_UI_C_UpdateSlotInv) == 0x000008, "Wrong alignment on Umg_UI_C_UpdateSlotInv");
static_assert(sizeof(Umg_UI_C_UpdateSlotInv) == 0x0001D8, "Wrong size on Umg_UI_C_UpdateSlotInv");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, NmsTg) == 0x000000, "Member 'Umg_UI_C_UpdateSlotInv::NmsTg' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, Lst) == 0x000010, "Member 'Umg_UI_C_UpdateSlotInv::Lst' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, Is) == 0x000014, "Member 'Umg_UI_C_UpdateSlotInv::Is' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, Lastind) == 0x000018, "Member 'Umg_UI_C_UpdateSlotInv::Lastind' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, Listids) == 0x000020, "Member 'Umg_UI_C_UpdateSlotInv::Listids' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, Amts) == 0x000030, "Member 'Umg_UI_C_UpdateSlotInv::Amts' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, Nms) == 0x000040, "Member 'Umg_UI_C_UpdateSlotInv::Nms' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, I) == 0x000050, "Member 'Umg_UI_C_UpdateSlotInv::I' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, Loc) == 0x000058, "Member 'Umg_UI_C_UpdateSlotInv::Loc' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, Temp_int_Variable) == 0x000068, "Member 'Umg_UI_C_UpdateSlotInv::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'Umg_UI_C_UpdateSlotInv::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Add_IntInt_ReturnValue_1) == 0x000074, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, Temp_int_Loop_Counter_Variable_1) == 0x000078, "Member 'Umg_UI_C_UpdateSlotInv::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Add_IntInt_ReturnValue_2) == 0x00007C, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, Temp_int_Array_Index_Variable) == 0x000080, "Member 'Umg_UI_C_UpdateSlotInv::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Get_Item) == 0x000088, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_LastIndex_ReturnValue) == 0x00009C, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Less_IntInt_ReturnValue) == 0x0000A0, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, Temp_int_Array_Index_Variable_1) == 0x0000A4, "Member 'Umg_UI_C_UpdateSlotInv::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000A8, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Get_Item_1) == 0x0000B0, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Get_Item_2) == 0x0000B8, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0000C0, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Get_Item_3) == 0x0000C8, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000D0, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Conv_NameToString_ReturnValue) == 0x0000D8, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_propToIcon_Output) == 0x0000E8, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_propToIcon_Output' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Add_ReturnValue) == 0x0000F0, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Get_Item_4) == 0x0000F8, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Get_Item_5) == 0x000100, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Conv_IntToText_ReturnValue) == 0x000108, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Length_ReturnValue_1) == 0x000120, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Less_IntInt_ReturnValue_1) == 0x000124, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, Temp_int_Variable_1) == 0x000128, "Member 'Umg_UI_C_UpdateSlotInv::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Add_IntInt_ReturnValue_3) == 0x00012C, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Add_ReturnValue_1) == 0x000130, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Add_ReturnValue_2) == 0x000134, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000138, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Get_Item_6) == 0x000140, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000150, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Get_Item_7) == 0x000158, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Get_Item_8) == 0x000168, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Concat_StrStr_ReturnValue) == 0x000178, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Conv_StringToName_ReturnValue) == 0x000188, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000190, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Add_ReturnValue_3) == 0x0001A0, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Find_ReturnValue) == 0x0001A4, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Add_ReturnValue_4) == 0x0001A8, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0001AC, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Add_IntInt_ReturnValue_4) == 0x0001B0, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_BooleanAND_ReturnValue) == 0x0001B4, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_IsEmpty_ReturnValue) == 0x0001B5, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_BooleanAND_ReturnValue_1) == 0x0001B6, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, Temp_int_Variable_2) == 0x0001B8, "Member 'Umg_UI_C_UpdateSlotInv::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, Temp_int_Variable_3) == 0x0001BC, "Member 'Umg_UI_C_UpdateSlotInv::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Add_ReturnValue_5) == 0x0001C0, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_LastIndex_ReturnValue_2) == 0x0001C4, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Get_Item_9) == 0x0001C8, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x0001D0, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");

// Function umg_UI.umg_UI_C.cusSelectHotbarSlot
// 0x0050 (0x0050 - 0x0000)
struct Umg_UI_C_CusSelectHotbarSlot final
{
public:
	int32                                         Ind_0;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_UI_C_CusSelectHotbarSlot) == 0x000008, "Wrong alignment on Umg_UI_C_CusSelectHotbarSlot");
static_assert(sizeof(Umg_UI_C_CusSelectHotbarSlot) == 0x000050, "Wrong size on Umg_UI_C_CusSelectHotbarSlot");
static_assert(offsetof(Umg_UI_C_CusSelectHotbarSlot, Ind_0) == 0x000000, "Member 'Umg_UI_C_CusSelectHotbarSlot::Ind_0' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CusSelectHotbarSlot, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000004, "Member 'Umg_UI_C_CusSelectHotbarSlot::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CusSelectHotbarSlot, CallFunc_IsVisible_ReturnValue) == 0x000005, "Member 'Umg_UI_C_CusSelectHotbarSlot::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CusSelectHotbarSlot, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'Umg_UI_C_CusSelectHotbarSlot::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CusSelectHotbarSlot, CallFunc_Array_Get_Item) == 0x00000C, "Member 'Umg_UI_C_CusSelectHotbarSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CusSelectHotbarSlot, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'Umg_UI_C_CusSelectHotbarSlot::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CusSelectHotbarSlot, CallFunc_Array_LastIndex_ReturnValue) == 0x000014, "Member 'Umg_UI_C_CusSelectHotbarSlot::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CusSelectHotbarSlot, CallFunc_MakeVector2D_ReturnValue) == 0x000018, "Member 'Umg_UI_C_CusSelectHotbarSlot::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CusSelectHotbarSlot, CallFunc_Array_Get_Item_1) == 0x000020, "Member 'Umg_UI_C_CusSelectHotbarSlot::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CusSelectHotbarSlot, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000024, "Member 'Umg_UI_C_CusSelectHotbarSlot::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CusSelectHotbarSlot, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'Umg_UI_C_CusSelectHotbarSlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CusSelectHotbarSlot, CallFunc_SelectInt_ReturnValue) == 0x00002C, "Member 'Umg_UI_C_CusSelectHotbarSlot::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CusSelectHotbarSlot, CallFunc_getMainPlayer_AsMain_Player) == 0x000030, "Member 'Umg_UI_C_CusSelectHotbarSlot::CallFunc_getMainPlayer_AsMain_Player' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CusSelectHotbarSlot, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'Umg_UI_C_CusSelectHotbarSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CusSelectHotbarSlot, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000040, "Member 'Umg_UI_C_CusSelectHotbarSlot::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CusSelectHotbarSlot, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000048, "Member 'Umg_UI_C_CusSelectHotbarSlot::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CusSelectHotbarSlot, CallFunc_BooleanAND_ReturnValue) == 0x000049, "Member 'Umg_UI_C_CusSelectHotbarSlot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function umg_UI.umg_UI_C.angleWheel
// 0x0060 (0x0060 - 0x0000)
struct Umg_UI_C_AngleWheel final
{
public:
	struct FVector2D                              Mouse;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Vector2DInterpTo_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_UI_C_AngleWheel) == 0x000008, "Wrong alignment on Umg_UI_C_AngleWheel");
static_assert(sizeof(Umg_UI_C_AngleWheel) == 0x000060, "Wrong size on Umg_UI_C_AngleWheel");
static_assert(offsetof(Umg_UI_C_AngleWheel, Mouse) == 0x000000, "Member 'Umg_UI_C_AngleWheel::Mouse' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_getMainPlayer_AsMain_Player) == 0x000008, "Member 'Umg_UI_C_AngleWheel::CallFunc_getMainPlayer_AsMain_Player' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000010, "Member 'Umg_UI_C_AngleWheel::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000014, "Member 'Umg_UI_C_AngleWheel::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_Vector2DInterpTo_ReturnValue) == 0x000018, "Member 'Umg_UI_C_AngleWheel::CallFunc_Vector2DInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_Normal2D_ReturnValue) == 0x000020, "Member 'Umg_UI_C_AngleWheel::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_VSize2D_ReturnValue) == 0x000028, "Member 'Umg_UI_C_AngleWheel::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_BreakVector2D_X) == 0x00002C, "Member 'Umg_UI_C_AngleWheel::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_BreakVector2D_Y) == 0x000030, "Member 'Umg_UI_C_AngleWheel::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000034, "Member 'Umg_UI_C_AngleWheel::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000038, "Member 'Umg_UI_C_AngleWheel::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_DegAtan2_ReturnValue) == 0x00003C, "Member 'Umg_UI_C_AngleWheel::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_Add_FloatFloat_ReturnValue) == 0x000040, "Member 'Umg_UI_C_AngleWheel::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000044, "Member 'Umg_UI_C_AngleWheel::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000048, "Member 'Umg_UI_C_AngleWheel::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00004C, "Member 'Umg_UI_C_AngleWheel::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000050, "Member 'Umg_UI_C_AngleWheel::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_Round_ReturnValue) == 0x000054, "Member 'Umg_UI_C_AngleWheel::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_Percent_IntInt_ReturnValue) == 0x000058, "Member 'Umg_UI_C_AngleWheel::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");

// Function umg_UI.umg_UI_C.updRadialText
// 0x00E8 (0x00E8 - 0x0000)
struct Umg_UI_C_UpdRadialText final
{
public:
	ETextJustify                                  Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUmg_radialText_C*                      CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Temp_byte_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Temp_byte_Variable_2;                              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUmg_radialText_C*                      CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetRotated2D_ReturnValue;                 // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETextJustify                                  K2Node_Select_Default;                             // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  K2Node_Select_Default_1;                           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUmg_objectActionButton_C*              CallFunc_Array_Get_Item_1;                         // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_UI_C_UpdRadialText) == 0x000008, "Wrong alignment on Umg_UI_C_UpdRadialText");
static_assert(sizeof(Umg_UI_C_UpdRadialText) == 0x0000E8, "Wrong size on Umg_UI_C_UpdRadialText");
static_assert(offsetof(Umg_UI_C_UpdRadialText, Temp_byte_Variable) == 0x000000, "Member 'Umg_UI_C_UpdRadialText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, Temp_int_Variable) == 0x000004, "Member 'Umg_UI_C_UpdRadialText::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Create_ReturnValue) == 0x000010, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, Temp_byte_Variable_1) == 0x000018, "Member 'Umg_UI_C_UpdRadialText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000020, "Member 'Umg_UI_C_UpdRadialText::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000028, "Member 'Umg_UI_C_UpdRadialText::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, Temp_bool_Variable) == 0x000030, "Member 'Umg_UI_C_UpdRadialText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000034, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, Temp_int_Array_Index_Variable) == 0x000038, "Member 'Umg_UI_C_UpdRadialText::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00003C, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000040, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Add_FloatFloat_ReturnValue) == 0x000044, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000048, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_MakeVector2D_ReturnValue) == 0x00004C, "Member 'Umg_UI_C_UpdRadialText::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, Temp_byte_Variable_2) == 0x000054, "Member 'Umg_UI_C_UpdRadialText::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, Temp_bool_Variable_1) == 0x000055, "Member 'Umg_UI_C_UpdRadialText::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000058, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x00005C, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Array_Get_Item) == 0x000060, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000068, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00006C, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000074, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_GetRotated2D_ReturnValue) == 0x00007C, "Member 'Umg_UI_C_UpdRadialText::CallFunc_GetRotated2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_BreakVector2D_X) == 0x000084, "Member 'Umg_UI_C_UpdRadialText::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_BreakVector2D_Y) == 0x000088, "Member 'Umg_UI_C_UpdRadialText::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x00008C, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000090, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Abs_ReturnValue) == 0x000094, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000098, "Member 'Umg_UI_C_UpdRadialText::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, K2Node_Select_Default) == 0x000099, "Member 'Umg_UI_C_UpdRadialText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_SelectFloat_ReturnValue) == 0x00009C, "Member 'Umg_UI_C_UpdRadialText::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, K2Node_Select_Default_1) == 0x0000A0, "Member 'Umg_UI_C_UpdRadialText::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_SelectFloat_ReturnValue_1) == 0x0000A4, "Member 'Umg_UI_C_UpdRadialText::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x0000A8, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x0000AC, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_AddChildToCanvas_ReturnValue) == 0x0000B0, "Member 'Umg_UI_C_UpdRadialText::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Lerp_ReturnValue) == 0x0000B8, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000BC, "Member 'Umg_UI_C_UpdRadialText::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Array_Add_ReturnValue) == 0x0000C4, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, Temp_int_Loop_Counter_Variable) == 0x0000C8, "Member 'Umg_UI_C_UpdRadialText::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Array_Get_Item_1) == 0x0000D0, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D8, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Array_Length_ReturnValue_1) == 0x0000DC, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E0, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function umg_UI.umg_UI_C.C
// 0x00B8 (0x00B8 - 0x0000)
struct Umg_UI_C_C final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ReturnValue;                                       // 0x0004(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_8;                            // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_UI_C_C) == 0x000004, "Wrong alignment on Umg_UI_C_C");
static_assert(sizeof(Umg_UI_C_C) == 0x0000B8, "Wrong size on Umg_UI_C_C");
static_assert(offsetof(Umg_UI_C_C, Index_0) == 0x000000, "Member 'Umg_UI_C_C::Index_0' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_C, ReturnValue) == 0x000004, "Member 'Umg_UI_C_C::ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_C, Temp_int_Variable) == 0x000014, "Member 'Umg_UI_C_C::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_C, Temp_struct_Variable) == 0x000018, "Member 'Umg_UI_C_C::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_C, Temp_struct_Variable_1) == 0x000028, "Member 'Umg_UI_C_C::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_C, Temp_struct_Variable_2) == 0x000038, "Member 'Umg_UI_C_C::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_C, Temp_struct_Variable_3) == 0x000048, "Member 'Umg_UI_C_C::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_C, Temp_struct_Variable_4) == 0x000058, "Member 'Umg_UI_C_C::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_C, Temp_struct_Variable_5) == 0x000068, "Member 'Umg_UI_C_C::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_C, Temp_struct_Variable_6) == 0x000078, "Member 'Umg_UI_C_C::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_C, Temp_struct_Variable_7) == 0x000088, "Member 'Umg_UI_C_C::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_C, Temp_struct_Variable_8) == 0x000098, "Member 'Umg_UI_C_C::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_C, K2Node_Select_Default) == 0x0000A8, "Member 'Umg_UI_C_C::K2Node_Select_Default' has a wrong offset!");

// Function umg_UI.umg_UI_C.processInt
// 0x01E0 (0x01E0 - 0x0000)
struct Umg_UI_C_ProcessInt final
{
public:
	TArray<uint8>                                 Dasasdasd;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class FString                                 R4;                                                // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 R3;                                                // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 R2;                                                // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 R1;                                                // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 NewLocalVar_1;                                     // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         NewLocalVar_0;                                     // 0x0070(0x0010)(Edit, BlueprintVisible)
	class FString                                 CallFunc_BytesToHex_ReturnValue;                   // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetCharacterArrayFromString_ReturnValue;  // 0x0090(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ToUpper_ReturnValue;                      // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A5[0x3];                                      // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_UI_C_ProcessInt) == 0x000008, "Wrong alignment on Umg_UI_C_ProcessInt");
static_assert(sizeof(Umg_UI_C_ProcessInt) == 0x0001E0, "Wrong size on Umg_UI_C_ProcessInt");
static_assert(offsetof(Umg_UI_C_ProcessInt, Dasasdasd) == 0x000000, "Member 'Umg_UI_C_ProcessInt::Dasasdasd' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, ReturnValue) == 0x000010, "Member 'Umg_UI_C_ProcessInt::ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, R4) == 0x000020, "Member 'Umg_UI_C_ProcessInt::R4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, R3) == 0x000030, "Member 'Umg_UI_C_ProcessInt::R3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, R2) == 0x000040, "Member 'Umg_UI_C_ProcessInt::R2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, R1) == 0x000050, "Member 'Umg_UI_C_ProcessInt::R1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, NewLocalVar_1) == 0x000060, "Member 'Umg_UI_C_ProcessInt::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, NewLocalVar_0) == 0x000070, "Member 'Umg_UI_C_ProcessInt::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, CallFunc_BytesToHex_ReturnValue) == 0x000080, "Member 'Umg_UI_C_ProcessInt::CallFunc_BytesToHex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, CallFunc_GetCharacterArrayFromString_ReturnValue) == 0x000090, "Member 'Umg_UI_C_ProcessInt::CallFunc_GetCharacterArrayFromString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, Temp_int_Variable) == 0x0000A0, "Member 'Umg_UI_C_ProcessInt::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000A4, "Member 'Umg_UI_C_ProcessInt::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'Umg_UI_C_ProcessInt::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, Temp_int_Variable_1) == 0x0000AC, "Member 'Umg_UI_C_ProcessInt::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000B0, "Member 'Umg_UI_C_ProcessInt::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B4, "Member 'Umg_UI_C_ProcessInt::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, Temp_int_Variable_2) == 0x0000B8, "Member 'Umg_UI_C_ProcessInt::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, Temp_int_Loop_Counter_Variable) == 0x0000BC, "Member 'Umg_UI_C_ProcessInt::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000C0, "Member 'Umg_UI_C_ProcessInt::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0000C4, "Member 'Umg_UI_C_ProcessInt::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000C8, "Member 'Umg_UI_C_ProcessInt::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, Temp_int_Array_Index_Variable) == 0x0000CC, "Member 'Umg_UI_C_ProcessInt::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'Umg_UI_C_ProcessInt::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'Umg_UI_C_ProcessInt::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, CallFunc_ToUpper_ReturnValue) == 0x0000E8, "Member 'Umg_UI_C_ProcessInt::CallFunc_ToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, CallFunc_Less_IntInt_ReturnValue) == 0x0000F8, "Member 'Umg_UI_C_ProcessInt::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, CallFunc_Concat_StrStr_ReturnValue) == 0x000100, "Member 'Umg_UI_C_ProcessInt::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000110, "Member 'Umg_UI_C_ProcessInt::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000120, "Member 'Umg_UI_C_ProcessInt::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000130, "Member 'Umg_UI_C_ProcessInt::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000140, "Member 'Umg_UI_C_ProcessInt::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000150, "Member 'Umg_UI_C_ProcessInt::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000160, "Member 'Umg_UI_C_ProcessInt::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000170, "Member 'Umg_UI_C_ProcessInt::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000180, "Member 'Umg_UI_C_ProcessInt::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000190, "Member 'Umg_UI_C_ProcessInt::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, Temp_int_Variable_3) == 0x0001A0, "Member 'Umg_UI_C_ProcessInt::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x0001A4, "Member 'Umg_UI_C_ProcessInt::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, CallFunc_Add_IntInt_ReturnValue_4) == 0x0001A8, "Member 'Umg_UI_C_ProcessInt::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, CallFunc_Concat_StrStr_ReturnValue_10) == 0x0001B0, "Member 'Umg_UI_C_ProcessInt::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, CallFunc_Concat_StrStr_ReturnValue_11) == 0x0001C0, "Member 'Umg_UI_C_ProcessInt::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProcessInt, CallFunc_Concat_StrStr_ReturnValue_12) == 0x0001D0, "Member 'Umg_UI_C_ProcessInt::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");

// Function umg_UI.umg_UI_C.setFungunValues
// 0x01B0 (0x01B0 - 0x0000)
struct Umg_UI_C_SetFungunValues final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Ammo;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxAmmo;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Sec;                                               // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ReferenceParm)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0070(0x0018)()
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0040)(HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00D8(0x0028)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0100(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0148(0x0010)(ReferenceParm)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0168(0x0018)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0180(0x0028)()
	ESlateVisibility                              Temp_byte_Variable;                                // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_UI_C_SetFungunValues) == 0x000008, "Wrong alignment on Umg_UI_C_SetFungunValues");
static_assert(sizeof(Umg_UI_C_SetFungunValues) == 0x0001B0, "Wrong size on Umg_UI_C_SetFungunValues");
static_assert(offsetof(Umg_UI_C_SetFungunValues, Enabled) == 0x000000, "Member 'Umg_UI_C_SetFungunValues::Enabled' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_SetFungunValues, Ammo) == 0x000004, "Member 'Umg_UI_C_SetFungunValues::Ammo' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_SetFungunValues, MaxAmmo) == 0x000008, "Member 'Umg_UI_C_SetFungunValues::MaxAmmo' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_SetFungunValues, Sec) == 0x00000C, "Member 'Umg_UI_C_SetFungunValues::Sec' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_SetFungunValues, Temp_bool_Variable) == 0x000010, "Member 'Umg_UI_C_SetFungunValues::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_SetFungunValues, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'Umg_UI_C_SetFungunValues::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_SetFungunValues, K2Node_MakeArray_Array) == 0x000058, "Member 'Umg_UI_C_SetFungunValues::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_SetFungunValues, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000068, "Member 'Umg_UI_C_SetFungunValues::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_SetFungunValues, CallFunc_Format_ReturnValue) == 0x000070, "Member 'Umg_UI_C_SetFungunValues::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_SetFungunValues, CallFunc_SelectColor_ReturnValue) == 0x000088, "Member 'Umg_UI_C_SetFungunValues::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_SetFungunValues, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'Umg_UI_C_SetFungunValues::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_SetFungunValues, K2Node_MakeStruct_SlateColor) == 0x0000D8, "Member 'Umg_UI_C_SetFungunValues::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_SetFungunValues, K2Node_MakeStruct_FormatArgumentData_2) == 0x000100, "Member 'Umg_UI_C_SetFungunValues::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_SetFungunValues, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000140, "Member 'Umg_UI_C_SetFungunValues::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_SetFungunValues, K2Node_MakeArray_Array_1) == 0x000148, "Member 'Umg_UI_C_SetFungunValues::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_SetFungunValues, CallFunc_SelectColor_ReturnValue_1) == 0x000158, "Member 'Umg_UI_C_SetFungunValues::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_SetFungunValues, CallFunc_Format_ReturnValue_1) == 0x000168, "Member 'Umg_UI_C_SetFungunValues::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_SetFungunValues, K2Node_MakeStruct_SlateColor_1) == 0x000180, "Member 'Umg_UI_C_SetFungunValues::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_SetFungunValues, Temp_byte_Variable) == 0x0001A8, "Member 'Umg_UI_C_SetFungunValues::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_SetFungunValues, Temp_byte_Variable_1) == 0x0001A9, "Member 'Umg_UI_C_SetFungunValues::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_SetFungunValues, K2Node_Select_Default) == 0x0001AA, "Member 'Umg_UI_C_SetFungunValues::K2Node_Select_Default' has a wrong offset!");

// Function umg_UI.umg_UI_C.removeEquipmentByName
// 0x0014 (0x0014 - 0x0000)
struct Umg_UI_C_RemoveEquipmentByName final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Drop;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveEquipment_return;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_UI_C_RemoveEquipmentByName) == 0x000004, "Wrong alignment on Umg_UI_C_RemoveEquipmentByName");
static_assert(sizeof(Umg_UI_C_RemoveEquipmentByName) == 0x000014, "Wrong size on Umg_UI_C_RemoveEquipmentByName");
static_assert(offsetof(Umg_UI_C_RemoveEquipmentByName, Name_0) == 0x000000, "Member 'Umg_UI_C_RemoveEquipmentByName::Name_0' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_RemoveEquipmentByName, Drop) == 0x000008, "Member 'Umg_UI_C_RemoveEquipmentByName::Drop' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_RemoveEquipmentByName, CallFunc_Array_Find_ReturnValue) == 0x00000C, "Member 'Umg_UI_C_RemoveEquipmentByName::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_RemoveEquipmentByName, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'Umg_UI_C_RemoveEquipmentByName::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_RemoveEquipmentByName, CallFunc_RemoveEquipment_return) == 0x000011, "Member 'Umg_UI_C_RemoveEquipmentByName::CallFunc_RemoveEquipment_return' has a wrong offset!");

// Function umg_UI.umg_UI_C.dreamInv
// 0x0018 (0x0018 - 0x0000)
struct Umg_UI_C_DreamInv final
{
public:
	TArray<struct FStruct_save>                   Invv;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class ADreamBase_C*                           Base;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_UI_C_DreamInv) == 0x000008, "Wrong alignment on Umg_UI_C_DreamInv");
static_assert(sizeof(Umg_UI_C_DreamInv) == 0x000018, "Wrong size on Umg_UI_C_DreamInv");
static_assert(offsetof(Umg_UI_C_DreamInv, Invv) == 0x000000, "Member 'Umg_UI_C_DreamInv::Invv' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_DreamInv, Base) == 0x000010, "Member 'Umg_UI_C_DreamInv::Base' has a wrong offset!");

}

