#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VoidMod_Config

#include "Basic.hpp"

#include "VoidMod_ConfigVariable_structs.hpp"


namespace SDK::Params
{

// Function VoidMod_Config.VoidMod_Config_C.Get Config Variable Default Value
// 0x00B8 (0x00B8 - 0x0000)
struct VoidMod_Config_C_Get_Config_Variable_Default_Value final
{
public:
	class FString                                 Mod_Id;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Variable_Id;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Default_Value;                                     // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Exists;                                            // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AVoidModInstance_C*                     CallFunc_GetVoidmodInstance_Instance;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVoidMod_ConfigVariable                CallFunc_Array_Get_Item;                           // 0x0050(0x0050)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VoidMod_Config_C_Get_Config_Variable_Default_Value) == 0x000008, "Wrong alignment on VoidMod_Config_C_Get_Config_Variable_Default_Value");
static_assert(sizeof(VoidMod_Config_C_Get_Config_Variable_Default_Value) == 0x0000B8, "Wrong size on VoidMod_Config_C_Get_Config_Variable_Default_Value");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Default_Value, Mod_Id) == 0x000000, "Member 'VoidMod_Config_C_Get_Config_Variable_Default_Value::Mod_Id' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Default_Value, Variable_Id) == 0x000010, "Member 'VoidMod_Config_C_Get_Config_Variable_Default_Value::Variable_Id' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Default_Value, __WorldContext) == 0x000020, "Member 'VoidMod_Config_C_Get_Config_Variable_Default_Value::__WorldContext' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Default_Value, Default_Value) == 0x000028, "Member 'VoidMod_Config_C_Get_Config_Variable_Default_Value::Default_Value' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Default_Value, Exists) == 0x000038, "Member 'VoidMod_Config_C_Get_Config_Variable_Default_Value::Exists' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Default_Value, CallFunc_GetVoidmodInstance_Instance) == 0x000040, "Member 'VoidMod_Config_C_Get_Config_Variable_Default_Value::CallFunc_GetVoidmodInstance_Instance' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Default_Value, Temp_int_Array_Index_Variable) == 0x000048, "Member 'VoidMod_Config_C_Get_Config_Variable_Default_Value::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Default_Value, CallFunc_Array_Get_Item) == 0x000050, "Member 'VoidMod_Config_C_Get_Config_Variable_Default_Value::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Default_Value, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'VoidMod_Config_C_Get_Config_Variable_Default_Value::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Default_Value, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'VoidMod_Config_C_Get_Config_Variable_Default_Value::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Default_Value, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'VoidMod_Config_C_Get_Config_Variable_Default_Value::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Default_Value, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'VoidMod_Config_C_Get_Config_Variable_Default_Value::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Default_Value, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000B0, "Member 'VoidMod_Config_C_Get_Config_Variable_Default_Value::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Default_Value, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x0000B1, "Member 'VoidMod_Config_C_Get_Config_Variable_Default_Value::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Default_Value, CallFunc_BooleanAND_ReturnValue) == 0x0000B2, "Member 'VoidMod_Config_C_Get_Config_Variable_Default_Value::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function VoidMod_Config.VoidMod_Config_C.Get Config Variable Description
// 0x00B8 (0x00B8 - 0x0000)
struct VoidMod_Config_C_Get_Config_Variable_Description final
{
public:
	class FString                                 Mod_Id;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Variable_Id;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Description;                                       // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Exists;                                            // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AVoidModInstance_C*                     CallFunc_GetVoidmodInstance_Instance;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVoidMod_ConfigVariable                CallFunc_Array_Get_Item;                           // 0x0050(0x0050)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VoidMod_Config_C_Get_Config_Variable_Description) == 0x000008, "Wrong alignment on VoidMod_Config_C_Get_Config_Variable_Description");
static_assert(sizeof(VoidMod_Config_C_Get_Config_Variable_Description) == 0x0000B8, "Wrong size on VoidMod_Config_C_Get_Config_Variable_Description");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Description, Mod_Id) == 0x000000, "Member 'VoidMod_Config_C_Get_Config_Variable_Description::Mod_Id' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Description, Variable_Id) == 0x000010, "Member 'VoidMod_Config_C_Get_Config_Variable_Description::Variable_Id' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Description, __WorldContext) == 0x000020, "Member 'VoidMod_Config_C_Get_Config_Variable_Description::__WorldContext' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Description, Description) == 0x000028, "Member 'VoidMod_Config_C_Get_Config_Variable_Description::Description' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Description, Exists) == 0x000038, "Member 'VoidMod_Config_C_Get_Config_Variable_Description::Exists' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Description, CallFunc_GetVoidmodInstance_Instance) == 0x000040, "Member 'VoidMod_Config_C_Get_Config_Variable_Description::CallFunc_GetVoidmodInstance_Instance' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Description, Temp_int_Array_Index_Variable) == 0x000048, "Member 'VoidMod_Config_C_Get_Config_Variable_Description::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Description, CallFunc_Array_Get_Item) == 0x000050, "Member 'VoidMod_Config_C_Get_Config_Variable_Description::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Description, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'VoidMod_Config_C_Get_Config_Variable_Description::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Description, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'VoidMod_Config_C_Get_Config_Variable_Description::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Description, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'VoidMod_Config_C_Get_Config_Variable_Description::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Description, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'VoidMod_Config_C_Get_Config_Variable_Description::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Description, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000B0, "Member 'VoidMod_Config_C_Get_Config_Variable_Description::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Description, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x0000B1, "Member 'VoidMod_Config_C_Get_Config_Variable_Description::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Description, CallFunc_BooleanAND_ReturnValue) == 0x0000B2, "Member 'VoidMod_Config_C_Get_Config_Variable_Description::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function VoidMod_Config.VoidMod_Config_C.Get Config Variable Pure
// 0x0058 (0x0058 - 0x0000)
struct VoidMod_Config_C_Get_Config_Variable_Pure final
{
public:
	class FString                                 ModID;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 VariableId;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Value;                                             // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Exists;                                            // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Get_Config_Variable_Value;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Config_Variable_Exists;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VoidMod_Config_C_Get_Config_Variable_Pure) == 0x000008, "Wrong alignment on VoidMod_Config_C_Get_Config_Variable_Pure");
static_assert(sizeof(VoidMod_Config_C_Get_Config_Variable_Pure) == 0x000058, "Wrong size on VoidMod_Config_C_Get_Config_Variable_Pure");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Pure, ModID) == 0x000000, "Member 'VoidMod_Config_C_Get_Config_Variable_Pure::ModID' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Pure, VariableId) == 0x000010, "Member 'VoidMod_Config_C_Get_Config_Variable_Pure::VariableId' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Pure, __WorldContext) == 0x000020, "Member 'VoidMod_Config_C_Get_Config_Variable_Pure::__WorldContext' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Pure, Value) == 0x000028, "Member 'VoidMod_Config_C_Get_Config_Variable_Pure::Value' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Pure, Exists) == 0x000038, "Member 'VoidMod_Config_C_Get_Config_Variable_Pure::Exists' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Pure, CallFunc_Get_Config_Variable_Value) == 0x000040, "Member 'VoidMod_Config_C_Get_Config_Variable_Pure::CallFunc_Get_Config_Variable_Value' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable_Pure, CallFunc_Get_Config_Variable_Exists) == 0x000050, "Member 'VoidMod_Config_C_Get_Config_Variable_Pure::CallFunc_Get_Config_Variable_Exists' has a wrong offset!");

// Function VoidMod_Config.VoidMod_Config_C.Get Config Variable
// 0x0100 (0x0100 - 0x0000)
struct VoidMod_Config_C_Get_Config_Variable final
{
public:
	class FString                                 ModID;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 VariableId;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Value;                                             // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Exists;                                            // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AVoidModInstance_C*                     CallFunc_GetVoidmodInstance_Instance;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVoidMod_ConfigVariable>        CallFunc_Reload_Config_Variables_LoadedConfigVars; // 0x0048(0x0010)(ReferenceParm)
	class FString                                 CallFunc_ToLower_ReturnValue;                      // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVoidMod_ConfigVariable                CallFunc_Array_Get_Item;                           // 0x0068(0x0050)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ToLower_ReturnValue_1;                    // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ToLower_ReturnValue_2;                    // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ToLower_ReturnValue_3;                    // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F2[0x2];                                       // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VoidMod_Config_C_Get_Config_Variable) == 0x000008, "Wrong alignment on VoidMod_Config_C_Get_Config_Variable");
static_assert(sizeof(VoidMod_Config_C_Get_Config_Variable) == 0x000100, "Wrong size on VoidMod_Config_C_Get_Config_Variable");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable, ModID) == 0x000000, "Member 'VoidMod_Config_C_Get_Config_Variable::ModID' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable, VariableId) == 0x000010, "Member 'VoidMod_Config_C_Get_Config_Variable::VariableId' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable, __WorldContext) == 0x000020, "Member 'VoidMod_Config_C_Get_Config_Variable::__WorldContext' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable, Value) == 0x000028, "Member 'VoidMod_Config_C_Get_Config_Variable::Value' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable, Exists) == 0x000038, "Member 'VoidMod_Config_C_Get_Config_Variable::Exists' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'VoidMod_Config_C_Get_Config_Variable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable, CallFunc_GetVoidmodInstance_Instance) == 0x000040, "Member 'VoidMod_Config_C_Get_Config_Variable::CallFunc_GetVoidmodInstance_Instance' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable, CallFunc_Reload_Config_Variables_LoadedConfigVars) == 0x000048, "Member 'VoidMod_Config_C_Get_Config_Variable::CallFunc_Reload_Config_Variables_LoadedConfigVars' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable, CallFunc_ToLower_ReturnValue) == 0x000058, "Member 'VoidMod_Config_C_Get_Config_Variable::CallFunc_ToLower_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable, CallFunc_Array_Get_Item) == 0x000068, "Member 'VoidMod_Config_C_Get_Config_Variable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'VoidMod_Config_C_Get_Config_Variable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable, CallFunc_ToLower_ReturnValue_1) == 0x0000C0, "Member 'VoidMod_Config_C_Get_Config_Variable::CallFunc_ToLower_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable, CallFunc_ToLower_ReturnValue_2) == 0x0000D0, "Member 'VoidMod_Config_C_Get_Config_Variable::CallFunc_ToLower_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable, CallFunc_ToLower_ReturnValue_3) == 0x0000E0, "Member 'VoidMod_Config_C_Get_Config_Variable::CallFunc_ToLower_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000F0, "Member 'VoidMod_Config_C_Get_Config_Variable::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x0000F1, "Member 'VoidMod_Config_C_Get_Config_Variable::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable, Temp_int_Loop_Counter_Variable) == 0x0000F4, "Member 'VoidMod_Config_C_Get_Config_Variable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable, CallFunc_BooleanAND_ReturnValue) == 0x0000F8, "Member 'VoidMod_Config_C_Get_Config_Variable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable, CallFunc_Less_IntInt_ReturnValue) == 0x0000F9, "Member 'VoidMod_Config_C_Get_Config_Variable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Get_Config_Variable, CallFunc_Add_IntInt_ReturnValue) == 0x0000FC, "Member 'VoidMod_Config_C_Get_Config_Variable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function VoidMod_Config.VoidMod_Config_C.Set Config Variable
// 0x01B0 (0x01B0 - 0x0000)
struct VoidMod_Config_C_Set_Config_Variable final
{
public:
	class FString                                 ModID;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 VariableId;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Value;                                             // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVoidMod_ConfigVariable>        CallFunc_Reload_Config_Variables_LoadedConfigVars; // 0x0038(0x0010)(ReferenceParm)
	class AVoidModInstance_C*                     CallFunc_GetVoidmodInstance_Instance;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVoidMod_ConfigVariable                K2Node_MakeStruct_VoidMod_ConfigVariable;          // 0x0050(0x0050)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ToLower_ReturnValue;                      // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ToLower_ReturnValue_1;                    // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVoidMod_ConfigVariable                CallFunc_Array_Get_Item;                           // 0x00D8(0x0050)(ZeroConstructor, HasGetValueTypeHash)
	struct FVoidMod_ConfigVariable                K2Node_MakeStruct_VoidMod_ConfigVariable_1;        // 0x0128(0x0050)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ToLower_ReturnValue_2;                    // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ToLower_ReturnValue_3;                    // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VoidMod_Config_C_Set_Config_Variable) == 0x000008, "Wrong alignment on VoidMod_Config_C_Set_Config_Variable");
static_assert(sizeof(VoidMod_Config_C_Set_Config_Variable) == 0x0001B0, "Wrong size on VoidMod_Config_C_Set_Config_Variable");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Variable, ModID) == 0x000000, "Member 'VoidMod_Config_C_Set_Config_Variable::ModID' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Variable, VariableId) == 0x000010, "Member 'VoidMod_Config_C_Set_Config_Variable::VariableId' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Variable, Value) == 0x000020, "Member 'VoidMod_Config_C_Set_Config_Variable::Value' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Variable, __WorldContext) == 0x000030, "Member 'VoidMod_Config_C_Set_Config_Variable::__WorldContext' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Variable, CallFunc_Reload_Config_Variables_LoadedConfigVars) == 0x000038, "Member 'VoidMod_Config_C_Set_Config_Variable::CallFunc_Reload_Config_Variables_LoadedConfigVars' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Variable, CallFunc_GetVoidmodInstance_Instance) == 0x000048, "Member 'VoidMod_Config_C_Set_Config_Variable::CallFunc_GetVoidmodInstance_Instance' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Variable, K2Node_MakeStruct_VoidMod_ConfigVariable) == 0x000050, "Member 'VoidMod_Config_C_Set_Config_Variable::K2Node_MakeStruct_VoidMod_ConfigVariable' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Variable, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'VoidMod_Config_C_Set_Config_Variable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Variable, CallFunc_Array_Add_ReturnValue) == 0x0000A4, "Member 'VoidMod_Config_C_Set_Config_Variable::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Variable, CallFunc_ToLower_ReturnValue) == 0x0000A8, "Member 'VoidMod_Config_C_Set_Config_Variable::CallFunc_ToLower_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Variable, CallFunc_ToLower_ReturnValue_1) == 0x0000B8, "Member 'VoidMod_Config_C_Set_Config_Variable::CallFunc_ToLower_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Variable, Temp_int_Loop_Counter_Variable) == 0x0000C8, "Member 'VoidMod_Config_C_Set_Config_Variable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Variable, Temp_int_Array_Index_Variable) == 0x0000CC, "Member 'VoidMod_Config_C_Set_Config_Variable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Variable, CallFunc_Less_IntInt_ReturnValue) == 0x0000D0, "Member 'VoidMod_Config_C_Set_Config_Variable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Variable, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'VoidMod_Config_C_Set_Config_Variable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Variable, K2Node_MakeStruct_VoidMod_ConfigVariable_1) == 0x000128, "Member 'VoidMod_Config_C_Set_Config_Variable::K2Node_MakeStruct_VoidMod_ConfigVariable_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Variable, CallFunc_ToLower_ReturnValue_2) == 0x000178, "Member 'VoidMod_Config_C_Set_Config_Variable::CallFunc_ToLower_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Variable, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000188, "Member 'VoidMod_Config_C_Set_Config_Variable::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Variable, CallFunc_ToLower_ReturnValue_3) == 0x000190, "Member 'VoidMod_Config_C_Set_Config_Variable::CallFunc_ToLower_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Variable, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x0001A0, "Member 'VoidMod_Config_C_Set_Config_Variable::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Variable, CallFunc_Add_IntInt_ReturnValue) == 0x0001A4, "Member 'VoidMod_Config_C_Set_Config_Variable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Variable, CallFunc_BooleanAND_ReturnValue) == 0x0001A8, "Member 'VoidMod_Config_C_Set_Config_Variable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function VoidMod_Config.VoidMod_Config_C.Write Config Variables
// 0x02F0 (0x02F0 - 0x0000)
struct VoidMod_Config_C_Write_Config_Variables final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CategoryContents;                                  // 0x0008(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         ExportCategories;                                  // 0x0018(0x0010)(Edit, BlueprintVisible)
	class FString                                 FileContent;                                       // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0038(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class AVoidModInstance_C*                     CallFunc_GetVoidmodInstance_Instance;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVoidMod_ConfigVariable                CallFunc_Array_Get_Item;                           // 0x0068(0x0050)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_TrimTrailing_ReturnValue;                 // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Get_Config_Variable_Description_Description; // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Config_Variable_Description_Exists;   // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue_1;                    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartsWith_ReturnValue;                   // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue_2;               // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_3;               // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_4;               // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue_2;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_VictoryPaths__GameRootDirectory_ReturnValue; // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_FileIO__SaveStringTextToFile_ReturnValue; // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_AppendMultiple_ReturnValue;               // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_2;                         // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_AppendMultiple_ReturnValue_1;             // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_AppendMultiple_ReturnValue_2;             // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_AppendMultiple_ReturnValue_3;             // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_3;                         // 0x0228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_AppendMultiple_ReturnValue_4;             // 0x0238(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_AppendMultiple_ReturnValue_5;             // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue_1;                 // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_AppendMultiple_ReturnValue_6;             // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_AppendMultiple_ReturnValue_7;             // 0x0280(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_AppendMultiple_ReturnValue_8;             // 0x0290(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_AppendMultiple_ReturnValue_9;             // 0x02A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_AppendMultiple_ReturnValue_10;            // 0x02B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_AppendMultiple_ReturnValue_11;            // 0x02C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_AppendMultiple_ReturnValue_12;            // 0x02D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_AppendMultiple_ReturnValue_13;            // 0x02E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(VoidMod_Config_C_Write_Config_Variables) == 0x000008, "Wrong alignment on VoidMod_Config_C_Write_Config_Variables");
static_assert(sizeof(VoidMod_Config_C_Write_Config_Variables) == 0x0002F0, "Wrong size on VoidMod_Config_C_Write_Config_Variables");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, __WorldContext) == 0x000000, "Member 'VoidMod_Config_C_Write_Config_Variables::__WorldContext' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CategoryContents) == 0x000008, "Member 'VoidMod_Config_C_Write_Config_Variables::CategoryContents' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, ExportCategories) == 0x000018, "Member 'VoidMod_Config_C_Write_Config_Variables::ExportCategories' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, FileContent) == 0x000028, "Member 'VoidMod_Config_C_Write_Config_Variables::FileContent' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, Temp_string_Variable) == 0x000038, "Member 'VoidMod_Config_C_Write_Config_Variables::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_GetVoidmodInstance_Instance) == 0x000048, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_GetVoidmodInstance_Instance' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, Temp_int_Array_Index_Variable) == 0x000050, "Member 'VoidMod_Config_C_Write_Config_Variables::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'VoidMod_Config_C_Write_Config_Variables::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, Temp_int_Array_Index_Variable_1) == 0x000064, "Member 'VoidMod_Config_C_Write_Config_Variables::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_Array_Get_Item) == 0x000068, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_TrimTrailing_ReturnValue) == 0x0000B8, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_TrimTrailing_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_IsEmpty_ReturnValue) == 0x0000C8, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000C9, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_SelectString_ReturnValue) == 0x0000D0, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_SelectString_ReturnValue_1) == 0x0000E0, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_Get_Config_Variable_Description_Description) == 0x0000F0, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_Get_Config_Variable_Description_Description' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_Get_Config_Variable_Description_Exists) == 0x000100, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_Get_Config_Variable_Description_Exists' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_Replace_ReturnValue) == 0x000108, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_Concat_StrStr_ReturnValue) == 0x000118, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_IsEmpty_ReturnValue_1) == 0x000128, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_IsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000130, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_StartsWith_ReturnValue) == 0x000140, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_StartsWith_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_SelectString_ReturnValue_2) == 0x000148, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_SelectString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_SelectString_ReturnValue_3) == 0x000158, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_SelectString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_SelectString_ReturnValue_4) == 0x000168, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_SelectString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_IsEmpty_ReturnValue_2) == 0x000178, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_IsEmpty_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_VictoryPaths__GameRootDirectory_ReturnValue) == 0x000180, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_VictoryPaths__GameRootDirectory_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000190, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_Array_Get_Item_1) == 0x0001A0, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_FileIO__SaveStringTextToFile_ReturnValue) == 0x0001B0, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_FileIO__SaveStringTextToFile_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_AppendMultiple_ReturnValue) == 0x0001B8, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_AppendMultiple_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_Array_Get_Item_2) == 0x0001C8, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_Array_Length_ReturnValue_1) == 0x0001D8, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_AppendMultiple_ReturnValue_1) == 0x0001E0, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_AppendMultiple_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, Temp_int_Loop_Counter_Variable_1) == 0x0001F0, "Member 'VoidMod_Config_C_Write_Config_Variables::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_AppendMultiple_ReturnValue_2) == 0x0001F8, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_AppendMultiple_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_AppendMultiple_ReturnValue_3) == 0x000208, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_AppendMultiple_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_Less_IntInt_ReturnValue_1) == 0x000218, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_Add_IntInt_ReturnValue_1) == 0x00021C, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_Array_Find_ReturnValue) == 0x000220, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_Array_Add_ReturnValue) == 0x000224, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_Array_Get_Item_3) == 0x000228, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_AppendMultiple_ReturnValue_4) == 0x000238, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_AppendMultiple_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_Array_Add_ReturnValue_1) == 0x000248, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_AppendMultiple_ReturnValue_5) == 0x000250, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_AppendMultiple_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_Array_Find_ReturnValue_1) == 0x000260, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_Array_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_AppendMultiple_ReturnValue_6) == 0x000268, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_AppendMultiple_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000278, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_AppendMultiple_ReturnValue_7) == 0x000280, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_AppendMultiple_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_AppendMultiple_ReturnValue_8) == 0x000290, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_AppendMultiple_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_AppendMultiple_ReturnValue_9) == 0x0002A0, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_AppendMultiple_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_AppendMultiple_ReturnValue_10) == 0x0002B0, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_AppendMultiple_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_AppendMultiple_ReturnValue_11) == 0x0002C0, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_AppendMultiple_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_AppendMultiple_ReturnValue_12) == 0x0002D0, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_AppendMultiple_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Write_Config_Variables, CallFunc_AppendMultiple_ReturnValue_13) == 0x0002E0, "Member 'VoidMod_Config_C_Write_Config_Variables::CallFunc_AppendMultiple_ReturnValue_13' has a wrong offset!");

// Function VoidMod_Config.VoidMod_Config_C.Reload Config Variables
// 0x0240 (0x0240 - 0x0000)
struct VoidMod_Config_C_Reload_Config_Variables final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVoidMod_ConfigVariable>        LoadedConfigVars;                                  // 0x0008(0x0010)(Parm, OutParm)
	class FString                                 CurrentVariableType;                               // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         ConfigFile;                                        // 0x0028(0x0010)(Edit, BlueprintVisible)
	class FString                                 CurrentMod;                                        // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class AVoidModInstance_C*                     CallFunc_GetVoidmodInstance_Instance;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Split_LeftS;                              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Trim_ReturnValue;                         // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_TrimTrailing_ReturnValue;                 // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartsWith_ReturnValue;                   // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartsWith_ReturnValue_1;                 // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F2[0x2];                                       // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Len_ReturnValue;                          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartsWith_ReturnValue_2;                 // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StriStri_ReturnValue;            // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ToLower_ReturnValue;                      // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_2;               // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Get_Config_Variable_Description_Description; // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Config_Variable_Description_Exists;   // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Get_Config_Variable_Default_Value_Default_Value; // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Config_Variable_Default_Value_Exists; // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVoidMod_ConfigVariable                K2Node_MakeStruct_VoidMod_ConfigVariable;          // 0x0188(0x0050)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DD[0x3];                                      // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVoidMod_ConfigVariable>        K2Node_MakeArray_Array;                            // 0x01E8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_VictoryPaths__GameRootDirectory_ReturnValue; // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_LoadStringFromFile_Result;                // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LoadStringFromFile_ReturnValue;           // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_String__ExplodeString_OutputStrings;      // 0x0230(0x0010)(ReferenceParm)
};
static_assert(alignof(VoidMod_Config_C_Reload_Config_Variables) == 0x000008, "Wrong alignment on VoidMod_Config_C_Reload_Config_Variables");
static_assert(sizeof(VoidMod_Config_C_Reload_Config_Variables) == 0x000240, "Wrong size on VoidMod_Config_C_Reload_Config_Variables");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, __WorldContext) == 0x000000, "Member 'VoidMod_Config_C_Reload_Config_Variables::__WorldContext' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, LoadedConfigVars) == 0x000008, "Member 'VoidMod_Config_C_Reload_Config_Variables::LoadedConfigVars' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CurrentVariableType) == 0x000018, "Member 'VoidMod_Config_C_Reload_Config_Variables::CurrentVariableType' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, ConfigFile) == 0x000028, "Member 'VoidMod_Config_C_Reload_Config_Variables::ConfigFile' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CurrentMod) == 0x000038, "Member 'VoidMod_Config_C_Reload_Config_Variables::CurrentMod' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_GetVoidmodInstance_Instance) == 0x000048, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_GetVoidmodInstance_Instance' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, Temp_int_Array_Index_Variable) == 0x000054, "Member 'VoidMod_Config_C_Reload_Config_Variables::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_Array_Get_Item) == 0x000058, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000068, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_Split_LeftS) == 0x000070, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_Split_RightS) == 0x000080, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_Split_ReturnValue) == 0x000090, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_Contains_ReturnValue) == 0x000091, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_Trim_ReturnValue) == 0x000098, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_Trim_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000A8, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_TrimTrailing_ReturnValue) == 0x0000B0, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_TrimTrailing_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_SelectString_ReturnValue) == 0x0000C0, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_Replace_ReturnValue) == 0x0000D0, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_SelectString_ReturnValue_1) == 0x0000E0, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_StartsWith_ReturnValue) == 0x0000F0, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_StartsWith_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_StartsWith_ReturnValue_1) == 0x0000F1, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_StartsWith_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_Len_ReturnValue) == 0x0000F4, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_StartsWith_ReturnValue_2) == 0x0000F8, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_StartsWith_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000FC, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_GetSubstring_ReturnValue) == 0x000100, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_NotEqual_StriStri_ReturnValue) == 0x000110, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_NotEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_ToLower_ReturnValue) == 0x000118, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_ToLower_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_Concat_StrStr_ReturnValue) == 0x000128, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_SelectString_ReturnValue_2) == 0x000138, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_SelectString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_Get_Config_Variable_Description_Description) == 0x000148, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_Get_Config_Variable_Description_Description' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_Get_Config_Variable_Description_Exists) == 0x000158, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_Get_Config_Variable_Description_Exists' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000160, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_Get_Config_Variable_Default_Value_Default_Value) == 0x000170, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_Get_Config_Variable_Default_Value_Default_Value' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_Get_Config_Variable_Default_Value_Exists) == 0x000180, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_Get_Config_Variable_Default_Value_Exists' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, Temp_int_Loop_Counter_Variable) == 0x000184, "Member 'VoidMod_Config_C_Reload_Config_Variables::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, K2Node_MakeStruct_VoidMod_ConfigVariable) == 0x000188, "Member 'VoidMod_Config_C_Reload_Config_Variables::K2Node_MakeStruct_VoidMod_ConfigVariable' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_Array_Add_ReturnValue) == 0x0001D8, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_Less_IntInt_ReturnValue) == 0x0001DC, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_Add_IntInt_ReturnValue) == 0x0001E0, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, K2Node_MakeArray_Array) == 0x0001E8, "Member 'VoidMod_Config_C_Reload_Config_Variables::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_VictoryPaths__GameRootDirectory_ReturnValue) == 0x0001F8, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_VictoryPaths__GameRootDirectory_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000208, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_LoadStringFromFile_Result) == 0x000218, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_LoadStringFromFile_Result' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_LoadStringFromFile_ReturnValue) == 0x000228, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_LoadStringFromFile_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Reload_Config_Variables, CallFunc_String__ExplodeString_OutputStrings) == 0x000230, "Member 'VoidMod_Config_C_Reload_Config_Variables::CallFunc_String__ExplodeString_OutputStrings' has a wrong offset!");

// Function VoidMod_Config.VoidMod_Config_C.Set Config Default
// 0x01C0 (0x01C0 - 0x0000)
struct VoidMod_Config_C_Set_Config_Default final
{
public:
	class FString                                 ModID;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 VariableId;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Default_Value;                                     // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Description;                                       // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AlreadyExists;                                     // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVoidMod_ConfigVariable>        CallFunc_Reload_Config_Variables_LoadedConfigVars; // 0x0050(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVoidMod_ConfigVariable                K2Node_MakeStruct_VoidMod_ConfigVariable;          // 0x0068(0x0050)(ZeroConstructor, HasGetValueTypeHash)
	struct FVoidMod_ConfigVariable                K2Node_MakeStruct_VoidMod_ConfigVariable_1;        // 0x00B8(0x0050)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ToLower_ReturnValue;                      // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ToLower_ReturnValue_1;                    // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AVoidModInstance_C*                     CallFunc_GetVoidmodInstance_Instance;              // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVoidMod_ConfigVariable                CallFunc_Array_Get_Item;                           // 0x0138(0x0050)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ToLower_ReturnValue_2;                    // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ToLower_ReturnValue_3;                    // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B2[0x2];                                      // 0x01B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VoidMod_Config_C_Set_Config_Default) == 0x000008, "Wrong alignment on VoidMod_Config_C_Set_Config_Default");
static_assert(sizeof(VoidMod_Config_C_Set_Config_Default) == 0x0001C0, "Wrong size on VoidMod_Config_C_Set_Config_Default");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Default, ModID) == 0x000000, "Member 'VoidMod_Config_C_Set_Config_Default::ModID' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Default, VariableId) == 0x000010, "Member 'VoidMod_Config_C_Set_Config_Default::VariableId' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Default, Default_Value) == 0x000020, "Member 'VoidMod_Config_C_Set_Config_Default::Default_Value' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Default, Description) == 0x000030, "Member 'VoidMod_Config_C_Set_Config_Default::Description' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Default, __WorldContext) == 0x000040, "Member 'VoidMod_Config_C_Set_Config_Default::__WorldContext' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Default, AlreadyExists) == 0x000048, "Member 'VoidMod_Config_C_Set_Config_Default::AlreadyExists' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Default, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'VoidMod_Config_C_Set_Config_Default::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Default, CallFunc_Reload_Config_Variables_LoadedConfigVars) == 0x000050, "Member 'VoidMod_Config_C_Set_Config_Default::CallFunc_Reload_Config_Variables_LoadedConfigVars' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Default, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'VoidMod_Config_C_Set_Config_Default::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Default, K2Node_MakeStruct_VoidMod_ConfigVariable) == 0x000068, "Member 'VoidMod_Config_C_Set_Config_Default::K2Node_MakeStruct_VoidMod_ConfigVariable' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Default, K2Node_MakeStruct_VoidMod_ConfigVariable_1) == 0x0000B8, "Member 'VoidMod_Config_C_Set_Config_Default::K2Node_MakeStruct_VoidMod_ConfigVariable_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Default, CallFunc_ToLower_ReturnValue) == 0x000108, "Member 'VoidMod_Config_C_Set_Config_Default::CallFunc_ToLower_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Default, CallFunc_ToLower_ReturnValue_1) == 0x000118, "Member 'VoidMod_Config_C_Set_Config_Default::CallFunc_ToLower_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Default, Temp_int_Array_Index_Variable) == 0x000128, "Member 'VoidMod_Config_C_Set_Config_Default::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Default, CallFunc_GetVoidmodInstance_Instance) == 0x000130, "Member 'VoidMod_Config_C_Set_Config_Default::CallFunc_GetVoidmodInstance_Instance' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Default, CallFunc_Array_Get_Item) == 0x000138, "Member 'VoidMod_Config_C_Set_Config_Default::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Default, CallFunc_Array_Add_ReturnValue) == 0x000188, "Member 'VoidMod_Config_C_Set_Config_Default::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Default, CallFunc_Array_Add_ReturnValue_1) == 0x00018C, "Member 'VoidMod_Config_C_Set_Config_Default::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Default, CallFunc_ToLower_ReturnValue_2) == 0x000190, "Member 'VoidMod_Config_C_Set_Config_Default::CallFunc_ToLower_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Default, CallFunc_ToLower_ReturnValue_3) == 0x0001A0, "Member 'VoidMod_Config_C_Set_Config_Default::CallFunc_ToLower_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Default, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0001B0, "Member 'VoidMod_Config_C_Set_Config_Default::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Default, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x0001B1, "Member 'VoidMod_Config_C_Set_Config_Default::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Default, CallFunc_Array_Length_ReturnValue) == 0x0001B4, "Member 'VoidMod_Config_C_Set_Config_Default::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Default, CallFunc_BooleanAND_ReturnValue) == 0x0001B8, "Member 'VoidMod_Config_C_Set_Config_Default::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Config_C_Set_Config_Default, CallFunc_Less_IntInt_ReturnValue) == 0x0001B9, "Member 'VoidMod_Config_C_Set_Config_Default::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

