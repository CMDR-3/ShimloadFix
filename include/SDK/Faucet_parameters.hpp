#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Faucet

#include "Basic.hpp"

#include "Struct_settings_structs.hpp"
#include "Struct_save_structs.hpp"
#include "Engine_structs.hpp"
#include "Struct_mBool_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Struct_mString_structs.hpp"
#include "InputCore_structs.hpp"
#include "Enum_interactionActions_structs.hpp"


namespace SDK::Params
{

// Function faucet.faucet_C.ExecuteUbergraph_faucet
// 0x05F0 (0x05F0 - 0x0000)
struct Faucet_C_ExecuteUbergraph_faucet final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        K2Node_Event_gamemode;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_settings                       K2Node_Event_settings;                             // 0x0010(0x0100)(HasGetValueTypeHash)
	struct FKey                                   K2Node_Event_key;                                  // 0x0110(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_Event_pressed;                              // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Event_color;                                // 0x012C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUmg_texturePicker_C*                   K2Node_Event_picker;                               // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Event_texture;                              // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_index;                                // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_7;                             // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_3;                                // 0x0160(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_Event_kick;                                 // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_name;                                 // 0x01EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_6;                             // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_5;                             // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_2;                                // 0x0208(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_Event_damage;                               // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_4;                             // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_3;                             // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_2;                             // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_1;                             // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_1;                                // 0x02B8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       K2Node_Event_action;                               // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_342[0x6];                                      // 0x0342(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x0350(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AProp_waterCan_C*                       K2Node_DynamicCast_AsProp_Water_Can;               // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E1[0x3];                                      // 0x03E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      CallFunc_obj_phys_obj;                             // 0x03E8(0x0010)(ReferenceParm)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x03FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0408(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414[0xC];                                      // 0x0414(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0420(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_faucet_C*                         CallFunc_FinishSpawningActor_ReturnValue;          // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0464(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_465[0xB];                                      // 0x0465(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0470(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_hose_C*                           CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B1[0x7];                                      // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x04B8(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x04C8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0551(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0552(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_553[0x1];                                      // 0x0553(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0558(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x055C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0568(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0574(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0580(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58C[0x4];                                      // 0x058C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x05A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x05B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x05B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x05B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x05BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x05C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D4[0x4];                                      // 0x05D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_bucket_C*                         K2Node_DynamicCast_AsProp_Bucket;                  // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E1[0x3];                                      // 0x05E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_LowEntry_LocalVariable_Value__Object;       // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Faucet_C_ExecuteUbergraph_faucet) == 0x000010, "Wrong alignment on Faucet_C_ExecuteUbergraph_faucet");
static_assert(sizeof(Faucet_C_ExecuteUbergraph_faucet) == 0x0005F0, "Wrong size on Faucet_C_ExecuteUbergraph_faucet");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, EntryPoint) == 0x000000, "Member 'Faucet_C_ExecuteUbergraph_faucet::EntryPoint' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, K2Node_Event_gamemode) == 0x000008, "Member 'Faucet_C_ExecuteUbergraph_faucet::K2Node_Event_gamemode' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, K2Node_Event_settings) == 0x000010, "Member 'Faucet_C_ExecuteUbergraph_faucet::K2Node_Event_settings' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, K2Node_Event_key) == 0x000110, "Member 'Faucet_C_ExecuteUbergraph_faucet::K2Node_Event_key' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, K2Node_Event_pressed) == 0x000128, "Member 'Faucet_C_ExecuteUbergraph_faucet::K2Node_Event_pressed' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, K2Node_Event_color) == 0x00012C, "Member 'Faucet_C_ExecuteUbergraph_faucet::K2Node_Event_color' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, K2Node_Event_picker) == 0x000140, "Member 'Faucet_C_ExecuteUbergraph_faucet::K2Node_Event_picker' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, K2Node_Event_texture) == 0x000148, "Member 'Faucet_C_ExecuteUbergraph_faucet::K2Node_Event_texture' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, K2Node_Event_index) == 0x000150, "Member 'Faucet_C_ExecuteUbergraph_faucet::K2Node_Event_index' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, K2Node_Event_player_7) == 0x000158, "Member 'Faucet_C_ExecuteUbergraph_faucet::K2Node_Event_player_7' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, K2Node_Event_hit_3) == 0x000160, "Member 'Faucet_C_ExecuteUbergraph_faucet::K2Node_Event_hit_3' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, K2Node_Event_kick) == 0x0001E8, "Member 'Faucet_C_ExecuteUbergraph_faucet::K2Node_Event_kick' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, K2Node_Event_name) == 0x0001EC, "Member 'Faucet_C_ExecuteUbergraph_faucet::K2Node_Event_name' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, K2Node_Event_player_6) == 0x0001F8, "Member 'Faucet_C_ExecuteUbergraph_faucet::K2Node_Event_player_6' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, K2Node_Event_player_5) == 0x000200, "Member 'Faucet_C_ExecuteUbergraph_faucet::K2Node_Event_player_5' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, K2Node_Event_hit_2) == 0x000208, "Member 'Faucet_C_ExecuteUbergraph_faucet::K2Node_Event_hit_2' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, K2Node_Event_damage) == 0x000290, "Member 'Faucet_C_ExecuteUbergraph_faucet::K2Node_Event_damage' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, K2Node_Event_player_4) == 0x000298, "Member 'Faucet_C_ExecuteUbergraph_faucet::K2Node_Event_player_4' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, K2Node_Event_player_3) == 0x0002A0, "Member 'Faucet_C_ExecuteUbergraph_faucet::K2Node_Event_player_3' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, K2Node_Event_player_2) == 0x0002A8, "Member 'Faucet_C_ExecuteUbergraph_faucet::K2Node_Event_player_2' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, K2Node_Event_player_1) == 0x0002B0, "Member 'Faucet_C_ExecuteUbergraph_faucet::K2Node_Event_player_1' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, K2Node_Event_hit_1) == 0x0002B8, "Member 'Faucet_C_ExecuteUbergraph_faucet::K2Node_Event_hit_1' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, K2Node_Event_action) == 0x000340, "Member 'Faucet_C_ExecuteUbergraph_faucet::K2Node_Event_action' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_Not_PreBool_ReturnValue) == 0x000341, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, K2Node_Event_player) == 0x000348, "Member 'Faucet_C_ExecuteUbergraph_faucet::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, K2Node_Event_hit) == 0x000350, "Member 'Faucet_C_ExecuteUbergraph_faucet::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, K2Node_DynamicCast_AsProp_Water_Can) == 0x0003D8, "Member 'Faucet_C_ExecuteUbergraph_faucet::K2Node_DynamicCast_AsProp_Water_Can' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, K2Node_DynamicCast_bSuccess) == 0x0003E0, "Member 'Faucet_C_ExecuteUbergraph_faucet::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, K2Node_Event_DeltaSeconds) == 0x0003E4, "Member 'Faucet_C_ExecuteUbergraph_faucet::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_obj_phys_obj) == 0x0003E8, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_obj_phys_obj' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0003F8, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0003FC, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000408, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_GetTransform_ReturnValue) == 0x000420, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000450, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_FinishSpawningActor_ReturnValue) == 0x000458, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_Array_Length_ReturnValue) == 0x000460, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_Less_IntInt_ReturnValue) == 0x000464, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_GetTransform_ReturnValue_1) == 0x000470, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x0004A0, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x0004A8, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_IsValid_ReturnValue) == 0x0004B0, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, Temp_object_Variable) == 0x0004B8, "Member 'Faucet_C_ExecuteUbergraph_faucet::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0004C8, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000550, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_BreakHitResult_bBlockingHit) == 0x000551, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_BreakHitResult_bInitialOverlap) == 0x000552, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_BreakHitResult_Time) == 0x000554, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_BreakHitResult_Distance) == 0x000558, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_BreakHitResult_Location) == 0x00055C, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_BreakHitResult_ImpactPoint) == 0x000568, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_BreakHitResult_Normal) == 0x000574, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_BreakHitResult_ImpactNormal) == 0x000580, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_BreakHitResult_PhysMat) == 0x000590, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_BreakHitResult_HitActor) == 0x000598, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_BreakHitResult_HitComponent) == 0x0005A0, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_BreakHitResult_HitBoneName) == 0x0005A8, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_BreakHitResult_HitItem) == 0x0005B0, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_BreakHitResult_ElementIndex) == 0x0005B4, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_BreakHitResult_FaceIndex) == 0x0005B8, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_BreakHitResult_TraceStart) == 0x0005BC, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_BreakHitResult_TraceEnd) == 0x0005C8, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, K2Node_DynamicCast_AsProp_Bucket) == 0x0005D8, "Member 'Faucet_C_ExecuteUbergraph_faucet::K2Node_DynamicCast_AsProp_Bucket' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, K2Node_DynamicCast_bSuccess_1) == 0x0005E0, "Member 'Faucet_C_ExecuteUbergraph_faucet::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, K2Node_LowEntry_LocalVariable_Value__Object) == 0x0005E4, "Member 'Faucet_C_ExecuteUbergraph_faucet::K2Node_LowEntry_LocalVariable_Value__Object' has a wrong offset!");
static_assert(offsetof(Faucet_C_ExecuteUbergraph_faucet, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x0005E8, "Member 'Faucet_C_ExecuteUbergraph_faucet::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");

// Function faucet.faucet_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Faucet_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Faucet_C_ReceiveTick) == 0x000004, "Wrong alignment on Faucet_C_ReceiveTick");
static_assert(sizeof(Faucet_C_ReceiveTick) == 0x000004, "Wrong size on Faucet_C_ReceiveTick");
static_assert(offsetof(Faucet_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Faucet_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function faucet.faucet_C.playerR
// 0x0008 (0x0008 - 0x0000)
struct Faucet_C_PlayerR final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Faucet_C_PlayerR) == 0x000008, "Wrong alignment on Faucet_C_PlayerR");
static_assert(sizeof(Faucet_C_PlayerR) == 0x000008, "Wrong size on Faucet_C_PlayerR");
static_assert(offsetof(Faucet_C_PlayerR, Player) == 0x000000, "Member 'Faucet_C_PlayerR::Player' has a wrong offset!");

// Function faucet.faucet_C.playerHold
// 0x0008 (0x0008 - 0x0000)
struct Faucet_C_PlayerHold final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Faucet_C_PlayerHold) == 0x000008, "Wrong alignment on Faucet_C_PlayerHold");
static_assert(sizeof(Faucet_C_PlayerHold) == 0x000008, "Wrong size on Faucet_C_PlayerHold");
static_assert(offsetof(Faucet_C_PlayerHold, Player) == 0x000000, "Member 'Faucet_C_PlayerHold::Player' has a wrong offset!");

// Function faucet.faucet_C.playerUnequip
// 0x0008 (0x0008 - 0x0000)
struct Faucet_C_PlayerUnequip final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Faucet_C_PlayerUnequip) == 0x000008, "Wrong alignment on Faucet_C_PlayerUnequip");
static_assert(sizeof(Faucet_C_PlayerUnequip) == 0x000008, "Wrong size on Faucet_C_PlayerUnequip");
static_assert(offsetof(Faucet_C_PlayerUnequip, Player) == 0x000000, "Member 'Faucet_C_PlayerUnequip::Player' has a wrong offset!");

// Function faucet.faucet_C.damageByPlayer
// 0x0098 (0x0098 - 0x0000)
struct Faucet_C_DamageByPlayer final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         Damage;                                            // 0x0090(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Faucet_C_DamageByPlayer) == 0x000008, "Wrong alignment on Faucet_C_DamageByPlayer");
static_assert(sizeof(Faucet_C_DamageByPlayer) == 0x000098, "Wrong size on Faucet_C_DamageByPlayer");
static_assert(offsetof(Faucet_C_DamageByPlayer, Player) == 0x000000, "Member 'Faucet_C_DamageByPlayer::Player' has a wrong offset!");
static_assert(offsetof(Faucet_C_DamageByPlayer, Hit) == 0x000008, "Member 'Faucet_C_DamageByPlayer::Hit' has a wrong offset!");
static_assert(offsetof(Faucet_C_DamageByPlayer, Damage) == 0x000090, "Member 'Faucet_C_DamageByPlayer::Damage' has a wrong offset!");

// Function faucet.faucet_C.thrown
// 0x0008 (0x0008 - 0x0000)
struct Faucet_C_Thrown final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Faucet_C_Thrown) == 0x000008, "Wrong alignment on Faucet_C_Thrown");
static_assert(sizeof(Faucet_C_Thrown) == 0x000008, "Wrong size on Faucet_C_Thrown");
static_assert(offsetof(Faucet_C_Thrown, Player) == 0x000000, "Member 'Faucet_C_Thrown::Player' has a wrong offset!");

// Function faucet.faucet_C.sendName
// 0x0008 (0x0008 - 0x0000)
struct Faucet_C_SendName final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Faucet_C_SendName) == 0x000004, "Wrong alignment on Faucet_C_SendName");
static_assert(sizeof(Faucet_C_SendName) == 0x000008, "Wrong size on Faucet_C_SendName");
static_assert(offsetof(Faucet_C_SendName, Name_0) == 0x000000, "Member 'Faucet_C_SendName::Name_0' has a wrong offset!");

// Function faucet.faucet_C.kicked
// 0x0001 (0x0001 - 0x0000)
struct Faucet_C_Kicked final
{
public:
	bool                                          Kick;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Faucet_C_Kicked) == 0x000001, "Wrong alignment on Faucet_C_Kicked");
static_assert(sizeof(Faucet_C_Kicked) == 0x000001, "Wrong size on Faucet_C_Kicked");
static_assert(offsetof(Faucet_C_Kicked, Kick) == 0x000000, "Member 'Faucet_C_Kicked::Kick' has a wrong offset!");

// Function faucet.faucet_C.player_use
// 0x0090 (0x0090 - 0x0000)
struct Faucet_C_Player_use final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Faucet_C_Player_use) == 0x000008, "Wrong alignment on Faucet_C_Player_use");
static_assert(sizeof(Faucet_C_Player_use) == 0x000090, "Wrong size on Faucet_C_Player_use");
static_assert(offsetof(Faucet_C_Player_use, Player) == 0x000000, "Member 'Faucet_C_Player_use::Player' has a wrong offset!");
static_assert(offsetof(Faucet_C_Player_use, Hit) == 0x000008, "Member 'Faucet_C_Player_use::Hit' has a wrong offset!");

// Function faucet.faucet_C.texturePickerApply
// 0x0018 (0x0018 - 0x0000)
struct Faucet_C_TexturePickerApply final
{
public:
	class UUmg_texturePicker_C*                   Picker;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Texture;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Faucet_C_TexturePickerApply) == 0x000008, "Wrong alignment on Faucet_C_TexturePickerApply");
static_assert(sizeof(Faucet_C_TexturePickerApply) == 0x000018, "Wrong size on Faucet_C_TexturePickerApply");
static_assert(offsetof(Faucet_C_TexturePickerApply, Picker) == 0x000000, "Member 'Faucet_C_TexturePickerApply::Picker' has a wrong offset!");
static_assert(offsetof(Faucet_C_TexturePickerApply, Texture) == 0x000008, "Member 'Faucet_C_TexturePickerApply::Texture' has a wrong offset!");
static_assert(offsetof(Faucet_C_TexturePickerApply, Index_0) == 0x000010, "Member 'Faucet_C_TexturePickerApply::Index_0' has a wrong offset!");

// Function faucet.faucet_C.applyColor
// 0x0010 (0x0010 - 0x0000)
struct Faucet_C_ApplyColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Faucet_C_ApplyColor) == 0x000004, "Wrong alignment on Faucet_C_ApplyColor");
static_assert(sizeof(Faucet_C_ApplyColor) == 0x000010, "Wrong size on Faucet_C_ApplyColor");
static_assert(offsetof(Faucet_C_ApplyColor, Color) == 0x000000, "Member 'Faucet_C_ApplyColor::Color' has a wrong offset!");

// Function faucet.faucet_C.AnyKey
// 0x0020 (0x0020 - 0x0000)
struct Faucet_C_AnyKey final
{
public:
	struct FKey                                   Key_0;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Pressed;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Faucet_C_AnyKey) == 0x000008, "Wrong alignment on Faucet_C_AnyKey");
static_assert(sizeof(Faucet_C_AnyKey) == 0x000020, "Wrong size on Faucet_C_AnyKey");
static_assert(offsetof(Faucet_C_AnyKey, Key_0) == 0x000000, "Member 'Faucet_C_AnyKey::Key_0' has a wrong offset!");
static_assert(offsetof(Faucet_C_AnyKey, Pressed) == 0x000018, "Member 'Faucet_C_AnyKey::Pressed' has a wrong offset!");

// Function faucet.faucet_C.settingsApplied
// 0x0100 (0x0100 - 0x0000)
struct Faucet_C_SettingsApplied final
{
public:
	struct FStruct_settings                       Settings;                                          // 0x0000(0x0100)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(Faucet_C_SettingsApplied) == 0x000008, "Wrong alignment on Faucet_C_SettingsApplied");
static_assert(sizeof(Faucet_C_SettingsApplied) == 0x000100, "Wrong size on Faucet_C_SettingsApplied");
static_assert(offsetof(Faucet_C_SettingsApplied, Settings) == 0x000000, "Member 'Faucet_C_SettingsApplied::Settings' has a wrong offset!");

// Function faucet.faucet_C.stuffUpgraded
// 0x0008 (0x0008 - 0x0000)
struct Faucet_C_StuffUpgraded final
{
public:
	class AMainGamemode_C*                        GameMode_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Faucet_C_StuffUpgraded) == 0x000008, "Wrong alignment on Faucet_C_StuffUpgraded");
static_assert(sizeof(Faucet_C_StuffUpgraded) == 0x000008, "Wrong size on Faucet_C_StuffUpgraded");
static_assert(offsetof(Faucet_C_StuffUpgraded, GameMode_0) == 0x000000, "Member 'Faucet_C_StuffUpgraded::GameMode_0' has a wrong offset!");

// Function faucet.faucet_C.upd
// 0x0003 (0x0003 - 0x0000)
struct Faucet_C_Upd final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Faucet_C_Upd) == 0x000001, "Wrong alignment on Faucet_C_Upd");
static_assert(sizeof(Faucet_C_Upd) == 0x000003, "Wrong size on Faucet_C_Upd");
static_assert(offsetof(Faucet_C_Upd, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Faucet_C_Upd::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Faucet_C_Upd, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'Faucet_C_Upd::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Faucet_C_Upd, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'Faucet_C_Upd::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function faucet.faucet_C.landedOn
// 0x0010 (0x0010 - 0x0000)
struct Faucet_C_LandedOn final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreFallDamage;                                  // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Faucet_C_LandedOn) == 0x000008, "Wrong alignment on Faucet_C_LandedOn");
static_assert(sizeof(Faucet_C_LandedOn) == 0x000010, "Wrong size on Faucet_C_LandedOn");
static_assert(offsetof(Faucet_C_LandedOn, Player) == 0x000000, "Member 'Faucet_C_LandedOn::Player' has a wrong offset!");
static_assert(offsetof(Faucet_C_LandedOn, IgnoreFallDamage) == 0x000008, "Member 'Faucet_C_LandedOn::IgnoreFallDamage' has a wrong offset!");

// Function faucet.faucet_C.canBePutInContainer
// 0x0001 (0x0001 - 0x0000)
struct Faucet_C_CanBePutInContainer final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Faucet_C_CanBePutInContainer) == 0x000001, "Wrong alignment on Faucet_C_CanBePutInContainer");
static_assert(sizeof(Faucet_C_CanBePutInContainer) == 0x000001, "Wrong size on Faucet_C_CanBePutInContainer");
static_assert(offsetof(Faucet_C_CanBePutInContainer, Return) == 0x000000, "Member 'Faucet_C_CanBePutInContainer::Return' has a wrong offset!");

// Function faucet.faucet_C.playerUsedOn
// 0x0090 (0x0090 - 0x0000)
struct Faucet_C_PlayerUsedOn final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Faucet_C_PlayerUsedOn) == 0x000008, "Wrong alignment on Faucet_C_PlayerUsedOn");
static_assert(sizeof(Faucet_C_PlayerUsedOn) == 0x000090, "Wrong size on Faucet_C_PlayerUsedOn");
static_assert(offsetof(Faucet_C_PlayerUsedOn, Player) == 0x000000, "Member 'Faucet_C_PlayerUsedOn::Player' has a wrong offset!");
static_assert(offsetof(Faucet_C_PlayerUsedOn, Hit) == 0x000008, "Member 'Faucet_C_PlayerUsedOn::Hit' has a wrong offset!");

// Function faucet.faucet_C.asProp
// 0x0008 (0x0008 - 0x0000)
struct Faucet_C_AsProp final
{
public:
	class AProp_C*                                Return;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Faucet_C_AsProp) == 0x000008, "Wrong alignment on Faucet_C_AsProp");
static_assert(sizeof(Faucet_C_AsProp) == 0x000008, "Wrong size on Faucet_C_AsProp");
static_assert(offsetof(Faucet_C_AsProp, Return) == 0x000000, "Member 'Faucet_C_AsProp::Return' has a wrong offset!");

// Function faucet.faucet_C.canPickup
// 0x0001 (0x0001 - 0x0000)
struct Faucet_C_CanPickup final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Faucet_C_CanPickup) == 0x000001, "Wrong alignment on Faucet_C_CanPickup");
static_assert(sizeof(Faucet_C_CanPickup) == 0x000001, "Wrong size on Faucet_C_CanPickup");
static_assert(offsetof(Faucet_C_CanPickup, Return) == 0x000000, "Member 'Faucet_C_CanPickup::Return' has a wrong offset!");

// Function faucet.faucet_C.noRespawn
// 0x0002 (0x0002 - 0x0000)
struct Faucet_C_NoRespawn final
{
public:
	bool                                          NoRespawn_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Return;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Faucet_C_NoRespawn) == 0x000001, "Wrong alignment on Faucet_C_NoRespawn");
static_assert(sizeof(Faucet_C_NoRespawn) == 0x000002, "Wrong size on Faucet_C_NoRespawn");
static_assert(offsetof(Faucet_C_NoRespawn, NoRespawn_0) == 0x000000, "Member 'Faucet_C_NoRespawn::NoRespawn_0' has a wrong offset!");
static_assert(offsetof(Faucet_C_NoRespawn, Return) == 0x000001, "Member 'Faucet_C_NoRespawn::Return' has a wrong offset!");

// Function faucet.faucet_C.lookAt
// 0x0138 (0x0138 - 0x0000)
struct Faucet_C_LookAt final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Return;                                            // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Text;                                              // 0x0098(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    boundObjectReplace;                                // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Number;                                            // 0x00B0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B3[0x1];                                       // 0x00B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Faucet_C_LookAt) == 0x000008, "Wrong alignment on Faucet_C_LookAt");
static_assert(sizeof(Faucet_C_LookAt) == 0x000138, "Wrong size on Faucet_C_LookAt");
static_assert(offsetof(Faucet_C_LookAt, Player) == 0x000000, "Member 'Faucet_C_LookAt::Player' has a wrong offset!");
static_assert(offsetof(Faucet_C_LookAt, Hit) == 0x000008, "Member 'Faucet_C_LookAt::Hit' has a wrong offset!");
static_assert(offsetof(Faucet_C_LookAt, Return) == 0x000090, "Member 'Faucet_C_LookAt::Return' has a wrong offset!");
static_assert(offsetof(Faucet_C_LookAt, Text) == 0x000098, "Member 'Faucet_C_LookAt::Text' has a wrong offset!");
static_assert(offsetof(Faucet_C_LookAt, boundObjectReplace) == 0x0000A8, "Member 'Faucet_C_LookAt::boundObjectReplace' has a wrong offset!");
static_assert(offsetof(Faucet_C_LookAt, Number) == 0x0000B0, "Member 'Faucet_C_LookAt::Number' has a wrong offset!");
static_assert(offsetof(Faucet_C_LookAt, CallFunc_BreakHitResult_bBlockingHit) == 0x0000B1, "Member 'Faucet_C_LookAt::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Faucet_C_LookAt, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000B2, "Member 'Faucet_C_LookAt::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Faucet_C_LookAt, CallFunc_BreakHitResult_Time) == 0x0000B4, "Member 'Faucet_C_LookAt::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Faucet_C_LookAt, CallFunc_BreakHitResult_Distance) == 0x0000B8, "Member 'Faucet_C_LookAt::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Faucet_C_LookAt, CallFunc_BreakHitResult_Location) == 0x0000BC, "Member 'Faucet_C_LookAt::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Faucet_C_LookAt, CallFunc_BreakHitResult_ImpactPoint) == 0x0000C8, "Member 'Faucet_C_LookAt::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Faucet_C_LookAt, CallFunc_BreakHitResult_Normal) == 0x0000D4, "Member 'Faucet_C_LookAt::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Faucet_C_LookAt, CallFunc_BreakHitResult_ImpactNormal) == 0x0000E0, "Member 'Faucet_C_LookAt::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Faucet_C_LookAt, CallFunc_BreakHitResult_PhysMat) == 0x0000F0, "Member 'Faucet_C_LookAt::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Faucet_C_LookAt, CallFunc_BreakHitResult_HitActor) == 0x0000F8, "Member 'Faucet_C_LookAt::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Faucet_C_LookAt, CallFunc_BreakHitResult_HitComponent) == 0x000100, "Member 'Faucet_C_LookAt::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Faucet_C_LookAt, CallFunc_BreakHitResult_HitBoneName) == 0x000108, "Member 'Faucet_C_LookAt::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Faucet_C_LookAt, CallFunc_BreakHitResult_HitItem) == 0x000110, "Member 'Faucet_C_LookAt::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Faucet_C_LookAt, CallFunc_BreakHitResult_ElementIndex) == 0x000114, "Member 'Faucet_C_LookAt::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Faucet_C_LookAt, CallFunc_BreakHitResult_FaceIndex) == 0x000118, "Member 'Faucet_C_LookAt::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Faucet_C_LookAt, CallFunc_BreakHitResult_TraceStart) == 0x00011C, "Member 'Faucet_C_LookAt::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Faucet_C_LookAt, CallFunc_BreakHitResult_TraceEnd) == 0x000128, "Member 'Faucet_C_LookAt::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Faucet_C_LookAt, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000134, "Member 'Faucet_C_LookAt::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function faucet.faucet_C.isButtonUsed
// 0x0001 (0x0001 - 0x0000)
struct Faucet_C_IsButtonUsed final
{
public:
	bool                                          Failed;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Faucet_C_IsButtonUsed) == 0x000001, "Wrong alignment on Faucet_C_IsButtonUsed");
static_assert(sizeof(Faucet_C_IsButtonUsed) == 0x000001, "Wrong size on Faucet_C_IsButtonUsed");
static_assert(offsetof(Faucet_C_IsButtonUsed, Failed) == 0x000000, "Member 'Faucet_C_IsButtonUsed::Failed' has a wrong offset!");

// Function faucet.faucet_C.dreamInv
// 0x0018 (0x0018 - 0x0000)
struct Faucet_C_DreamInv final
{
public:
	TArray<struct FStruct_save>                   Invv;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class ADreamBase_C*                           Base;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Faucet_C_DreamInv) == 0x000008, "Wrong alignment on Faucet_C_DreamInv");
static_assert(sizeof(Faucet_C_DreamInv) == 0x000018, "Wrong size on Faucet_C_DreamInv");
static_assert(offsetof(Faucet_C_DreamInv, Invv) == 0x000000, "Member 'Faucet_C_DreamInv::Invv' has a wrong offset!");
static_assert(offsetof(Faucet_C_DreamInv, Base) == 0x000010, "Member 'Faucet_C_DreamInv::Base' has a wrong offset!");

// Function faucet.faucet_C.actionOptionIndex
// 0x0098 (0x0098 - 0x0000)
struct Faucet_C_ActionOptionIndex final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       Action;                                            // 0x0090(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Faucet_C_ActionOptionIndex) == 0x000008, "Wrong alignment on Faucet_C_ActionOptionIndex");
static_assert(sizeof(Faucet_C_ActionOptionIndex) == 0x000098, "Wrong size on Faucet_C_ActionOptionIndex");
static_assert(offsetof(Faucet_C_ActionOptionIndex, Player) == 0x000000, "Member 'Faucet_C_ActionOptionIndex::Player' has a wrong offset!");
static_assert(offsetof(Faucet_C_ActionOptionIndex, Hit) == 0x000008, "Member 'Faucet_C_ActionOptionIndex::Hit' has a wrong offset!");
static_assert(offsetof(Faucet_C_ActionOptionIndex, Action) == 0x000090, "Member 'Faucet_C_ActionOptionIndex::Action' has a wrong offset!");

// Function faucet.faucet_C.loadData
// 0x0100 (0x0100 - 0x0000)
struct Faucet_C_LoadData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadData_return;                          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mString                        CallFunc_Array_Get_Item;                           // 0x00C8(0x0010)(HasGetValueTypeHash)
	struct FStruct_mBool                          CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0010)(HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_2;                         // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_3;                         // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Faucet_C_LoadData) == 0x000010, "Wrong alignment on Faucet_C_LoadData");
static_assert(sizeof(Faucet_C_LoadData) == 0x000100, "Wrong size on Faucet_C_LoadData");
static_assert(offsetof(Faucet_C_LoadData, Data) == 0x000000, "Member 'Faucet_C_LoadData::Data' has a wrong offset!");
static_assert(offsetof(Faucet_C_LoadData, Return) == 0x0000C0, "Member 'Faucet_C_LoadData::Return' has a wrong offset!");
static_assert(offsetof(Faucet_C_LoadData, CallFunc_loadData_return) == 0x0000C1, "Member 'Faucet_C_LoadData::CallFunc_loadData_return' has a wrong offset!");
static_assert(offsetof(Faucet_C_LoadData, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'Faucet_C_LoadData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Faucet_C_LoadData, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'Faucet_C_LoadData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Faucet_C_LoadData, CallFunc_Array_Get_Item_2) == 0x0000E8, "Member 'Faucet_C_LoadData::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Faucet_C_LoadData, CallFunc_Array_Get_Item_3) == 0x0000F8, "Member 'Faucet_C_LoadData::CallFunc_Array_Get_Item_3' has a wrong offset!");

// Function faucet.faucet_C.getData
// 0x02D0 (0x02D0 - 0x0000)
struct Faucet_C_GetData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(Parm, OutParm, HasGetValueTypeHash)
	TArray<bool>                                  K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm)
	TArray<class FString>                         K2Node_MakeArray_Array_1;                          // 0x00D0(0x0010)(ReferenceParm)
	struct FStruct_mBool                          K2Node_MakeStruct_struct_mBool;                    // 0x00E0(0x0010)(HasGetValueTypeHash)
	struct FStruct_mString                        K2Node_MakeStruct_struct_mString;                  // 0x00F0(0x0010)(HasGetValueTypeHash)
	TArray<struct FStruct_mBool>                  K2Node_MakeArray_Array_2;                          // 0x0100(0x0010)(ReferenceParm)
	TArray<struct FStruct_mString>                K2Node_MakeArray_Array_3;                          // 0x0110(0x0010)(ReferenceParm)
	struct FStruct_save                           CallFunc_getData_data;                             // 0x0120(0x00C0)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0xF];                                      // 0x01E1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_save                           K2Node_SetFieldsInStruct_StructOut;                // 0x01F0(0x00C0)(HasGetValueTypeHash)
	TScriptInterface<class IInt_objects_C>        CallFunc_getKey_self_CastInput;                    // 0x02B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_getKey_key;                               // 0x02C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Faucet_C_GetData) == 0x000010, "Wrong alignment on Faucet_C_GetData");
static_assert(sizeof(Faucet_C_GetData) == 0x0002D0, "Wrong size on Faucet_C_GetData");
static_assert(offsetof(Faucet_C_GetData, Data) == 0x000000, "Member 'Faucet_C_GetData::Data' has a wrong offset!");
static_assert(offsetof(Faucet_C_GetData, K2Node_MakeArray_Array) == 0x0000C0, "Member 'Faucet_C_GetData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Faucet_C_GetData, K2Node_MakeArray_Array_1) == 0x0000D0, "Member 'Faucet_C_GetData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Faucet_C_GetData, K2Node_MakeStruct_struct_mBool) == 0x0000E0, "Member 'Faucet_C_GetData::K2Node_MakeStruct_struct_mBool' has a wrong offset!");
static_assert(offsetof(Faucet_C_GetData, K2Node_MakeStruct_struct_mString) == 0x0000F0, "Member 'Faucet_C_GetData::K2Node_MakeStruct_struct_mString' has a wrong offset!");
static_assert(offsetof(Faucet_C_GetData, K2Node_MakeArray_Array_2) == 0x000100, "Member 'Faucet_C_GetData::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(Faucet_C_GetData, K2Node_MakeArray_Array_3) == 0x000110, "Member 'Faucet_C_GetData::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(Faucet_C_GetData, CallFunc_getData_data) == 0x000120, "Member 'Faucet_C_GetData::CallFunc_getData_data' has a wrong offset!");
static_assert(offsetof(Faucet_C_GetData, CallFunc_IsValid_ReturnValue) == 0x0001E0, "Member 'Faucet_C_GetData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Faucet_C_GetData, K2Node_SetFieldsInStruct_StructOut) == 0x0001F0, "Member 'Faucet_C_GetData::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(Faucet_C_GetData, CallFunc_getKey_self_CastInput) == 0x0002B0, "Member 'Faucet_C_GetData::CallFunc_getKey_self_CastInput' has a wrong offset!");
static_assert(offsetof(Faucet_C_GetData, CallFunc_getKey_key) == 0x0002C0, "Member 'Faucet_C_GetData::CallFunc_getKey_key' has a wrong offset!");

// Function faucet.faucet_C.processKeys
// 0x0028 (0x0028 - 0x0000)
struct Faucet_C_ProcessKeys final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_getObjectFromKey_Output;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_processKeys_return;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGroundHose_C*                          K2Node_DynamicCast_AsGround_Hose;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Faucet_C_ProcessKeys) == 0x000008, "Wrong alignment on Faucet_C_ProcessKeys");
static_assert(sizeof(Faucet_C_ProcessKeys) == 0x000028, "Wrong size on Faucet_C_ProcessKeys");
static_assert(offsetof(Faucet_C_ProcessKeys, Return) == 0x000000, "Member 'Faucet_C_ProcessKeys::Return' has a wrong offset!");
static_assert(offsetof(Faucet_C_ProcessKeys, CallFunc_getObjectFromKey_Output) == 0x000008, "Member 'Faucet_C_ProcessKeys::CallFunc_getObjectFromKey_Output' has a wrong offset!");
static_assert(offsetof(Faucet_C_ProcessKeys, CallFunc_processKeys_return) == 0x000010, "Member 'Faucet_C_ProcessKeys::CallFunc_processKeys_return' has a wrong offset!");
static_assert(offsetof(Faucet_C_ProcessKeys, K2Node_DynamicCast_AsGround_Hose) == 0x000018, "Member 'Faucet_C_ProcessKeys::K2Node_DynamicCast_AsGround_Hose' has a wrong offset!");
static_assert(offsetof(Faucet_C_ProcessKeys, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Faucet_C_ProcessKeys::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

