#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheEvil

#include "Basic.hpp"

#include "Struct_signalDataDynamic_structs.hpp"
#include "Struct_mObject_structs.hpp"
#include "Struct_signal_data1_structs.hpp"
#include "Struct_save_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Struct_mBool_structs.hpp"
#include "Struct_mFloat_structs.hpp"


namespace SDK::Params
{

// Function theEvil.theEvil_C.ExecuteUbergraph_theEvil
// 0x0080 (0x0080 - 0x0000)
struct TheEvil_C_ExecuteUbergraph_theEvil final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)(ConstParm)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameover_C*                            CallFunc_FinishSpawningActor_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut;         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_checkForEvil_evil;                        // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue;        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TheEvil_C_ExecuteUbergraph_theEvil) == 0x000010, "Wrong alignment on TheEvil_C_ExecuteUbergraph_theEvil");
static_assert(sizeof(TheEvil_C_ExecuteUbergraph_theEvil) == 0x000080, "Wrong size on TheEvil_C_ExecuteUbergraph_theEvil");
static_assert(offsetof(TheEvil_C_ExecuteUbergraph_theEvil, EntryPoint) == 0x000000, "Member 'TheEvil_C_ExecuteUbergraph_theEvil::EntryPoint' has a wrong offset!");
static_assert(offsetof(TheEvil_C_ExecuteUbergraph_theEvil, Temp_text_Variable) == 0x000008, "Member 'TheEvil_C_ExecuteUbergraph_theEvil::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(TheEvil_C_ExecuteUbergraph_theEvil, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'TheEvil_C_ExecuteUbergraph_theEvil::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheEvil_C_ExecuteUbergraph_theEvil, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000050, "Member 'TheEvil_C_ExecuteUbergraph_theEvil::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheEvil_C_ExecuteUbergraph_theEvil, CallFunc_FinishSpawningActor_ReturnValue) == 0x000058, "Member 'TheEvil_C_ExecuteUbergraph_theEvil::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheEvil_C_ExecuteUbergraph_theEvil, CallFunc_SpawnSound2D_ReturnValue) == 0x000060, "Member 'TheEvil_C_ExecuteUbergraph_theEvil::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheEvil_C_ExecuteUbergraph_theEvil, K2Node_Event_DeltaSeconds) == 0x000068, "Member 'TheEvil_C_ExecuteUbergraph_theEvil::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(TheEvil_C_ExecuteUbergraph_theEvil, CallFunc_VictoryFloatMinusEquals_FloatOut) == 0x00006C, "Member 'TheEvil_C_ExecuteUbergraph_theEvil::CallFunc_VictoryFloatMinusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(TheEvil_C_ExecuteUbergraph_theEvil, CallFunc_Less_FloatFloat_ReturnValue) == 0x000070, "Member 'TheEvil_C_ExecuteUbergraph_theEvil::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheEvil_C_ExecuteUbergraph_theEvil, CallFunc_checkForEvil_evil) == 0x000071, "Member 'TheEvil_C_ExecuteUbergraph_theEvil::CallFunc_checkForEvil_evil' has a wrong offset!");
static_assert(offsetof(TheEvil_C_ExecuteUbergraph_theEvil, CallFunc_GetGlobalTimeDilation_ReturnValue) == 0x000074, "Member 'TheEvil_C_ExecuteUbergraph_theEvil::CallFunc_GetGlobalTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheEvil_C_ExecuteUbergraph_theEvil, CallFunc_BooleanOR_ReturnValue) == 0x000078, "Member 'TheEvil_C_ExecuteUbergraph_theEvil::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheEvil_C_ExecuteUbergraph_theEvil, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000079, "Member 'TheEvil_C_ExecuteUbergraph_theEvil::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheEvil_C_ExecuteUbergraph_theEvil, CallFunc_BooleanAND_ReturnValue) == 0x00007A, "Member 'TheEvil_C_ExecuteUbergraph_theEvil::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function theEvil.theEvil_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct TheEvil_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TheEvil_C_ReceiveTick) == 0x000004, "Wrong alignment on TheEvil_C_ReceiveTick");
static_assert(sizeof(TheEvil_C_ReceiveTick) == 0x000004, "Wrong size on TheEvil_C_ReceiveTick");
static_assert(offsetof(TheEvil_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'TheEvil_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function theEvil.theEvil_C.checkForEvil
// 0x0670 (0x0670 - 0x0000)
struct TheEvil_C_CheckForEvil final
{
public:
	bool                                          Evil;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_7;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_7;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_8;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_8;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_9;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_9;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_10;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_driveRack_C*                      CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_signalDataDynamic              CallFunc_Array_Get_Item_1;                         // 0x0090(0x0070)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_103[0x1];                                      // 0x0103(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_signalDataDynamic              CallFunc_Array_Get_Item_2;                         // 0x0110(0x0070)(HasGetValueTypeHash)
	struct FStruct_signalDataDynamic              CallFunc_Array_Get_Item_3;                         // 0x0180(0x0070)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_3;        // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_4;        // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_5;        // 0x01F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x01F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F6[0x2];                                      // 0x01F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_202[0x6];                                      // 0x0202(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_signal_data1                   CallFunc_Array_Get_Item_4;                         // 0x0208(0x01D0)(HasGetValueTypeHash)
	struct FStruct_signalDataDynamic              CallFunc_Array_Get_Item_5;                         // 0x03D8(0x0070)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_6;        // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_7;        // 0x0449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_8;        // 0x044A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x044B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_451[0x3];                                      // 0x0451(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_box_C*                            CallFunc_Array_Get_Item_6;                         // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_drive_C*                          CallFunc_Array_Get_Item_7;                         // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_signalDataDynamic              CallFunc_Array_Get_Item_8;                         // 0x0470(0x0070)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_9;        // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_10;       // 0x04E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_11;       // 0x04E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_12;       // 0x04E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x04E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x04E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E6[0x2];                                      // 0x04E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x04EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x04F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F2[0x2];                                      // 0x04F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x04F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F9[0x3];                                      // 0x04F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_10;                 // 0x04FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_501[0x3];                                      // 0x0501(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x0504(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_11;                  // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C[0x4];                                      // 0x050C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mObject                        CallFunc_Array_Get_Item_9;                         // 0x0510(0x0010)(HasGetValueTypeHash)
	struct FStruct_save                           CallFunc_Array_Get_Item_10;                        // 0x0520(0x00C0)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x05E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E5[0x3];                                      // 0x05E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_signalDataDynamic              CallFunc_Array_Get_Item_11;                        // 0x05E8(0x0070)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x0658(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_13;       // 0x065C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_10;               // 0x065D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_14;       // 0x065E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x065F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_11;                 // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_11;               // 0x0664(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_665[0x3];                                      // 0x0665(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x0668(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TheEvil_C_CheckForEvil) == 0x000010, "Wrong alignment on TheEvil_C_CheckForEvil");
static_assert(sizeof(TheEvil_C_CheckForEvil) == 0x000670, "Wrong size on TheEvil_C_CheckForEvil");
static_assert(offsetof(TheEvil_C_CheckForEvil, Evil) == 0x000000, "Member 'TheEvil_C_CheckForEvil::Evil' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Array_Index_Variable) == 0x000004, "Member 'TheEvil_C_CheckForEvil::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'TheEvil_C_CheckForEvil::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'TheEvil_C_CheckForEvil::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'TheEvil_C_CheckForEvil::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'TheEvil_C_CheckForEvil::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'TheEvil_C_CheckForEvil::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Array_Index_Variable_2) == 0x00001C, "Member 'TheEvil_C_CheckForEvil::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Loop_Counter_Variable_2) == 0x000020, "Member 'TheEvil_C_CheckForEvil::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Add_IntInt_ReturnValue_2) == 0x000024, "Member 'TheEvil_C_CheckForEvil::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Array_Index_Variable_3) == 0x000028, "Member 'TheEvil_C_CheckForEvil::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Loop_Counter_Variable_3) == 0x00002C, "Member 'TheEvil_C_CheckForEvil::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Add_IntInt_ReturnValue_3) == 0x000030, "Member 'TheEvil_C_CheckForEvil::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Loop_Counter_Variable_4) == 0x000034, "Member 'TheEvil_C_CheckForEvil::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Loop_Counter_Variable_5) == 0x000038, "Member 'TheEvil_C_CheckForEvil::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Add_IntInt_ReturnValue_4) == 0x00003C, "Member 'TheEvil_C_CheckForEvil::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Add_IntInt_ReturnValue_5) == 0x000040, "Member 'TheEvil_C_CheckForEvil::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Array_Index_Variable_4) == 0x000044, "Member 'TheEvil_C_CheckForEvil::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Array_Index_Variable_5) == 0x000048, "Member 'TheEvil_C_CheckForEvil::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Array_Index_Variable_6) == 0x00004C, "Member 'TheEvil_C_CheckForEvil::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Loop_Counter_Variable_6) == 0x000050, "Member 'TheEvil_C_CheckForEvil::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Add_IntInt_ReturnValue_6) == 0x000054, "Member 'TheEvil_C_CheckForEvil::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Array_Index_Variable_7) == 0x000058, "Member 'TheEvil_C_CheckForEvil::Temp_int_Array_Index_Variable_7' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Loop_Counter_Variable_7) == 0x00005C, "Member 'TheEvil_C_CheckForEvil::Temp_int_Loop_Counter_Variable_7' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Loop_Counter_Variable_8) == 0x000060, "Member 'TheEvil_C_CheckForEvil::Temp_int_Loop_Counter_Variable_8' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Add_IntInt_ReturnValue_7) == 0x000064, "Member 'TheEvil_C_CheckForEvil::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Add_IntInt_ReturnValue_8) == 0x000068, "Member 'TheEvil_C_CheckForEvil::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Array_Index_Variable_8) == 0x00006C, "Member 'TheEvil_C_CheckForEvil::Temp_int_Array_Index_Variable_8' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Array_Index_Variable_9) == 0x000070, "Member 'TheEvil_C_CheckForEvil::Temp_int_Array_Index_Variable_9' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Loop_Counter_Variable_9) == 0x000074, "Member 'TheEvil_C_CheckForEvil::Temp_int_Loop_Counter_Variable_9' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Add_IntInt_ReturnValue_9) == 0x000078, "Member 'TheEvil_C_CheckForEvil::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Array_Index_Variable_10) == 0x00007C, "Member 'TheEvil_C_CheckForEvil::Temp_int_Array_Index_Variable_10' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Get_Item) == 0x000080, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Less_IntInt_ReturnValue) == 0x000100, "Member 'TheEvil_C_CheckForEvil::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000101, "Member 'TheEvil_C_CheckForEvil::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000102, "Member 'TheEvil_C_CheckForEvil::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Length_ReturnValue_1) == 0x000104, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_BooleanOR_ReturnValue) == 0x000108, "Member 'TheEvil_C_CheckForEvil::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Length_ReturnValue_2) == 0x00010C, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Get_Item_2) == 0x000110, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Get_Item_3) == 0x000180, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x0001F0, "Member 'TheEvil_C_CheckForEvil::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_EqualEqual_NameName_ReturnValue_3) == 0x0001F1, "Member 'TheEvil_C_CheckForEvil::CallFunc_EqualEqual_NameName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_EqualEqual_NameName_ReturnValue_4) == 0x0001F2, "Member 'TheEvil_C_CheckForEvil::CallFunc_EqualEqual_NameName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_EqualEqual_NameName_ReturnValue_5) == 0x0001F3, "Member 'TheEvil_C_CheckForEvil::CallFunc_EqualEqual_NameName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_BooleanOR_ReturnValue_1) == 0x0001F4, "Member 'TheEvil_C_CheckForEvil::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_BooleanOR_ReturnValue_2) == 0x0001F5, "Member 'TheEvil_C_CheckForEvil::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Length_ReturnValue_3) == 0x0001F8, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Length_ReturnValue_4) == 0x0001FC, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Less_IntInt_ReturnValue_1) == 0x000200, "Member 'TheEvil_C_CheckForEvil::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Less_IntInt_ReturnValue_2) == 0x000201, "Member 'TheEvil_C_CheckForEvil::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Get_Item_4) == 0x000208, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Get_Item_5) == 0x0003D8, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_EqualEqual_NameName_ReturnValue_6) == 0x000448, "Member 'TheEvil_C_CheckForEvil::CallFunc_EqualEqual_NameName_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_EqualEqual_NameName_ReturnValue_7) == 0x000449, "Member 'TheEvil_C_CheckForEvil::CallFunc_EqualEqual_NameName_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_EqualEqual_NameName_ReturnValue_8) == 0x00044A, "Member 'TheEvil_C_CheckForEvil::CallFunc_EqualEqual_NameName_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_BooleanOR_ReturnValue_3) == 0x00044B, "Member 'TheEvil_C_CheckForEvil::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Length_ReturnValue_5) == 0x00044C, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Less_IntInt_ReturnValue_3) == 0x000450, "Member 'TheEvil_C_CheckForEvil::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Length_ReturnValue_6) == 0x000454, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Less_IntInt_ReturnValue_4) == 0x000458, "Member 'TheEvil_C_CheckForEvil::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Get_Item_6) == 0x000460, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Get_Item_7) == 0x000468, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Get_Item_8) == 0x000470, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_EqualEqual_NameName_ReturnValue_9) == 0x0004E0, "Member 'TheEvil_C_CheckForEvil::CallFunc_EqualEqual_NameName_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_EqualEqual_NameName_ReturnValue_10) == 0x0004E1, "Member 'TheEvil_C_CheckForEvil::CallFunc_EqualEqual_NameName_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_EqualEqual_NameName_ReturnValue_11) == 0x0004E2, "Member 'TheEvil_C_CheckForEvil::CallFunc_EqualEqual_NameName_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_EqualEqual_NameName_ReturnValue_12) == 0x0004E3, "Member 'TheEvil_C_CheckForEvil::CallFunc_EqualEqual_NameName_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_BooleanOR_ReturnValue_4) == 0x0004E4, "Member 'TheEvil_C_CheckForEvil::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_BooleanOR_ReturnValue_5) == 0x0004E5, "Member 'TheEvil_C_CheckForEvil::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Length_ReturnValue_7) == 0x0004E8, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Length_ReturnValue_8) == 0x0004EC, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Less_IntInt_ReturnValue_5) == 0x0004F0, "Member 'TheEvil_C_CheckForEvil::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Less_IntInt_ReturnValue_6) == 0x0004F1, "Member 'TheEvil_C_CheckForEvil::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Length_ReturnValue_9) == 0x0004F4, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Less_IntInt_ReturnValue_7) == 0x0004F8, "Member 'TheEvil_C_CheckForEvil::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Loop_Counter_Variable_10) == 0x0004FC, "Member 'TheEvil_C_CheckForEvil::Temp_int_Loop_Counter_Variable_10' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Less_IntInt_ReturnValue_8) == 0x000500, "Member 'TheEvil_C_CheckForEvil::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Add_IntInt_ReturnValue_10) == 0x000504, "Member 'TheEvil_C_CheckForEvil::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Array_Index_Variable_11) == 0x000508, "Member 'TheEvil_C_CheckForEvil::Temp_int_Array_Index_Variable_11' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Get_Item_9) == 0x000510, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Get_Item_10) == 0x000520, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Length_ReturnValue_10) == 0x0005E0, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Less_IntInt_ReturnValue_9) == 0x0005E4, "Member 'TheEvil_C_CheckForEvil::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Get_Item_11) == 0x0005E8, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Length_ReturnValue_11) == 0x000658, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_EqualEqual_NameName_ReturnValue_13) == 0x00065C, "Member 'TheEvil_C_CheckForEvil::CallFunc_EqualEqual_NameName_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Less_IntInt_ReturnValue_10) == 0x00065D, "Member 'TheEvil_C_CheckForEvil::CallFunc_Less_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_EqualEqual_NameName_ReturnValue_14) == 0x00065E, "Member 'TheEvil_C_CheckForEvil::CallFunc_EqualEqual_NameName_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_BooleanOR_ReturnValue_6) == 0x00065F, "Member 'TheEvil_C_CheckForEvil::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Loop_Counter_Variable_11) == 0x000660, "Member 'TheEvil_C_CheckForEvil::Temp_int_Loop_Counter_Variable_11' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Less_IntInt_ReturnValue_11) == 0x000664, "Member 'TheEvil_C_CheckForEvil::CallFunc_Less_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Add_IntInt_ReturnValue_11) == 0x000668, "Member 'TheEvil_C_CheckForEvil::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");

// Function theEvil.theEvil_C.loadData
// 0x00E0 (0x00E0 - 0x0000)
struct TheEvil_C_LoadData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadData_return;                          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mBool                          CallFunc_Array_Get_Item;                           // 0x00C8(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TheEvil_C_LoadData) == 0x000010, "Wrong alignment on TheEvil_C_LoadData");
static_assert(sizeof(TheEvil_C_LoadData) == 0x0000E0, "Wrong size on TheEvil_C_LoadData");
static_assert(offsetof(TheEvil_C_LoadData, Data) == 0x000000, "Member 'TheEvil_C_LoadData::Data' has a wrong offset!");
static_assert(offsetof(TheEvil_C_LoadData, Return) == 0x0000C0, "Member 'TheEvil_C_LoadData::Return' has a wrong offset!");
static_assert(offsetof(TheEvil_C_LoadData, CallFunc_loadData_return) == 0x0000C1, "Member 'TheEvil_C_LoadData::CallFunc_loadData_return' has a wrong offset!");
static_assert(offsetof(TheEvil_C_LoadData, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'TheEvil_C_LoadData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TheEvil_C_LoadData, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'TheEvil_C_LoadData::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function theEvil.theEvil_C.getData
// 0x02C0 (0x02C0 - 0x0000)
struct TheEvil_C_GetData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(Parm, OutParm, HasGetValueTypeHash)
	TArray<bool>                                  K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm)
	TArray<float>                                 K2Node_MakeArray_Array_1;                          // 0x00D0(0x0010)(ReferenceParm)
	struct FStruct_mBool                          K2Node_MakeStruct_struct_mBool;                    // 0x00E0(0x0010)(HasGetValueTypeHash)
	struct FStruct_mFloat                         K2Node_MakeStruct_struct_mFloat;                   // 0x00F0(0x0010)(HasGetValueTypeHash)
	struct FStruct_save                           CallFunc_getData_data;                             // 0x0100(0x00C0)(HasGetValueTypeHash)
	struct FStruct_mBool                          CallFunc_Array_Get_Item;                           // 0x01C0(0x0010)(HasGetValueTypeHash)
	struct FStruct_mFloat                         CallFunc_Array_Get_Item_1;                         // 0x01D0(0x0010)(HasGetValueTypeHash)
	TArray<struct FStruct_mBool>                  K2Node_MakeArray_Array_2;                          // 0x01E0(0x0010)(ReferenceParm)
	TArray<struct FStruct_mFloat>                 K2Node_MakeArray_Array_3;                          // 0x01F0(0x0010)(ReferenceParm)
	struct FStruct_save                           K2Node_SetFieldsInStruct_StructOut;                // 0x0200(0x00C0)(HasGetValueTypeHash)
};
static_assert(alignof(TheEvil_C_GetData) == 0x000010, "Wrong alignment on TheEvil_C_GetData");
static_assert(sizeof(TheEvil_C_GetData) == 0x0002C0, "Wrong size on TheEvil_C_GetData");
static_assert(offsetof(TheEvil_C_GetData, Data) == 0x000000, "Member 'TheEvil_C_GetData::Data' has a wrong offset!");
static_assert(offsetof(TheEvil_C_GetData, K2Node_MakeArray_Array) == 0x0000C0, "Member 'TheEvil_C_GetData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TheEvil_C_GetData, K2Node_MakeArray_Array_1) == 0x0000D0, "Member 'TheEvil_C_GetData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(TheEvil_C_GetData, K2Node_MakeStruct_struct_mBool) == 0x0000E0, "Member 'TheEvil_C_GetData::K2Node_MakeStruct_struct_mBool' has a wrong offset!");
static_assert(offsetof(TheEvil_C_GetData, K2Node_MakeStruct_struct_mFloat) == 0x0000F0, "Member 'TheEvil_C_GetData::K2Node_MakeStruct_struct_mFloat' has a wrong offset!");
static_assert(offsetof(TheEvil_C_GetData, CallFunc_getData_data) == 0x000100, "Member 'TheEvil_C_GetData::CallFunc_getData_data' has a wrong offset!");
static_assert(offsetof(TheEvil_C_GetData, CallFunc_Array_Get_Item) == 0x0001C0, "Member 'TheEvil_C_GetData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TheEvil_C_GetData, CallFunc_Array_Get_Item_1) == 0x0001D0, "Member 'TheEvil_C_GetData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TheEvil_C_GetData, K2Node_MakeArray_Array_2) == 0x0001E0, "Member 'TheEvil_C_GetData::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(TheEvil_C_GetData, K2Node_MakeArray_Array_3) == 0x0001F0, "Member 'TheEvil_C_GetData::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(TheEvil_C_GetData, K2Node_SetFieldsInStruct_StructOut) == 0x000200, "Member 'TheEvil_C_GetData::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

}

