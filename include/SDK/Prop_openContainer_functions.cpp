#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_openContainer

#include "Basic.hpp"

#include "Prop_openContainer_classes.hpp"
#include "Prop_openContainer_parameters.hpp"


namespace SDK
{

// Function prop_openContainer.prop_openContainer_C.ExecuteUbergraph_prop_openContainer
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProp_openContainer_C::ExecuteUbergraph_prop_openContainer(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_openContainer_C", "ExecuteUbergraph_prop_openContainer");

	Params::Prop_openContainer_C_ExecuteUbergraph_prop_openContainer Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function prop_openContainer.prop_openContainer_C.doStuff
// (BlueprintCallable, BlueprintEvent)

void AProp_openContainer_C::DoStuff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_openContainer_C", "doStuff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function prop_openContainer.prop_openContainer_C.propAwoken
// (BlueprintCallable, BlueprintEvent)

void AProp_openContainer_C::PropAwoken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_openContainer_C", "propAwoken");

	UObject::ProcessEvent(Func, nullptr);
}


// Function prop_openContainer.prop_openContainer_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProp_openContainer_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_openContainer_C", "ReceiveTick");

	Params::Prop_openContainer_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function prop_openContainer.prop_openContainer_C.gamemodeBeginPlay
// (Public, BlueprintCallable, BlueprintEvent)

void AProp_openContainer_C::GamemodeBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_openContainer_C", "gamemodeBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function prop_openContainer.prop_openContainer_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AProp_openContainer_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_openContainer_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function prop_openContainer.prop_openContainer_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void AProp_openContainer_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_openContainer_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function prop_openContainer.prop_openContainer_C.loadData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FStruct_save                     Data                                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AProp_openContainer_C::LoadData(const struct FStruct_save& Data, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_openContainer_C", "loadData");

	Params::Prop_openContainer_C_LoadData Parms{};

	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}

}

