#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Firetank

#include "Basic.hpp"

#include "Struct_save_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Struct_mBool_structs.hpp"
#include "Engine_structs.hpp"
#include "Struct_mFloat_structs.hpp"
#include "AIModule_structs.hpp"
#include "Enum_interactionActions_structs.hpp"
#include "InputCore_structs.hpp"
#include "Struct_food_structs.hpp"
#include "Struct_prop3_structs.hpp"


namespace SDK::Params
{

// Function firetank.firetank_C.ExecuteUbergraph_firetank
// 0x1A00 (0x1A00 - 0x0000)
struct Firetank_C_ExecuteUbergraph_firetank final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable;                              // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_1;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	EPathFollowingResult                          Temp_byte_Variable;                                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0040(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Variable_1;                               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_propToObject_ReturnValue;                 // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_food                           CallFunc_propToObject_foodData;                    // 0x0058(0x001C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_propToObject_object;                      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_propToObject_isFood;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_prop3                          CallFunc_propToObject_fuckYouRetard;               // 0x0088(0x0080)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0110(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Variable_2;                               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_propToObject_ReturnValue_1;               // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_food                           CallFunc_propToObject_foodData_1;                  // 0x0130(0x001C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_propToObject_object_1;                    // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_propToObject_isFood_1;                    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_prop3                          CallFunc_propToObject_fuckYouRetard_1;             // 0x0160(0x0080)(HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_5;                               // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x020C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_ignore;                               // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_215[0x3];                                      // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_18;                            // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_7;                                // 0x0220(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_Event_kick;                                 // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_name_1;                               // 0x02AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_17;                            // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_16;                            // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_15;                            // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_14;                            // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_damage_6;                             // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_6;                                // 0x02DC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_actor_1;                              // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_impact_1;                             // 0x0370(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWaterVolume_C*                         K2Node_Event_water_3;                              // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWaterVolume_C*                         K2Node_Event_water_2;                              // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWaterVolume_C*                         K2Node_Event_water_1;                              // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWaterVolume_C*                         K2Node_Event_water;                                // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_activate;                             // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_static;                               // 0x03A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_frozen;                               // 0x03A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_active;                               // 0x03A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_key_1;                                // 0x03A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_13;                            // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_5;                                // 0x03C0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_Event_damage_5;                             // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_fuel;                                 // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_damage_4;                             // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hot;                                  // 0x0454(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_4DC[0x4];                                      // 0x04DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_12;                            // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_4;                                // 0x04E8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       K2Node_Event_action;                               // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_571[0x7];                                      // 0x0571(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_11;                            // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_10;                            // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_9;                             // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_8;                             // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_7;                             // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_wheelDelta;                           // 0x05A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A4[0x4];                                      // 0x05A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_6;                             // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_mouse;                                // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_5;                             // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_Event_key;                                  // 0x05C0(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_Event_pressed;                              // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D9[0x3];                                      // 0x05D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_temperature_1;                        // 0x05DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_temperature;                          // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_speed;                                // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_4;                             // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_3;                                // 0x05F0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 K2Node_Event_name;                                 // 0x0678(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_Event_volume;                               // 0x0688(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68C[0x4];                                      // 0x068C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_3;                             // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_location_1;                           // 0x0698(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_damage_3;                             // 0x06A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_clean_1;                              // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A9[0x7];                                      // 0x06A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_2;                             // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_2;                                // 0x06B8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AHook_C*                                K2Node_Event_hook_1;                               // 0x0740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_clean;                                // 0x0748(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74C[0x4];                                      // 0x074C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_1;                             // 0x0750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHook_C*                                K2Node_Event_hook;                                 // 0x0758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0764(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0768(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x076C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0770(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x077C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0780(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_781[0x3];                                      // 0x0781(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPointDistanceToSegment_ReturnValue;    // 0x0784(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0788(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x078C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x078D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78E[0x2];                                      // 0x078E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0790(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0794(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x079C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x07A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A1[0x3];                                      // 0x07A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x07A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x07A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x07AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x07B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x07B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x07B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x07C4(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_VLerp_ReturnValue_1;                      // 0x07D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_3;                       // 0x07E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_4;                       // 0x07E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x07E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x07F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0800(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x080C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0818(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x081C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0820(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_4;           // 0x0828(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_4;            // 0x0830(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0838(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x0844(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x08CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x08D0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x08D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x08DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DD[0x3];                                      // 0x08DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x08E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue_1;             // 0x08EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x08F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0904(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0910(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x091C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0928(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x0934(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0940(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocityAtPoint_ReturnValue; // 0x094C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0958(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0964(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0968(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x096C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue;                  // 0x0970(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0974(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0978(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x097C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x0980(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0984(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0988(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_5;                       // 0x098C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_6;                       // 0x0990(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x0994(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x0998(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x099C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocityAtPoint_ReturnValue_1; // 0x09A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x09B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x09B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x09C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x09C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x09CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_1;                // 0x09D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_6;          // 0x09D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_7;          // 0x09D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x09DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_8;          // 0x09E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_7;                       // 0x09E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x09E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_8;                       // 0x09EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue;        // 0x09F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue_1;      // 0x09F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x09F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x09FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x0A00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_1;        // 0x0A04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0A08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue_1;         // 0x0A0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_12;                              // 0x0A10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_13;                              // 0x0A14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x0A18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A19[0x3];                                      // 0x0A19(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0A1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           K2Node_Select_Default;                             // 0x0A20(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0A30(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        K2Node_Select_Default_1;                           // 0x0A38(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0A40(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x0A70(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0AA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA4[0xC];                                      // 0x0AA4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue;        // 0x0AB0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0AE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AE1[0x3];                                      // 0x0AE1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_14;                              // 0x0AE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0AE8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AF4[0x4];                                      // 0x0AF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFiretank_thread_Skeleton_AnimBlueprint_C* K2Node_Select_Default_2;                           // 0x0AF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetRandomPointInNavigableRadius_RandomLocation; // 0x0B00(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_GetRandomPointInNavigableRadius_ReturnValue; // 0x0B0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B0D[0x3];                                      // 0x0B0D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0B10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B14[0xC];                                      // 0x0B14(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_Select_Default_3;                           // 0x0B20(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0B50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0B54(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B55[0x3];                                      // 0x0B55(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0B58(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0B68(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0B78(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0B80(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0B88(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualExactly_VectorVector_ReturnValue;    // 0x0B94(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B95[0x3];                                      // 0x0B95(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0B98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0B9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x0BA0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0BAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0BB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x0BB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0BB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0BBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_15;                              // 0x0BC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x0BC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_4;                           // 0x0BC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0BCC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0BD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0BD4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_BE4[0x4];                                      // 0x0BE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x0BE8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue;           // 0x0BF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0BF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BF2[0x2];                                      // 0x0BF2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_16;                              // 0x0BF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_5;                           // 0x0BF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0BFC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DestroyedActor;                 // 0x0C08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_17;                              // 0x0C10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x0C14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0C18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C19[0x7];                                      // 0x0C19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0C20(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0C28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C29[0x3];                                      // 0x0C29(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0C2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0C30(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_2;                      // 0x0C3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue; // 0x0C40(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_3;                      // 0x0C4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0C50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0C54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0C58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5C[0x4];                                      // 0x0C5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicsConstraintComponent*            CallFunc_Array_Get_Item_2;                         // 0x0C60(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0C68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C6C[0x4];                                      // 0x0C6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicsConstraintComponent*            CallFunc_Array_Get_Item_3;                         // 0x0C70(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0C78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C79[0x3];                                      // 0x0C79(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0C7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0C80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C81[0x3];                                      // 0x0C81(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0C84(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_C94[0x4];                                      // 0x0C94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_3;        // 0x0C98(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0CA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0CA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA2[0x2];                                      // 0x0CA2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_4;    // 0x0CA4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0CB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB1[0x3];                                      // 0x0CB1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0CB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0CB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x0CBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0CC0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0CCC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x0CD8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0CE4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_1;               // 0x0CF0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x0CFC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x0D08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_1;                                // 0x0D10(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_Event_damage_2;                             // 0x0D98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0D9C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0D9D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9E[0x2];                                      // 0x0D9E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0DA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0DA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0DA8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0DB4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0DC0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0DCC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0DD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0DE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0DE8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0DF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0DF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0DFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0E00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0E04(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0E10(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1C[0x4];                                      // 0x0E1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0E20(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_18;                              // 0x0E28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x0E2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0E30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E31[0x3];                                      // 0x0E31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut;         // 0x0E34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_4;                         // 0x0E38(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0E40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0E41(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0E42(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0E43(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0E44(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E45[0x3];                                      // 0x0E45(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut_1;       // 0x0E48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4C[0x4];                                      // 0x0E4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_2;     // 0x0E50(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_3;     // 0x0E80(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0EB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0EB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0EC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0EC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player;                   // 0x0ED0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0EE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EE1[0x7];                                      // 0x0EE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_1;                 // 0x0EE8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0EF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EF9[0x7];                                      // 0x0EF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_C*                                CallFunc_asProp_return;                            // 0x0F00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_C*                                CallFunc_asProp_return_1;                          // 0x0F08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0F10(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0F20(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x0F30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3; // 0x0F38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_food_C*                           CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x0F40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_C*                                CallFunc_FinishSpawningActor_ReturnValue_3;        // 0x0F48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4; // 0x0F50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5; // 0x0F58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_C*                                CallFunc_FinishSpawningActor_ReturnValue_4;        // 0x0F60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_food_C*                           CallFunc_FinishSpawningActor_ReturnValue_5;        // 0x0F68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Select_Default_6;                           // 0x0F70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_firetankGastank_C*                K2Node_DynamicCast_AsProp_Firetank_Gastank;        // 0x0F78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0F80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0F81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0F82(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0F83(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_5;    // 0x0F84(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0F90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomPointInBoundingBox_ReturnValue;     // 0x0F94(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0FA0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_6;    // 0x0FD0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FDC[0x4];                                      // 0x0FDC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0FE0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x1010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1011[0x3];                                     // 0x1011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x1014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_9;                       // 0x1018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue_1;             // 0x101C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101D[0x3];                                     // 0x101D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x1020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_10;                      // 0x1024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue_2;             // 0x1028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1029[0x3];                                     // 0x1029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_4;                // 0x102C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_11;                      // 0x1030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_damage_1;                             // 0x1034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_location;                             // 0x1038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_9;          // 0x1044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x1048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1049[0x3];                                     // 0x1049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_19;                              // 0x104C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Select_Default_7;                           // 0x1050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_8;                           // 0x1058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1064[0x4];                                     // 0x1064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_firetankGastank_C*                K2Node_DynamicCast_AsProp_Firetank_Gastank_1;      // 0x1068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x1070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1071[0x3];                                     // 0x1071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_5;        // 0x1074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x1080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x1084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1085[0x3];                                     // 0x1085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x1088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_9;                           // 0x108C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_LowEntry_LocalVariable_Value__Object;       // 0x1098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x10A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x10B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        CallFunc_GetCurrentPathPoints_ReturnValue;         // 0x10B8(0x0010)(ConstParm, ReferenceParm)
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x10C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x10D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D1[0x7];                                     // 0x10D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        CallFunc_GetCurrentPathPoints_ReturnValue_1;       // 0x10D8(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x10E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10E9[0x3];                                     // 0x10E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item_5;                         // 0x10EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_6;                         // 0x10F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x1104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x1108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x110C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_110D[0x3];                                     // 0x110D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item_7;                         // 0x1110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x111C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x1120(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_2;       // 0x1128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x1129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x112A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112B[0x5];                                     // 0x112B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue;      // 0x1130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x1138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x1139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x113A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_113B[0x1];                                     // 0x113B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x113C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x1140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_5;                // 0x1144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x1148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_6;                // 0x114C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_7;                // 0x1150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1154[0x4];                                     // 0x1154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_2;              // 0x1158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        CallFunc_GetCurrentPathPoints_ReturnValue_2;       // 0x1160(0x0010)(ConstParm, ReferenceParm)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_3;  // 0x1170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_3;           // 0x1178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_3;            // 0x1180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_3;       // 0x1188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_2;           // 0x118C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_118D[0x3];                                     // 0x118D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_2;          // 0x1190(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x1218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1219[0x7];                                     // 0x1219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_DynamicCast_AsMain_Player;                  // 0x1220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x1228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1229[0x7];                                     // 0x1229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_2;  // 0x1230(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x1238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x1240(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_2;       // 0x1248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124C[0x4];                                     // 0x124C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_DynamicCast_AsMain_Player_1;                // 0x1250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x1258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1259[0x3];                                     // 0x1259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x125C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_126C[0x4];                                     // 0x126C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_4;        // 0x1270(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x1278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x127C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue_1;                  // 0x127D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_3;       // 0x127E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_4;       // 0x127F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x1280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x1281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1282[0x6];                                     // 0x1282(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x1288(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x1290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x1298(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x12A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x12A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12A5[0x3];                                     // 0x12A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x12A8(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetVelocity_ReturnValue_1;                // 0x1330(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_133C[0x4];                                     // 0x133C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects;                  // 0x1340(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x1350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1351[0x3];                                     // 0x1351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue_4;                      // 0x1354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_4;         // 0x1358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1359[0x7];                                     // 0x1359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x1360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsActor_Chip_Pile;         // 0x1368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x1370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1371[0x7];                                     // 0x1371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AKerfurOmega_C*                         K2Node_DynamicCast_AsKerfur_Omega;                 // 0x1378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x1380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1381[0x7];                                     // 0x1381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_DynamicCast_AsMain_Player_2;                // 0x1388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x1390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1391[0x7];                                     // 0x1391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        CallFunc_addDamage_self_CastInput;                 // 0x1398(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetVelocity_ReturnValue_2;                // 0x13A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_6;        // 0x13B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue_3;                // 0x13C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_3;       // 0x13CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_5;       // 0x13D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x13DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13E8[0x8];                                     // 0x13E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x13F0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x1420(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6; // 0x14A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      CallFunc_obj_statDynPhysVeh_obj;                   // 0x14B0(0x0010)(ReferenceParm)
	class AFiretankCorpse_C*                      CallFunc_FinishSpawningActor_ReturnValue_6;        // 0x14C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x14C8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x1550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x1551(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x1552(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1553[0x1];                                     // 0x1553(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x1554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x1558(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x155C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x1568(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x1574(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x1580(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_158C[0x4];                                     // 0x158C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x1590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x1598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x15A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x15A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x15B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x15B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x15B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x15BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x15C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue_1;            // 0x15D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_10;         // 0x15D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_5;       // 0x15DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15DD[0x3];                                     // 0x15DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x15E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x15E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_actor;                                // 0x15E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_damage;                               // 0x15F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x15F4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                K2Node_Event_impact;                               // 0x167C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_skipSetting;                          // 0x1688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue_1;       // 0x1689(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_168A[0x6];                                     // 0x168A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x1690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x1698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1699[0x7];                                     // 0x1699(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_DynamicCast_AsMain_Player_3;                // 0x16A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x16A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16A9[0x7];                                     // 0x16A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x16B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x16B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x16C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x16C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x16CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16CD[0x3];                                     // 0x16CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x16D0(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects_1;                // 0x1758(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x1768(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1769[0x7];                                     // 0x1769(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x1770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsActor_Chip_Pile_1;       // 0x1778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x1780(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue_2;       // 0x1781(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1782[0x2];                                     // 0x1782(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x1784(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x1788(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_9;        // 0x178C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut_2;       // 0x1790(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut_3;       // 0x1794(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_3;           // 0x1798(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_2;               // 0x17A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x17B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_2;           // 0x17BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_3;                     // 0x17C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x17CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_3;           // 0x17D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x17D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_2;                // 0x17D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2; // 0x17DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x17E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_4;                     // 0x17E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_3; // 0x17F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_4;           // 0x17F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_10;       // 0x17F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_3;                // 0x17FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_11;       // 0x1800(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_2;                        // 0x1804(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_5;             // 0x1808(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_4; // 0x180C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_3;                     // 0x1810(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_12;       // 0x1814(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_8;                // 0x1818(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_13;       // 0x181C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_6;             // 0x1820(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_7;             // 0x1824(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_6;       // 0x1828(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_4;                     // 0x1834(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_7;       // 0x1838(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_9;                // 0x1844(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x1848(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_8;             // 0x1854(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_8;       // 0x1858(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_9;       // 0x1864(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue_1;                  // 0x1870(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_4;       // 0x187C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_5;         // 0x1880(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1881[0x3];                                     // 0x1881(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x1884(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_14;       // 0x1888(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_3;         // 0x188C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_6;         // 0x1890(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1891[0x3];                                     // 0x1891(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_15;       // 0x1894(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      CallFunc_obj_statDyn_obj;                          // 0x1898(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_7;    // 0x18A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x18B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18B5[0x3];                                     // 0x18B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_20;                              // 0x18B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_5;           // 0x18BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18BD[0x3];                                     // 0x18BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x18C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_7;        // 0x18C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_1;       // 0x18D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_1;  // 0x1958(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x1959(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x195A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_6;       // 0x195B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_7;       // 0x195C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x195D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_195E[0x2];                                     // 0x195E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_8;        // 0x1960(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_9;        // 0x196C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_10;       // 0x1978(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x1984(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x1990(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_7; // 0x19C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AUfoAbducter_C*                         CallFunc_FinishSpawningActor_ReturnValue_7;        // 0x19C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut_4;       // 0x19D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_7;         // 0x19D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19D5[0x3];                                     // 0x19D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_21;                              // 0x19D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_6;           // 0x19DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19DD[0x3];                                     // 0x19DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_10;               // 0x19E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_16;       // 0x19E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_17;       // 0x19E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut_5;       // 0x19EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut_6;       // 0x19F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_13;                // 0x19F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_ExecuteUbergraph_firetank) == 0x000010, "Wrong alignment on Firetank_C_ExecuteUbergraph_firetank");
static_assert(sizeof(Firetank_C_ExecuteUbergraph_firetank) == 0x001A00, "Wrong size on Firetank_C_ExecuteUbergraph_firetank");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, EntryPoint) == 0x000000, "Member 'Firetank_C_ExecuteUbergraph_firetank::EntryPoint' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_int_Variable) == 0x000004, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_bool_Variable) == 0x000008, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_struct_Variable) == 0x00000C, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_CustomEvent_MovementResult_1) == 0x000028, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_CustomEvent_MovementResult_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_CustomEvent_MovementResult) == 0x000029, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_CustomEvent_MovementResult' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_byte_Variable) == 0x00003C, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_object_Variable) == 0x000040, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_int_Variable_1) == 0x000050, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_propToObject_ReturnValue) == 0x000054, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_propToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_propToObject_foodData) == 0x000058, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_propToObject_foodData' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_propToObject_object) == 0x000078, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_propToObject_object' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_propToObject_isFood) == 0x000080, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_propToObject_isFood' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_propToObject_fuckYouRetard) == 0x000088, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_propToObject_fuckYouRetard' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_IsValidClass_ReturnValue) == 0x000108, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000109, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Add_IntInt_ReturnValue) == 0x00010C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_object_Variable_1) == 0x000110, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_int_Variable_2) == 0x000120, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Add_IntInt_ReturnValue_1) == 0x000124, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_int_Variable_3) == 0x000128, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_propToObject_ReturnValue_1) == 0x00012C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_propToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_propToObject_foodData_1) == 0x000130, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_propToObject_foodData_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_propToObject_object_1) == 0x000150, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_propToObject_object_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_propToObject_isFood_1) == 0x000158, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_propToObject_isFood_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_propToObject_fuckYouRetard_1) == 0x000160, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_propToObject_fuckYouRetard_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_int_Variable_4) == 0x0001E0, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001E4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_IsValidClass_ReturnValue_1) == 0x0001E8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_int_Variable_5) == 0x0001EC, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_int_Variable_6) == 0x0001F0, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0001F4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Add_IntInt_ReturnValue_3) == 0x0001F8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_int_Variable_7) == 0x0001FC, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000200, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Add_IntInt_ReturnValue_4) == 0x000204, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Less_IntInt_ReturnValue) == 0x000208, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_name_Variable) == 0x00020C, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_ignore) == 0x000214, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_ignore' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_player_18) == 0x000218, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_player_18' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_hit_7) == 0x000220, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_hit_7' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_kick) == 0x0002A8, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_kick' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_name_1) == 0x0002AC, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_name_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_player_17) == 0x0002B8, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_player_17' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_player_16) == 0x0002C0, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_player_16' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_player_15) == 0x0002C8, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_player_15' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_player_14) == 0x0002D0, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_player_14' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_damage_6) == 0x0002D8, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_damage_6' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_hit_6) == 0x0002DC, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_hit_6' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_actor_1) == 0x000368, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_actor_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_impact_1) == 0x000370, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_impact_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_water_3) == 0x000380, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_water_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_water_2) == 0x000388, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_water_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_water_1) == 0x000390, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_water_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_water) == 0x000398, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_water' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_activate) == 0x0003A0, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_activate' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_static) == 0x0003A1, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_static' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_frozen) == 0x0003A2, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_frozen' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_active) == 0x0003A3, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_active' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_key_1) == 0x0003A8, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_key_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_player_13) == 0x0003B8, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_player_13' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_hit_5) == 0x0003C0, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_hit_5' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_damage_5) == 0x000448, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_damage_5' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_fuel) == 0x00044C, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_fuel' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_damage_4) == 0x000450, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_damage_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_hot) == 0x000454, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_hot' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_player_12) == 0x0004E0, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_player_12' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_hit_4) == 0x0004E8, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_hit_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_action) == 0x000570, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_action' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_player_11) == 0x000578, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_player_11' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_player_10) == 0x000580, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_player_10' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_player_9) == 0x000588, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_player_9' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_player_8) == 0x000590, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_player_8' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_player_7) == 0x000598, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_player_7' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_wheelDelta) == 0x0005A0, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_wheelDelta' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_player_6) == 0x0005A8, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_player_6' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_mouse) == 0x0005B0, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_mouse' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_player_5) == 0x0005B8, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_player_5' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_key) == 0x0005C0, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_key' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_pressed) == 0x0005D8, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_pressed' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_temperature_1) == 0x0005DC, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_temperature_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_temperature) == 0x0005E0, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_temperature' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_speed) == 0x0005E4, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_speed' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_player_4) == 0x0005E8, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_player_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_hit_3) == 0x0005F0, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_hit_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_name) == 0x000678, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_name' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_volume) == 0x000688, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_volume' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_player_3) == 0x000690, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_player_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_location_1) == 0x000698, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_location_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_damage_3) == 0x0006A4, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_damage_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_clean_1) == 0x0006A8, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_clean_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_player_2) == 0x0006B0, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_player_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_hit_2) == 0x0006B8, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_hit_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_hook_1) == 0x000740, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_hook_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_clean) == 0x000748, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_clean' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_player_1) == 0x000750, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_player_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_hook) == 0x000758, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_hook' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_DeltaSeconds) == 0x000760, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000764, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Array_Length_ReturnValue) == 0x000768, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Array_Length_ReturnValue_1) == 0x00076C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000770, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Max_ReturnValue) == 0x00077C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000780, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_GetPointDistanceToSegment_ReturnValue) == 0x000784, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_GetPointDistanceToSegment_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_int_Variable_8) == 0x000788, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00078C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x00078D, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Add_IntInt_ReturnValue_5) == 0x000790, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_name_Variable_1) == 0x000794, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_int_Variable_9) == 0x00079C, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x0007A0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Add_IntInt_ReturnValue_6) == 0x0007A4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x0007A8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Lerp_ReturnValue) == 0x0007AC, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Lerp_ReturnValue_1) == 0x0007B0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Lerp_ReturnValue_2) == 0x0007B4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_VLerp_ReturnValue) == 0x0007B8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_CreateDelegate_OutputDelegate_2) == 0x0007C4, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_VLerp_ReturnValue_1) == 0x0007D4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_VLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Lerp_ReturnValue_3) == 0x0007E0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Lerp_ReturnValue_4) == 0x0007E4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0007E8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0007F4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Add_VectorVector_ReturnValue) == 0x000800, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_GetRightVector_ReturnValue) == 0x00080C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_int_Array_Index_Variable) == 0x000818, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_RandomFloatInRange_ReturnValue) == 0x00081C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_ComponentBoundEvent_HitComponent) == 0x000820, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_ComponentBoundEvent_OtherActor_4) == 0x000828, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_ComponentBoundEvent_OtherActor_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_ComponentBoundEvent_OtherComp_4) == 0x000830, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_ComponentBoundEvent_OtherComp_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000838, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_ComponentBoundEvent_Hit) == 0x000844, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_int_Loop_Counter_Variable) == 0x0008CC, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_name_Variable_2) == 0x0008D0, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Add_IntInt_ReturnValue_7) == 0x0008D8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_bool_Variable_1) == 0x0008DC, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_GetForwardVector_ReturnValue) == 0x0008E0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_GetRightVector_ReturnValue_1) == 0x0008EC, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_GetRightVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0008F8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000904, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Normal_ReturnValue) == 0x000910, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Normal_ReturnValue_1) == 0x00091C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000928, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Normal_ReturnValue_2) == 0x000934, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000940, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_GetPhysicsLinearVelocityAtPoint_ReturnValue) == 0x00094C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_GetPhysicsLinearVelocityAtPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_GetForwardVector_ReturnValue_1) == 0x000958, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_VSize_ReturnValue) == 0x000964, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Dot_VectorVector_ReturnValue) == 0x000968, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00096C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_SignOfFloat_ReturnValue) == 0x000970, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Add_FloatFloat_ReturnValue) == 0x000974, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000978, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x00097C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x000980, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000984, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000988, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Lerp_ReturnValue_5) == 0x00098C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Lerp_ReturnValue_6) == 0x000990, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Lerp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_int_Variable_10) == 0x000994, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_int_Variable_11) == 0x000998, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x00099C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_GetPhysicsLinearVelocityAtPoint_ReturnValue_1) == 0x0009A8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_GetPhysicsLinearVelocityAtPoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_VSize_ReturnValue_1) == 0x0009B4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_GetForwardVector_ReturnValue_2) == 0x0009B8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x0009C4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x0009C8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0009CC, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_SignOfFloat_ReturnValue_1) == 0x0009D0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_SignOfFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Divide_FloatFloat_ReturnValue_6) == 0x0009D4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Divide_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Divide_FloatFloat_ReturnValue_7) == 0x0009D8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Divide_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0009DC, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Divide_FloatFloat_ReturnValue_8) == 0x0009E0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Divide_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Lerp_ReturnValue_7) == 0x0009E4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Lerp_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0009E8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Lerp_ReturnValue_8) == 0x0009EC, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Lerp_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_GetGlobalTimeDilation_ReturnValue) == 0x0009F0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_GetGlobalTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_GetGlobalTimeDilation_ReturnValue_1) == 0x0009F4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_GetGlobalTimeDilation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0009F8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0009FC, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x000A00, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_VictoryFloatPlusEquals_FloatOut_1) == 0x000A04, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_VictoryFloatPlusEquals_FloatOut_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000A08, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Percent_FloatFloat_ReturnValue_1) == 0x000A0C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Percent_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_int_Variable_12) == 0x000A10, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_int_Variable_13) == 0x000A14, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_int_Variable_13' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x000A18, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Add_IntInt_ReturnValue_8) == 0x000A1C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Select_Default) == 0x000A20, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Array_Get_Item) == 0x000A30, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Select_Default_1) == 0x000A38, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000A40, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x000A70, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Array_Length_ReturnValue_2) == 0x000AA0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_MakeRelativeTransform_ReturnValue) == 0x000AB0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_MakeRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Less_IntInt_ReturnValue_1) == 0x000AE0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_int_Variable_14) == 0x000AE4, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_int_Variable_14' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000AE8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Select_Default_2) == 0x000AF8, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_K2_GetRandomPointInNavigableRadius_RandomLocation) == 0x000B00, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_K2_GetRandomPointInNavigableRadius_RandomLocation' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_K2_GetRandomPointInNavigableRadius_ReturnValue) == 0x000B0C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_K2_GetRandomPointInNavigableRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_int_Array_Index_Variable_1) == 0x000B10, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Select_Default_3) == 0x000B20, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Subtract_IntInt_ReturnValue) == 0x000B50, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Greater_IntInt_ReturnValue) == 0x000B54, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_CreateDelegate_OutputDelegate_3) == 0x000B58, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_CreateDelegate_OutputDelegate_4) == 0x000B68, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000B78, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000B80, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000B88, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_EqualExactly_VectorVector_ReturnValue) == 0x000B94, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_EqualExactly_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_float_Variable) == 0x000B98, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_float_Variable_1) == 0x000B9C, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x000BA0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000BAC, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000BB0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x000BB4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_FClamp_ReturnValue) == 0x000BB8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_FClamp_ReturnValue_1) == 0x000BBC, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_int_Variable_15) == 0x000BC0, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_int_Variable_15' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_FClamp_ReturnValue_2) == 0x000BC4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Select_Default_4) == 0x000BC8, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_float_Variable_2) == 0x000BCC, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_float_Variable_3) == 0x000BD0, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_CreateDelegate_OutputDelegate_5) == 0x000BD4, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x000BE8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_IsOverlappingActor_ReturnValue) == 0x000BF0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_IsOverlappingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_IsValid_ReturnValue) == 0x000BF1, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_int_Variable_16) == 0x000BF4, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_int_Variable_16' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Select_Default_5) == 0x000BF8, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000BFC, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_CustomEvent_DestroyedActor) == 0x000C08, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_CustomEvent_DestroyedActor' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_int_Variable_17) == 0x000C10, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_int_Variable_17' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Add_IntInt_ReturnValue_9) == 0x000C14, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Less_FloatFloat_ReturnValue) == 0x000C18, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Array_Get_Item_1) == 0x000C20, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Less_IntInt_ReturnValue_2) == 0x000C28, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000C2C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_GetVelocity_ReturnValue) == 0x000C30, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_VSize_ReturnValue_2) == 0x000C3C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_VSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue) == 0x000C40, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_VSize_ReturnValue_3) == 0x000C4C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_VSize_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000C50, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_FInterpTo_ReturnValue) == 0x000C54, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000C58, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Array_Get_Item_2) == 0x000C60, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Array_Length_ReturnValue_3) == 0x000C68, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Array_Get_Item_3) == 0x000C70, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Less_IntInt_ReturnValue_3) == 0x000C78, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Array_Length_ReturnValue_4) == 0x000C7C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Less_IntInt_ReturnValue_4) == 0x000C80, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_CreateDelegate_OutputDelegate_6) == 0x000C84, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_K2_SetTimerDelegate_ReturnValue_3) == 0x000C98, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_K2_SetTimerDelegate_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_IsPlaying_ReturnValue) == 0x000CA0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000CA1, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_K2_GetComponentLocation_ReturnValue_4) == 0x000CA4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_K2_GetComponentLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BooleanOR_ReturnValue) == 0x000CB0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_SelectFloat_ReturnValue) == 0x000CB4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_SelectFloat_ReturnValue_1) == 0x000CB8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x000CBC, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000CC0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000CCC, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x000CD8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_SelectVector_ReturnValue) == 0x000CE4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_SelectVector_ReturnValue_1) == 0x000CF0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_SelectVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x000CFC, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_player) == 0x000D08, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_hit_1) == 0x000D10, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_hit_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_damage_2) == 0x000D98, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_damage_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_bBlockingHit) == 0x000D9C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_bInitialOverlap) == 0x000D9D, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_Time) == 0x000DA0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_Distance) == 0x000DA4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_Location) == 0x000DA8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_ImpactPoint) == 0x000DB4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_Normal) == 0x000DC0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_ImpactNormal) == 0x000DCC, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_PhysMat) == 0x000DD8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_HitActor) == 0x000DE0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_HitComponent) == 0x000DE8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_HitBoneName) == 0x000DF0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_HitItem) == 0x000DF8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_ElementIndex) == 0x000DFC, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_FaceIndex) == 0x000E00, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_TraceStart) == 0x000E04, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_TraceEnd) == 0x000E10, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000E20, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_int_Variable_18) == 0x000E28, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_int_Variable_18' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Add_IntInt_ReturnValue_10) == 0x000E2C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000E30, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_VictoryFloatMinusEquals_FloatOut) == 0x000E34, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_VictoryFloatMinusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Array_Get_Item_4) == 0x000E38, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Less_IntInt_ReturnValue_5) == 0x000E40, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000E41, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000E42, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BooleanOR_ReturnValue_1) == 0x000E43, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000E44, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_VictoryFloatMinusEquals_FloatOut_1) == 0x000E48, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_VictoryFloatMinusEquals_FloatOut_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_K2_GetComponentToWorld_ReturnValue_2) == 0x000E50, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_K2_GetComponentToWorld_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_K2_GetComponentToWorld_ReturnValue_3) == 0x000E80, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_K2_GetComponentToWorld_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000EB0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000EB8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_FinishSpawningActor_ReturnValue) == 0x000EC0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000EC8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_DynamicCast_AsInt_Player) == 0x000ED0, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_DynamicCast_AsInt_Player' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_DynamicCast_bSuccess) == 0x000EE0, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_DynamicCast_AsInt_Player_1) == 0x000EE8, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_DynamicCast_AsInt_Player_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_DynamicCast_bSuccess_1) == 0x000EF8, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_asProp_return) == 0x000F00, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_asProp_return' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_asProp_return_1) == 0x000F08, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_asProp_return_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Conv_NameToString_ReturnValue) == 0x000F10, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000F20, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x000F30, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3) == 0x000F38, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x000F40, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_FinishSpawningActor_ReturnValue_3) == 0x000F48, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_FinishSpawningActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4) == 0x000F50, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5) == 0x000F58, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_FinishSpawningActor_ReturnValue_4) == 0x000F60, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_FinishSpawningActor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_FinishSpawningActor_ReturnValue_5) == 0x000F68, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_FinishSpawningActor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Select_Default_6) == 0x000F70, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_DynamicCast_AsProp_Firetank_Gastank) == 0x000F78, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_DynamicCast_AsProp_Firetank_Gastank' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_DynamicCast_bSuccess_2) == 0x000F80, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000F81, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000F82, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BooleanAND_ReturnValue) == 0x000F83, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_K2_GetComponentLocation_ReturnValue_5) == 0x000F84, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_K2_GetComponentLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000F90, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_RandomPointInBoundingBox_ReturnValue) == 0x000F94, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_RandomPointInBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_MakeTransform_ReturnValue) == 0x000FA0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_K2_GetComponentLocation_ReturnValue_6) == 0x000FD0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_K2_GetComponentLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_MakeTransform_ReturnValue_1) == 0x000FE0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Conv_IntToBool_ReturnValue) == 0x001010, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_SelectFloat_ReturnValue_2) == 0x001014, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Lerp_ReturnValue_9) == 0x001018, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Lerp_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Conv_IntToBool_ReturnValue_1) == 0x00101C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Conv_IntToBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_SelectFloat_ReturnValue_3) == 0x001020, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Lerp_ReturnValue_10) == 0x001024, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Lerp_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Conv_IntToBool_ReturnValue_2) == 0x001028, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Conv_IntToBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_SelectFloat_ReturnValue_4) == 0x00102C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Lerp_ReturnValue_11) == 0x001030, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Lerp_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_damage_1) == 0x001034, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_damage_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_location) == 0x001038, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_location' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Divide_FloatFloat_ReturnValue_9) == 0x001044, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Divide_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x001048, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_int_Variable_19) == 0x00104C, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_int_Variable_19' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Select_Default_7) == 0x001050, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Select_Default_8) == 0x001058, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_DynamicCast_AsProp_Firetank_Gastank_1) == 0x001068, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_DynamicCast_AsProp_Firetank_Gastank_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_DynamicCast_bSuccess_3) == 0x001070, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_K2_GetActorLocation_ReturnValue_5) == 0x001074, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_K2_GetActorLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_int_Loop_Counter_Variable_1) == 0x001080, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_IsValid_ReturnValue_1) == 0x001084, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Add_IntInt_ReturnValue_11) == 0x001088, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Select_Default_9) == 0x00108C, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_LowEntry_LocalVariable_Value__Object) == 0x001098, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_LowEntry_LocalVariable_Value__Object' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0010A4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_GetController_ReturnValue) == 0x0010B0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_GetCurrentPathPoints_ReturnValue) == 0x0010B8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_GetCurrentPathPoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_GetController_ReturnValue_1) == 0x0010C8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0010D0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_GetCurrentPathPoints_ReturnValue_1) == 0x0010D8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_GetCurrentPathPoints_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Not_PreBool_ReturnValue) == 0x0010E8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Array_Get_Item_5) == 0x0010EC, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Array_Get_Item_6) == 0x0010F8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Array_Length_ReturnValue_5) == 0x001104, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Array_LastIndex_ReturnValue) == 0x001108, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Less_IntInt_ReturnValue_6) == 0x00110C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Array_Get_Item_7) == 0x001110, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Vector_Distance_ReturnValue) == 0x00111C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_name_Variable_3) == 0x001120, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_LessEqual_FloatFloat_ReturnValue_2) == 0x001128, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_LessEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BooleanOR_ReturnValue_2) == 0x001129, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BooleanOR_ReturnValue_3) == 0x00112A, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_CreateMoveToProxyObject_ReturnValue) == 0x001130, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_CreateMoveToProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_IsValid_ReturnValue_2) == 0x001138, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_bool_Has_Been_Initd_Variable) == 0x001139, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_bool_IsClosed_Variable) == 0x00113A, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x00113C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x001140, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_SelectFloat_ReturnValue_5) == 0x001144, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x001148, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_SelectFloat_ReturnValue_6) == 0x00114C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_SelectFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_SelectFloat_ReturnValue_7) == 0x001150, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_SelectFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_GetController_ReturnValue_2) == 0x001158, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_GetController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_GetCurrentPathPoints_ReturnValue_2) == 0x001160, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_GetCurrentPathPoints_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_ComponentBoundEvent_OverlappedComponent_3) == 0x001170, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_ComponentBoundEvent_OverlappedComponent_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_ComponentBoundEvent_OtherActor_3) == 0x001178, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_ComponentBoundEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_ComponentBoundEvent_OtherComp_3) == 0x001180, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_ComponentBoundEvent_OtherComp_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_ComponentBoundEvent_OtherBodyIndex_3) == 0x001188, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_ComponentBoundEvent_OtherBodyIndex_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_ComponentBoundEvent_bFromSweep_2) == 0x00118C, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_ComponentBoundEvent_bFromSweep_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_ComponentBoundEvent_SweepResult_2) == 0x001190, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_ComponentBoundEvent_SweepResult_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x001218, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_DynamicCast_AsMain_Player) == 0x001220, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_DynamicCast_AsMain_Player' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_DynamicCast_bSuccess_4) == 0x001228, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_ComponentBoundEvent_OverlappedComponent_2) == 0x001230, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_ComponentBoundEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_ComponentBoundEvent_OtherActor_2) == 0x001238, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_ComponentBoundEvent_OtherComp_2) == 0x001240, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_ComponentBoundEvent_OtherBodyIndex_2) == 0x001248, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_ComponentBoundEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_DynamicCast_AsMain_Player_1) == 0x001250, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_DynamicCast_AsMain_Player_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_DynamicCast_bSuccess_5) == 0x001258, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_CreateDelegate_OutputDelegate_7) == 0x00125C, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_K2_SetTimerDelegate_ReturnValue_4) == 0x001270, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_K2_SetTimerDelegate_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_FMax_ReturnValue) == 0x001278, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00127C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_IsPlaying_ReturnValue_1) == 0x00127D, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_IsPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_LessEqual_FloatFloat_ReturnValue_3) == 0x00127E, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_LessEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_LessEqual_FloatFloat_ReturnValue_4) == 0x00127F, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_LessEqual_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_IsValid_ReturnValue_3) == 0x001280, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_IsValid_ReturnValue_4) == 0x001281, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x001288, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_ComponentBoundEvent_OtherActor_1) == 0x001290, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_ComponentBoundEvent_OtherComp_1) == 0x001298, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x0012A0, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x0012A4, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_ComponentBoundEvent_SweepResult_1) == 0x0012A8, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_GetVelocity_ReturnValue_1) == 0x001330, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_GetVelocity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_DynamicCast_AsInt_Objects) == 0x001340, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_DynamicCast_AsInt_Objects' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_DynamicCast_bSuccess_6) == 0x001350, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_VSize_ReturnValue_4) == 0x001354, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_VSize_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Greater_FloatFloat_ReturnValue_4) == 0x001358, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Greater_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_GetObjectClass_ReturnValue) == 0x001360, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_ClassDynamicCast_AsActor_Chip_Pile) == 0x001368, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_ClassDynamicCast_AsActor_Chip_Pile' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_ClassDynamicCast_bSuccess) == 0x001370, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_DynamicCast_AsKerfur_Omega) == 0x001378, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_DynamicCast_AsKerfur_Omega' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_DynamicCast_bSuccess_7) == 0x001380, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_DynamicCast_AsMain_Player_2) == 0x001388, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_DynamicCast_AsMain_Player_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_DynamicCast_bSuccess_8) == 0x001390, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_addDamage_self_CastInput) == 0x001398, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_addDamage_self_CastInput' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_GetVelocity_ReturnValue_2) == 0x0013A8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_GetVelocity_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_K2_GetActorLocation_ReturnValue_6) == 0x0013B4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_K2_GetActorLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_GetVelocity_ReturnValue_3) == 0x0013C0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_GetVelocity_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_GetWorldDeltaSeconds_ReturnValue_3) == 0x0013CC, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_GetWorldDeltaSeconds_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Multiply_VectorFloat_ReturnValue_5) == 0x0013D0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Multiply_VectorFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0013DC, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_GetTransform_ReturnValue) == 0x0013F0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x001420, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6) == 0x0014A8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_obj_statDynPhysVeh_obj) == 0x0014B0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_obj_statDynPhysVeh_obj' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_FinishSpawningActor_ReturnValue_6) == 0x0014C0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_FinishSpawningActor_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0014C8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x001550, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_bBlockingHit_1) == 0x001551, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x001552, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_Time_1) == 0x001554, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_Distance_1) == 0x001558, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_Location_1) == 0x00155C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_ImpactPoint_1) == 0x001568, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_Normal_1) == 0x001574, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_ImpactNormal_1) == 0x001580, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_PhysMat_1) == 0x001590, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_HitActor_1) == 0x001598, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_HitComponent_1) == 0x0015A0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_HitBoneName_1) == 0x0015A8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_HitItem_1) == 0x0015B0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_ElementIndex_1) == 0x0015B4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_FaceIndex_1) == 0x0015B8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_TraceStart_1) == 0x0015BC, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BreakHitResult_TraceEnd_1) == 0x0015C8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Vector_Distance_ReturnValue_1) == 0x0015D4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Divide_FloatFloat_ReturnValue_10) == 0x0015D8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Divide_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_LessEqual_FloatFloat_ReturnValue_5) == 0x0015DC, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_LessEqual_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x0015E0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x0015E4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_actor) == 0x0015E8, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_actor' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_damage) == 0x0015F0, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_damage' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_hit) == 0x0015F4, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_impact) == 0x00167C, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_impact' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_Event_skipSetting) == 0x001688, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_Event_skipSetting' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_RandomBoolWithWeight_ReturnValue_1) == 0x001689, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_RandomBoolWithWeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_DynamicCast_AsCharacter) == 0x001690, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_DynamicCast_bSuccess_9) == 0x001698, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_DynamicCast_AsMain_Player_3) == 0x0016A0, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_DynamicCast_AsMain_Player_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_DynamicCast_bSuccess_10) == 0x0016A8, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0016B0, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_ComponentBoundEvent_OtherActor) == 0x0016B8, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_ComponentBoundEvent_OtherComp) == 0x0016C0, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0016C8, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_ComponentBoundEvent_bFromSweep) == 0x0016CC, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_ComponentBoundEvent_SweepResult) == 0x0016D0, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_DynamicCast_AsInt_Objects_1) == 0x001758, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_DynamicCast_AsInt_Objects_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_DynamicCast_bSuccess_11) == 0x001768, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_GetObjectClass_ReturnValue_1) == 0x001770, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_ClassDynamicCast_AsActor_Chip_Pile_1) == 0x001778, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_ClassDynamicCast_AsActor_Chip_Pile_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, K2Node_ClassDynamicCast_bSuccess_1) == 0x001780, "Member 'Firetank_C_ExecuteUbergraph_firetank::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_RandomBoolWithWeight_ReturnValue_2) == 0x001781, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_RandomBoolWithWeight_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_MakeLiteralFloat_ReturnValue) == 0x001784, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x001788, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Multiply_FloatFloat_ReturnValue_9) == 0x00178C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Multiply_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_VictoryFloatMinusEquals_FloatOut_2) == 0x001790, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_VictoryFloatMinusEquals_FloatOut_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_VictoryFloatMinusEquals_FloatOut_3) == 0x001794, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_VictoryFloatMinusEquals_FloatOut_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_GetForwardVector_ReturnValue_3) == 0x001798, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_GetForwardVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_SelectVector_ReturnValue_2) == 0x0017A4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_SelectVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x0017B0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Dot_VectorVector_ReturnValue_2) == 0x0017BC, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Dot_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Normal_ReturnValue_3) == 0x0017C0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Normal_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_FMax_ReturnValue_1) == 0x0017CC, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Dot_VectorVector_ReturnValue_3) == 0x0017D0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Dot_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Abs_ReturnValue) == 0x0017D4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_SignOfFloat_ReturnValue_2) == 0x0017D8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_SignOfFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2) == 0x0017DC, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Abs_ReturnValue_1) == 0x0017E0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Normal_ReturnValue_4) == 0x0017E4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Normal_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_3) == 0x0017F0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Dot_VectorVector_ReturnValue_4) == 0x0017F4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Dot_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Multiply_FloatFloat_ReturnValue_10) == 0x0017F8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Multiply_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_SignOfFloat_ReturnValue_3) == 0x0017FC, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_SignOfFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Multiply_FloatFloat_ReturnValue_11) == 0x001800, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Multiply_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Abs_ReturnValue_2) == 0x001804, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Add_FloatFloat_ReturnValue_5) == 0x001808, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Add_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_4) == 0x00180C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_FClamp_ReturnValue_3) == 0x001810, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Multiply_FloatFloat_ReturnValue_12) == 0x001814, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Multiply_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_SelectFloat_ReturnValue_8) == 0x001818, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_SelectFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Multiply_FloatFloat_ReturnValue_13) == 0x00181C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Multiply_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Add_FloatFloat_ReturnValue_6) == 0x001820, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Add_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Add_FloatFloat_ReturnValue_7) == 0x001824, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Add_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Multiply_VectorFloat_ReturnValue_6) == 0x001828, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Multiply_VectorFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_FClamp_ReturnValue_4) == 0x001834, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_FClamp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Multiply_VectorFloat_ReturnValue_7) == 0x001838, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Multiply_VectorFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_SelectFloat_ReturnValue_9) == 0x001844, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_SelectFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_VInterpTo_ReturnValue) == 0x001848, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Add_FloatFloat_ReturnValue_8) == 0x001854, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Add_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Multiply_VectorFloat_ReturnValue_8) == 0x001858, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Multiply_VectorFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Multiply_VectorFloat_ReturnValue_9) == 0x001864, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Multiply_VectorFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_VInterpTo_ReturnValue_1) == 0x001870, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_VInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_GetWorldDeltaSeconds_ReturnValue_4) == 0x00187C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_GetWorldDeltaSeconds_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Greater_FloatFloat_ReturnValue_5) == 0x001880, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Greater_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x001884, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Multiply_FloatFloat_ReturnValue_14) == 0x001888, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Multiply_FloatFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_RandomFloatInRange_ReturnValue_3) == 0x00188C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_RandomFloatInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Greater_FloatFloat_ReturnValue_6) == 0x001890, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Greater_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Multiply_FloatFloat_ReturnValue_15) == 0x001894, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Multiply_FloatFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_obj_statDyn_obj) == 0x001898, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_obj_statDyn_obj' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_K2_GetComponentLocation_ReturnValue_7) == 0x0018A8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_K2_GetComponentLocation_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_IsValid_ReturnValue_5) == 0x0018B4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_int_Variable_20) == 0x0018B8, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_int_Variable_20' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_LessEqual_IntInt_ReturnValue_5) == 0x0018BC, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_LessEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Add_IntInt_ReturnValue_12) == 0x0018C0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_K2_GetActorLocation_ReturnValue_7) == 0x0018C4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_K2_GetActorLocation_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_LineTraceSingleForObjects_OutHit_1) == 0x0018D0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_LineTraceSingleForObjects_OutHit_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_LineTraceSingleForObjects_ReturnValue_1) == 0x001958, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_LineTraceSingleForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Not_PreBool_ReturnValue_1) == 0x001959, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BooleanAND_ReturnValue_1) == 0x00195A, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_LessEqual_FloatFloat_ReturnValue_6) == 0x00195B, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_LessEqual_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_LessEqual_FloatFloat_ReturnValue_7) == 0x00195C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_LessEqual_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BooleanAND_ReturnValue_2) == 0x00195D, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_K2_GetActorLocation_ReturnValue_8) == 0x001960, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_K2_GetActorLocation_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_K2_GetActorLocation_ReturnValue_9) == 0x00196C, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_K2_GetActorLocation_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_K2_GetActorLocation_ReturnValue_10) == 0x001978, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_K2_GetActorLocation_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x001984, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_MakeTransform_ReturnValue_2) == 0x001990, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_7) == 0x0019C0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_FinishSpawningActor_ReturnValue_7) == 0x0019C8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_FinishSpawningActor_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_VictoryFloatMinusEquals_FloatOut_4) == 0x0019D0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_VictoryFloatMinusEquals_FloatOut_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Greater_FloatFloat_ReturnValue_7) == 0x0019D4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Greater_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, Temp_int_Variable_21) == 0x0019D8, "Member 'Firetank_C_ExecuteUbergraph_firetank::Temp_int_Variable_21' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_LessEqual_IntInt_ReturnValue_6) == 0x0019DC, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_LessEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_SelectFloat_ReturnValue_10) == 0x0019E0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_SelectFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Multiply_FloatFloat_ReturnValue_16) == 0x0019E4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Multiply_FloatFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Multiply_FloatFloat_ReturnValue_17) == 0x0019E8, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Multiply_FloatFloat_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_VictoryFloatMinusEquals_FloatOut_5) == 0x0019EC, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_VictoryFloatMinusEquals_FloatOut_5' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_VictoryFloatMinusEquals_FloatOut_6) == 0x0019F0, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_VictoryFloatMinusEquals_FloatOut_6' has a wrong offset!");
static_assert(offsetof(Firetank_C_ExecuteUbergraph_firetank, CallFunc_Add_IntInt_ReturnValue_13) == 0x0019F4, "Member 'Firetank_C_ExecuteUbergraph_firetank::CallFunc_Add_IntInt_ReturnValue_13' has a wrong offset!");

// Function firetank.firetank_C.BndEvt__firetank_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct Firetank_C_BndEvt__firetank_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Firetank_C_BndEvt__firetank_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Firetank_C_BndEvt__firetank_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Firetank_C_BndEvt__firetank_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on Firetank_C_BndEvt__firetank_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Firetank_C_BndEvt__firetank_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Firetank_C_BndEvt__firetank_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Firetank_C_BndEvt__firetank_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Firetank_C_BndEvt__firetank_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Firetank_C_BndEvt__firetank_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Firetank_C_BndEvt__firetank_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Firetank_C_BndEvt__firetank_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Firetank_C_BndEvt__firetank_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Firetank_C_BndEvt__firetank_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Firetank_C_BndEvt__firetank_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Firetank_C_BndEvt__firetank_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Firetank_C_BndEvt__firetank_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function firetank.firetank_C.addDamage
// 0x00A8 (0x00A8 - 0x0000)
struct Firetank_C_AddDamage final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x000C(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                Impact;                                            // 0x0094(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipSetting;                                       // 0x00A0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Firetank_C_AddDamage) == 0x000008, "Wrong alignment on Firetank_C_AddDamage");
static_assert(sizeof(Firetank_C_AddDamage) == 0x0000A8, "Wrong size on Firetank_C_AddDamage");
static_assert(offsetof(Firetank_C_AddDamage, Actor) == 0x000000, "Member 'Firetank_C_AddDamage::Actor' has a wrong offset!");
static_assert(offsetof(Firetank_C_AddDamage, Damage) == 0x000008, "Member 'Firetank_C_AddDamage::Damage' has a wrong offset!");
static_assert(offsetof(Firetank_C_AddDamage, Hit) == 0x00000C, "Member 'Firetank_C_AddDamage::Hit' has a wrong offset!");
static_assert(offsetof(Firetank_C_AddDamage, Impact) == 0x000094, "Member 'Firetank_C_AddDamage::Impact' has a wrong offset!");
static_assert(offsetof(Firetank_C_AddDamage, SkipSetting) == 0x0000A0, "Member 'Firetank_C_AddDamage::SkipSetting' has a wrong offset!");

// Function firetank.firetank_C.BndEvt__testTank_Cube1_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct Firetank_C_BndEvt__testTank_Cube1_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Firetank_C_BndEvt__testTank_Cube1_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Firetank_C_BndEvt__testTank_Cube1_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Firetank_C_BndEvt__testTank_Cube1_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on Firetank_C_BndEvt__testTank_Cube1_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Firetank_C_BndEvt__testTank_Cube1_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Firetank_C_BndEvt__testTank_Cube1_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Firetank_C_BndEvt__testTank_Cube1_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Firetank_C_BndEvt__testTank_Cube1_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Firetank_C_BndEvt__testTank_Cube1_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Firetank_C_BndEvt__testTank_Cube1_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Firetank_C_BndEvt__testTank_Cube1_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Firetank_C_BndEvt__testTank_Cube1_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Firetank_C_BndEvt__testTank_Cube1_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Firetank_C_BndEvt__testTank_Cube1_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Firetank_C_BndEvt__testTank_Cube1_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Firetank_C_BndEvt__testTank_Cube1_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function firetank.firetank_C.BndEvt__testTank_seeZone_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct Firetank_C_BndEvt__testTank_seeZone_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_BndEvt__testTank_seeZone_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Firetank_C_BndEvt__testTank_seeZone_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(Firetank_C_BndEvt__testTank_seeZone_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on Firetank_C_BndEvt__testTank_seeZone_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(Firetank_C_BndEvt__testTank_seeZone_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Firetank_C_BndEvt__testTank_seeZone_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Firetank_C_BndEvt__testTank_seeZone_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Firetank_C_BndEvt__testTank_seeZone_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Firetank_C_BndEvt__testTank_seeZone_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Firetank_C_BndEvt__testTank_seeZone_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Firetank_C_BndEvt__testTank_seeZone_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Firetank_C_BndEvt__testTank_seeZone_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function firetank.firetank_C.BndEvt__testTank_seeZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct Firetank_C_BndEvt__testTank_seeZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Firetank_C_BndEvt__testTank_seeZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Firetank_C_BndEvt__testTank_seeZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Firetank_C_BndEvt__testTank_seeZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on Firetank_C_BndEvt__testTank_seeZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Firetank_C_BndEvt__testTank_seeZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Firetank_C_BndEvt__testTank_seeZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Firetank_C_BndEvt__testTank_seeZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Firetank_C_BndEvt__testTank_seeZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Firetank_C_BndEvt__testTank_seeZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Firetank_C_BndEvt__testTank_seeZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Firetank_C_BndEvt__testTank_seeZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Firetank_C_BndEvt__testTank_seeZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Firetank_C_BndEvt__testTank_seeZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Firetank_C_BndEvt__testTank_seeZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Firetank_C_BndEvt__testTank_seeZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Firetank_C_BndEvt__testTank_seeZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function firetank.firetank_C.exploded
// 0x0010 (0x0010 - 0x0000)
struct Firetank_C_Exploded final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_Exploded) == 0x000004, "Wrong alignment on Firetank_C_Exploded");
static_assert(sizeof(Firetank_C_Exploded) == 0x000010, "Wrong size on Firetank_C_Exploded");
static_assert(offsetof(Firetank_C_Exploded, Damage) == 0x000000, "Member 'Firetank_C_Exploded::Damage' has a wrong offset!");
static_assert(offsetof(Firetank_C_Exploded, Location) == 0x000004, "Member 'Firetank_C_Exploded::Location' has a wrong offset!");

// Function firetank.firetank_C.damageByPlayer
// 0x0098 (0x0098 - 0x0000)
struct Firetank_C_DamageByPlayer final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         Damage;                                            // 0x0090(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_DamageByPlayer) == 0x000008, "Wrong alignment on Firetank_C_DamageByPlayer");
static_assert(sizeof(Firetank_C_DamageByPlayer) == 0x000098, "Wrong size on Firetank_C_DamageByPlayer");
static_assert(offsetof(Firetank_C_DamageByPlayer, Player) == 0x000000, "Member 'Firetank_C_DamageByPlayer::Player' has a wrong offset!");
static_assert(offsetof(Firetank_C_DamageByPlayer, Hit) == 0x000008, "Member 'Firetank_C_DamageByPlayer::Hit' has a wrong offset!");
static_assert(offsetof(Firetank_C_DamageByPlayer, Damage) == 0x000090, "Member 'Firetank_C_DamageByPlayer::Damage' has a wrong offset!");

// Function firetank.firetank_C.Dest
// 0x0008 (0x0008 - 0x0000)
struct Firetank_C_Dest final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_Dest) == 0x000008, "Wrong alignment on Firetank_C_Dest");
static_assert(sizeof(Firetank_C_Dest) == 0x000008, "Wrong size on Firetank_C_Dest");
static_assert(offsetof(Firetank_C_Dest, DestroyedActor) == 0x000000, "Member 'Firetank_C_Dest::DestroyedActor' has a wrong offset!");

// Function firetank.firetank_C.BndEvt__testTank_backoffCollide_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct Firetank_C_BndEvt__testTank_backoffCollide_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Firetank_C_BndEvt__testTank_backoffCollide_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on Firetank_C_BndEvt__testTank_backoffCollide_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(Firetank_C_BndEvt__testTank_backoffCollide_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on Firetank_C_BndEvt__testTank_backoffCollide_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(Firetank_C_BndEvt__testTank_backoffCollide_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'Firetank_C_BndEvt__testTank_backoffCollide_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(Firetank_C_BndEvt__testTank_backoffCollide_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Firetank_C_BndEvt__testTank_backoffCollide_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Firetank_C_BndEvt__testTank_backoffCollide_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Firetank_C_BndEvt__testTank_backoffCollide_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Firetank_C_BndEvt__testTank_backoffCollide_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'Firetank_C_BndEvt__testTank_backoffCollide_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(Firetank_C_BndEvt__testTank_backoffCollide_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, Hit) == 0x000024, "Member 'Firetank_C_BndEvt__testTank_backoffCollide_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function firetank.firetank_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Firetank_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_ReceiveTick) == 0x000004, "Wrong alignment on Firetank_C_ReceiveTick");
static_assert(sizeof(Firetank_C_ReceiveTick) == 0x000004, "Wrong size on Firetank_C_ReceiveTick");
static_assert(offsetof(Firetank_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Firetank_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function firetank.firetank_C.hookTension
// 0x0008 (0x0008 - 0x0000)
struct Firetank_C_HookTension final
{
public:
	class AHook_C*                                Hook;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_HookTension) == 0x000008, "Wrong alignment on Firetank_C_HookTension");
static_assert(sizeof(Firetank_C_HookTension) == 0x000008, "Wrong size on Firetank_C_HookTension");
static_assert(offsetof(Firetank_C_HookTension, Hook) == 0x000000, "Member 'Firetank_C_HookTension::Hook' has a wrong offset!");

// Function firetank.firetank_C.cleanSponge
// 0x0010 (0x0010 - 0x0000)
struct Firetank_C_CleanSponge final
{
public:
	float                                         Clean;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_CleanSponge) == 0x000008, "Wrong alignment on Firetank_C_CleanSponge");
static_assert(sizeof(Firetank_C_CleanSponge) == 0x000010, "Wrong size on Firetank_C_CleanSponge");
static_assert(offsetof(Firetank_C_CleanSponge, Clean) == 0x000000, "Member 'Firetank_C_CleanSponge::Clean' has a wrong offset!");
static_assert(offsetof(Firetank_C_CleanSponge, Player) == 0x000008, "Member 'Firetank_C_CleanSponge::Player' has a wrong offset!");

// Function firetank.firetank_C.hooked
// 0x0008 (0x0008 - 0x0000)
struct Firetank_C_Hooked final
{
public:
	class AHook_C*                                Hook;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_Hooked) == 0x000008, "Wrong alignment on Firetank_C_Hooked");
static_assert(sizeof(Firetank_C_Hooked) == 0x000008, "Wrong size on Firetank_C_Hooked");
static_assert(offsetof(Firetank_C_Hooked, Hook) == 0x000000, "Member 'Firetank_C_Hooked::Hook' has a wrong offset!");

// Function firetank.firetank_C.playerUsedOn
// 0x0090 (0x0090 - 0x0000)
struct Firetank_C_PlayerUsedOn final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Firetank_C_PlayerUsedOn) == 0x000008, "Wrong alignment on Firetank_C_PlayerUsedOn");
static_assert(sizeof(Firetank_C_PlayerUsedOn) == 0x000090, "Wrong size on Firetank_C_PlayerUsedOn");
static_assert(offsetof(Firetank_C_PlayerUsedOn, Player) == 0x000000, "Member 'Firetank_C_PlayerUsedOn::Player' has a wrong offset!");
static_assert(offsetof(Firetank_C_PlayerUsedOn, Hit) == 0x000008, "Member 'Firetank_C_PlayerUsedOn::Hit' has a wrong offset!");

// Function firetank.firetank_C.slice
// 0x0001 (0x0001 - 0x0000)
struct Firetank_C_Slice final
{
public:
	bool                                          Clean;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Firetank_C_Slice) == 0x000001, "Wrong alignment on Firetank_C_Slice");
static_assert(sizeof(Firetank_C_Slice) == 0x000001, "Wrong size on Firetank_C_Slice");
static_assert(offsetof(Firetank_C_Slice, Clean) == 0x000000, "Member 'Firetank_C_Slice::Clean' has a wrong offset!");

// Function firetank.firetank_C.reachedByExplosion
// 0x0010 (0x0010 - 0x0000)
struct Firetank_C_ReachedByExplosion final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_ReachedByExplosion) == 0x000004, "Wrong alignment on Firetank_C_ReachedByExplosion");
static_assert(sizeof(Firetank_C_ReachedByExplosion) == 0x000010, "Wrong size on Firetank_C_ReachedByExplosion");
static_assert(offsetof(Firetank_C_ReachedByExplosion, Location) == 0x000000, "Member 'Firetank_C_ReachedByExplosion::Location' has a wrong offset!");
static_assert(offsetof(Firetank_C_ReachedByExplosion, Damage) == 0x00000C, "Member 'Firetank_C_ReachedByExplosion::Damage' has a wrong offset!");

// Function firetank.firetank_C.playerLookAway
// 0x0008 (0x0008 - 0x0000)
struct Firetank_C_PlayerLookAway final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_PlayerLookAway) == 0x000008, "Wrong alignment on Firetank_C_PlayerLookAway");
static_assert(sizeof(Firetank_C_PlayerLookAway) == 0x000008, "Wrong size on Firetank_C_PlayerLookAway");
static_assert(offsetof(Firetank_C_PlayerLookAway, Player) == 0x000000, "Member 'Firetank_C_PlayerLookAway::Player' has a wrong offset!");

// Function firetank.firetank_C.stepped
// 0x0004 (0x0004 - 0x0000)
struct Firetank_C_Stepped final
{
public:
	float                                         Volume;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_Stepped) == 0x000004, "Wrong alignment on Firetank_C_Stepped");
static_assert(sizeof(Firetank_C_Stepped) == 0x000004, "Wrong size on Firetank_C_Stepped");
static_assert(offsetof(Firetank_C_Stepped, Volume) == 0x000000, "Member 'Firetank_C_Stepped::Volume' has a wrong offset!");

// Function firetank.firetank_C.ActionName
// 0x00A0 (0x00A0 - 0x0000)
struct Firetank_C_ActionName final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 Name_0;                                            // 0x0090(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_ActionName) == 0x000008, "Wrong alignment on Firetank_C_ActionName");
static_assert(sizeof(Firetank_C_ActionName) == 0x0000A0, "Wrong size on Firetank_C_ActionName");
static_assert(offsetof(Firetank_C_ActionName, Player) == 0x000000, "Member 'Firetank_C_ActionName::Player' has a wrong offset!");
static_assert(offsetof(Firetank_C_ActionName, Hit) == 0x000008, "Member 'Firetank_C_ActionName::Hit' has a wrong offset!");
static_assert(offsetof(Firetank_C_ActionName, Name_0) == 0x000090, "Member 'Firetank_C_ActionName::Name_0' has a wrong offset!");

// Function firetank.firetank_C.accumulateTemperature
// 0x0008 (0x0008 - 0x0000)
struct Firetank_C_AccumulateTemperature final
{
public:
	float                                         Temperature;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed_0;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_AccumulateTemperature) == 0x000004, "Wrong alignment on Firetank_C_AccumulateTemperature");
static_assert(sizeof(Firetank_C_AccumulateTemperature) == 0x000008, "Wrong size on Firetank_C_AccumulateTemperature");
static_assert(offsetof(Firetank_C_AccumulateTemperature, Temperature) == 0x000000, "Member 'Firetank_C_AccumulateTemperature::Temperature' has a wrong offset!");
static_assert(offsetof(Firetank_C_AccumulateTemperature, Speed_0) == 0x000004, "Member 'Firetank_C_AccumulateTemperature::Speed_0' has a wrong offset!");

// Function firetank.firetank_C.addTemperature
// 0x0004 (0x0004 - 0x0000)
struct Firetank_C_AddTemperature final
{
public:
	float                                         Temperature;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_AddTemperature) == 0x000004, "Wrong alignment on Firetank_C_AddTemperature");
static_assert(sizeof(Firetank_C_AddTemperature) == 0x000004, "Wrong size on Firetank_C_AddTemperature");
static_assert(offsetof(Firetank_C_AddTemperature, Temperature) == 0x000000, "Member 'Firetank_C_AddTemperature::Temperature' has a wrong offset!");

// Function firetank.firetank_C.playerHandAnyKey
// 0x0028 (0x0028 - 0x0000)
struct Firetank_C_PlayerHandAnyKey final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Key_0;                                             // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Pressed;                                           // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Firetank_C_PlayerHandAnyKey) == 0x000008, "Wrong alignment on Firetank_C_PlayerHandAnyKey");
static_assert(sizeof(Firetank_C_PlayerHandAnyKey) == 0x000028, "Wrong size on Firetank_C_PlayerHandAnyKey");
static_assert(offsetof(Firetank_C_PlayerHandAnyKey, Player) == 0x000000, "Member 'Firetank_C_PlayerHandAnyKey::Player' has a wrong offset!");
static_assert(offsetof(Firetank_C_PlayerHandAnyKey, Key_0) == 0x000008, "Member 'Firetank_C_PlayerHandAnyKey::Key_0' has a wrong offset!");
static_assert(offsetof(Firetank_C_PlayerHandAnyKey, Pressed) == 0x000020, "Member 'Firetank_C_PlayerHandAnyKey::Pressed' has a wrong offset!");

// Function firetank.firetank_C.playerHandMouse
// 0x0010 (0x0010 - 0x0000)
struct Firetank_C_PlayerHandMouse final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Mouse;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_PlayerHandMouse) == 0x000008, "Wrong alignment on Firetank_C_PlayerHandMouse");
static_assert(sizeof(Firetank_C_PlayerHandMouse) == 0x000010, "Wrong size on Firetank_C_PlayerHandMouse");
static_assert(offsetof(Firetank_C_PlayerHandMouse, Player) == 0x000000, "Member 'Firetank_C_PlayerHandMouse::Player' has a wrong offset!");
static_assert(offsetof(Firetank_C_PlayerHandMouse, Mouse) == 0x000008, "Member 'Firetank_C_PlayerHandMouse::Mouse' has a wrong offset!");

// Function firetank.firetank_C.playerHandMouseWheel
// 0x0010 (0x0010 - 0x0000)
struct Firetank_C_PlayerHandMouseWheel final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WheelDelta;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_PlayerHandMouseWheel) == 0x000008, "Wrong alignment on Firetank_C_PlayerHandMouseWheel");
static_assert(sizeof(Firetank_C_PlayerHandMouseWheel) == 0x000010, "Wrong size on Firetank_C_PlayerHandMouseWheel");
static_assert(offsetof(Firetank_C_PlayerHandMouseWheel, Player) == 0x000000, "Member 'Firetank_C_PlayerHandMouseWheel::Player' has a wrong offset!");
static_assert(offsetof(Firetank_C_PlayerHandMouseWheel, WheelDelta) == 0x000008, "Member 'Firetank_C_PlayerHandMouseWheel::WheelDelta' has a wrong offset!");

// Function firetank.firetank_C.playerHandRelease_LMB
// 0x0008 (0x0008 - 0x0000)
struct Firetank_C_PlayerHandRelease_LMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_PlayerHandRelease_LMB) == 0x000008, "Wrong alignment on Firetank_C_PlayerHandRelease_LMB");
static_assert(sizeof(Firetank_C_PlayerHandRelease_LMB) == 0x000008, "Wrong size on Firetank_C_PlayerHandRelease_LMB");
static_assert(offsetof(Firetank_C_PlayerHandRelease_LMB, Player) == 0x000000, "Member 'Firetank_C_PlayerHandRelease_LMB::Player' has a wrong offset!");

// Function firetank.firetank_C.playerHandRelease_RMB
// 0x0008 (0x0008 - 0x0000)
struct Firetank_C_PlayerHandRelease_RMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_PlayerHandRelease_RMB) == 0x000008, "Wrong alignment on Firetank_C_PlayerHandRelease_RMB");
static_assert(sizeof(Firetank_C_PlayerHandRelease_RMB) == 0x000008, "Wrong size on Firetank_C_PlayerHandRelease_RMB");
static_assert(offsetof(Firetank_C_PlayerHandRelease_RMB, Player) == 0x000000, "Member 'Firetank_C_PlayerHandRelease_RMB::Player' has a wrong offset!");

// Function firetank.firetank_C.playerHandUse_LMB
// 0x0008 (0x0008 - 0x0000)
struct Firetank_C_PlayerHandUse_LMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_PlayerHandUse_LMB) == 0x000008, "Wrong alignment on Firetank_C_PlayerHandUse_LMB");
static_assert(sizeof(Firetank_C_PlayerHandUse_LMB) == 0x000008, "Wrong size on Firetank_C_PlayerHandUse_LMB");
static_assert(offsetof(Firetank_C_PlayerHandUse_LMB, Player) == 0x000000, "Member 'Firetank_C_PlayerHandUse_LMB::Player' has a wrong offset!");

// Function firetank.firetank_C.playerHandUse_RMB
// 0x0008 (0x0008 - 0x0000)
struct Firetank_C_PlayerHandUse_RMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_PlayerHandUse_RMB) == 0x000008, "Wrong alignment on Firetank_C_PlayerHandUse_RMB");
static_assert(sizeof(Firetank_C_PlayerHandUse_RMB) == 0x000008, "Wrong size on Firetank_C_PlayerHandUse_RMB");
static_assert(offsetof(Firetank_C_PlayerHandUse_RMB, Player) == 0x000000, "Member 'Firetank_C_PlayerHandUse_RMB::Player' has a wrong offset!");

// Function firetank.firetank_C.actionOptionIndex
// 0x0098 (0x0098 - 0x0000)
struct Firetank_C_ActionOptionIndex final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       Action;                                            // 0x0090(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_ActionOptionIndex) == 0x000008, "Wrong alignment on Firetank_C_ActionOptionIndex");
static_assert(sizeof(Firetank_C_ActionOptionIndex) == 0x000098, "Wrong size on Firetank_C_ActionOptionIndex");
static_assert(offsetof(Firetank_C_ActionOptionIndex, Player) == 0x000000, "Member 'Firetank_C_ActionOptionIndex::Player' has a wrong offset!");
static_assert(offsetof(Firetank_C_ActionOptionIndex, Hit) == 0x000008, "Member 'Firetank_C_ActionOptionIndex::Hit' has a wrong offset!");
static_assert(offsetof(Firetank_C_ActionOptionIndex, Action) == 0x000090, "Member 'Firetank_C_ActionOptionIndex::Action' has a wrong offset!");

// Function firetank.firetank_C.receivedPhyiscsDamage
// 0x008C (0x008C - 0x0000)
struct Firetank_C_ReceivedPhyiscsDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hot;                                               // 0x0004(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Firetank_C_ReceivedPhyiscsDamage) == 0x000004, "Wrong alignment on Firetank_C_ReceivedPhyiscsDamage");
static_assert(sizeof(Firetank_C_ReceivedPhyiscsDamage) == 0x00008C, "Wrong size on Firetank_C_ReceivedPhyiscsDamage");
static_assert(offsetof(Firetank_C_ReceivedPhyiscsDamage, Damage) == 0x000000, "Member 'Firetank_C_ReceivedPhyiscsDamage::Damage' has a wrong offset!");
static_assert(offsetof(Firetank_C_ReceivedPhyiscsDamage, Hot) == 0x000004, "Member 'Firetank_C_ReceivedPhyiscsDamage::Hot' has a wrong offset!");

// Function firetank.firetank_C.ignite
// 0x0004 (0x0004 - 0x0000)
struct Firetank_C_Ignite final
{
public:
	float                                         Fuel;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_Ignite) == 0x000004, "Wrong alignment on Firetank_C_Ignite");
static_assert(sizeof(Firetank_C_Ignite) == 0x000004, "Wrong size on Firetank_C_Ignite");
static_assert(offsetof(Firetank_C_Ignite, Fuel) == 0x000000, "Member 'Firetank_C_Ignite::Fuel' has a wrong offset!");

// Function firetank.firetank_C.fireDamage
// 0x0004 (0x0004 - 0x0000)
struct Firetank_C_FireDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_FireDamage) == 0x000004, "Wrong alignment on Firetank_C_FireDamage");
static_assert(sizeof(Firetank_C_FireDamage) == 0x000004, "Wrong size on Firetank_C_FireDamage");
static_assert(offsetof(Firetank_C_FireDamage, Damage) == 0x000000, "Member 'Firetank_C_FireDamage::Damage' has a wrong offset!");

// Function firetank.firetank_C.steppedOn
// 0x0090 (0x0090 - 0x0000)
struct Firetank_C_SteppedOn final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Firetank_C_SteppedOn) == 0x000008, "Wrong alignment on Firetank_C_SteppedOn");
static_assert(sizeof(Firetank_C_SteppedOn) == 0x000090, "Wrong size on Firetank_C_SteppedOn");
static_assert(offsetof(Firetank_C_SteppedOn, Player) == 0x000000, "Member 'Firetank_C_SteppedOn::Player' has a wrong offset!");
static_assert(offsetof(Firetank_C_SteppedOn, Hit) == 0x000008, "Member 'Firetank_C_SteppedOn::Hit' has a wrong offset!");

// Function firetank.firetank_C.setKey
// 0x0010 (0x0010 - 0x0000)
struct Firetank_C_SetKey final
{
public:
	class FString                                 Key_0;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_SetKey) == 0x000008, "Wrong alignment on Firetank_C_SetKey");
static_assert(sizeof(Firetank_C_SetKey) == 0x000010, "Wrong size on Firetank_C_SetKey");
static_assert(offsetof(Firetank_C_SetKey, Key_0) == 0x000000, "Member 'Firetank_C_SetKey::Key_0' has a wrong offset!");

// Function firetank.firetank_C.setPropProps
// 0x0003 (0x0003 - 0x0000)
struct Firetank_C_SetPropProps final
{
public:
	bool                                          Static;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Frozen;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Active_0;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Firetank_C_SetPropProps) == 0x000001, "Wrong alignment on Firetank_C_SetPropProps");
static_assert(sizeof(Firetank_C_SetPropProps) == 0x000003, "Wrong size on Firetank_C_SetPropProps");
static_assert(offsetof(Firetank_C_SetPropProps, Static) == 0x000000, "Member 'Firetank_C_SetPropProps::Static' has a wrong offset!");
static_assert(offsetof(Firetank_C_SetPropProps, Frozen) == 0x000001, "Member 'Firetank_C_SetPropProps::Frozen' has a wrong offset!");
static_assert(offsetof(Firetank_C_SetPropProps, Active_0) == 0x000002, "Member 'Firetank_C_SetPropProps::Active_0' has a wrong offset!");

// Function firetank.firetank_C.virus
// 0x0001 (0x0001 - 0x0000)
struct Firetank_C_Virus final
{
public:
	bool                                          Activate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Firetank_C_Virus) == 0x000001, "Wrong alignment on Firetank_C_Virus");
static_assert(sizeof(Firetank_C_Virus) == 0x000001, "Wrong size on Firetank_C_Virus");
static_assert(offsetof(Firetank_C_Virus, Activate) == 0x000000, "Member 'Firetank_C_Virus::Activate' has a wrong offset!");

// Function firetank.firetank_C.leaveWaterOrigin
// 0x0008 (0x0008 - 0x0000)
struct Firetank_C_LeaveWaterOrigin final
{
public:
	class AWaterVolume_C*                         Water;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_LeaveWaterOrigin) == 0x000008, "Wrong alignment on Firetank_C_LeaveWaterOrigin");
static_assert(sizeof(Firetank_C_LeaveWaterOrigin) == 0x000008, "Wrong size on Firetank_C_LeaveWaterOrigin");
static_assert(offsetof(Firetank_C_LeaveWaterOrigin, Water) == 0x000000, "Member 'Firetank_C_LeaveWaterOrigin::Water' has a wrong offset!");

// Function firetank.firetank_C.enterWaterOrigin
// 0x0008 (0x0008 - 0x0000)
struct Firetank_C_EnterWaterOrigin final
{
public:
	class AWaterVolume_C*                         Water;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_EnterWaterOrigin) == 0x000008, "Wrong alignment on Firetank_C_EnterWaterOrigin");
static_assert(sizeof(Firetank_C_EnterWaterOrigin) == 0x000008, "Wrong size on Firetank_C_EnterWaterOrigin");
static_assert(offsetof(Firetank_C_EnterWaterOrigin, Water) == 0x000000, "Member 'Firetank_C_EnterWaterOrigin::Water' has a wrong offset!");

// Function firetank.firetank_C.leaveWater
// 0x0008 (0x0008 - 0x0000)
struct Firetank_C_LeaveWater final
{
public:
	class AWaterVolume_C*                         Water;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_LeaveWater) == 0x000008, "Wrong alignment on Firetank_C_LeaveWater");
static_assert(sizeof(Firetank_C_LeaveWater) == 0x000008, "Wrong size on Firetank_C_LeaveWater");
static_assert(offsetof(Firetank_C_LeaveWater, Water) == 0x000000, "Member 'Firetank_C_LeaveWater::Water' has a wrong offset!");

// Function firetank.firetank_C.enterWater
// 0x0008 (0x0008 - 0x0000)
struct Firetank_C_EnterWater final
{
public:
	class AWaterVolume_C*                         Water;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_EnterWater) == 0x000008, "Wrong alignment on Firetank_C_EnterWater");
static_assert(sizeof(Firetank_C_EnterWater) == 0x000008, "Wrong size on Firetank_C_EnterWater");
static_assert(offsetof(Firetank_C_EnterWater, Water) == 0x000000, "Member 'Firetank_C_EnterWater::Water' has a wrong offset!");

// Function firetank.firetank_C.ImpactDamage
// 0x00A8 (0x00A8 - 0x0000)
struct Firetank_C_ImpactDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0004(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Impact;                                            // 0x0098(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_ImpactDamage) == 0x000008, "Wrong alignment on Firetank_C_ImpactDamage");
static_assert(sizeof(Firetank_C_ImpactDamage) == 0x0000A8, "Wrong size on Firetank_C_ImpactDamage");
static_assert(offsetof(Firetank_C_ImpactDamage, Damage) == 0x000000, "Member 'Firetank_C_ImpactDamage::Damage' has a wrong offset!");
static_assert(offsetof(Firetank_C_ImpactDamage, Hit) == 0x000004, "Member 'Firetank_C_ImpactDamage::Hit' has a wrong offset!");
static_assert(offsetof(Firetank_C_ImpactDamage, Actor) == 0x000090, "Member 'Firetank_C_ImpactDamage::Actor' has a wrong offset!");
static_assert(offsetof(Firetank_C_ImpactDamage, Impact) == 0x000098, "Member 'Firetank_C_ImpactDamage::Impact' has a wrong offset!");

// Function firetank.firetank_C.playerR
// 0x0008 (0x0008 - 0x0000)
struct Firetank_C_PlayerR final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_PlayerR) == 0x000008, "Wrong alignment on Firetank_C_PlayerR");
static_assert(sizeof(Firetank_C_PlayerR) == 0x000008, "Wrong size on Firetank_C_PlayerR");
static_assert(offsetof(Firetank_C_PlayerR, Player) == 0x000000, "Member 'Firetank_C_PlayerR::Player' has a wrong offset!");

// Function firetank.firetank_C.playerHold
// 0x0008 (0x0008 - 0x0000)
struct Firetank_C_PlayerHold final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_PlayerHold) == 0x000008, "Wrong alignment on Firetank_C_PlayerHold");
static_assert(sizeof(Firetank_C_PlayerHold) == 0x000008, "Wrong size on Firetank_C_PlayerHold");
static_assert(offsetof(Firetank_C_PlayerHold, Player) == 0x000000, "Member 'Firetank_C_PlayerHold::Player' has a wrong offset!");

// Function firetank.firetank_C.playerUnequip
// 0x0008 (0x0008 - 0x0000)
struct Firetank_C_PlayerUnequip final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_PlayerUnequip) == 0x000008, "Wrong alignment on Firetank_C_PlayerUnequip");
static_assert(sizeof(Firetank_C_PlayerUnequip) == 0x000008, "Wrong size on Firetank_C_PlayerUnequip");
static_assert(offsetof(Firetank_C_PlayerUnequip, Player) == 0x000000, "Member 'Firetank_C_PlayerUnequip::Player' has a wrong offset!");

// Function firetank.firetank_C.thrown
// 0x0008 (0x0008 - 0x0000)
struct Firetank_C_Thrown final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_Thrown) == 0x000008, "Wrong alignment on Firetank_C_Thrown");
static_assert(sizeof(Firetank_C_Thrown) == 0x000008, "Wrong size on Firetank_C_Thrown");
static_assert(offsetof(Firetank_C_Thrown, Player) == 0x000000, "Member 'Firetank_C_Thrown::Player' has a wrong offset!");

// Function firetank.firetank_C.sendName
// 0x0008 (0x0008 - 0x0000)
struct Firetank_C_SendName final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_SendName) == 0x000004, "Wrong alignment on Firetank_C_SendName");
static_assert(sizeof(Firetank_C_SendName) == 0x000008, "Wrong size on Firetank_C_SendName");
static_assert(offsetof(Firetank_C_SendName, Name_0) == 0x000000, "Member 'Firetank_C_SendName::Name_0' has a wrong offset!");

// Function firetank.firetank_C.kicked
// 0x0001 (0x0001 - 0x0000)
struct Firetank_C_Kicked final
{
public:
	bool                                          Kick;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Firetank_C_Kicked) == 0x000001, "Wrong alignment on Firetank_C_Kicked");
static_assert(sizeof(Firetank_C_Kicked) == 0x000001, "Wrong size on Firetank_C_Kicked");
static_assert(offsetof(Firetank_C_Kicked, Kick) == 0x000000, "Member 'Firetank_C_Kicked::Kick' has a wrong offset!");

// Function firetank.firetank_C.player_use
// 0x0090 (0x0090 - 0x0000)
struct Firetank_C_Player_use final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Firetank_C_Player_use) == 0x000008, "Wrong alignment on Firetank_C_Player_use");
static_assert(sizeof(Firetank_C_Player_use) == 0x000090, "Wrong size on Firetank_C_Player_use");
static_assert(offsetof(Firetank_C_Player_use, Player) == 0x000000, "Member 'Firetank_C_Player_use::Player' has a wrong offset!");
static_assert(offsetof(Firetank_C_Player_use, Hit) == 0x000008, "Member 'Firetank_C_Player_use::Hit' has a wrong offset!");

// Function firetank.firetank_C.setIgnoreSave
// 0x0001 (0x0001 - 0x0000)
struct Firetank_C_SetIgnoreSave final
{
public:
	bool                                          Ignore;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Firetank_C_SetIgnoreSave) == 0x000001, "Wrong alignment on Firetank_C_SetIgnoreSave");
static_assert(sizeof(Firetank_C_SetIgnoreSave) == 0x000001, "Wrong size on Firetank_C_SetIgnoreSave");
static_assert(offsetof(Firetank_C_SetIgnoreSave, Ignore) == 0x000000, "Member 'Firetank_C_SetIgnoreSave::Ignore' has a wrong offset!");

// Function firetank.firetank_C.OnSuccess_99FD1C99470CA485602C19950841354D
// 0x0001 (0x0001 - 0x0000)
struct Firetank_C_OnSuccess_99FD1C99470CA485602C19950841354D final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_OnSuccess_99FD1C99470CA485602C19950841354D) == 0x000001, "Wrong alignment on Firetank_C_OnSuccess_99FD1C99470CA485602C19950841354D");
static_assert(sizeof(Firetank_C_OnSuccess_99FD1C99470CA485602C19950841354D) == 0x000001, "Wrong size on Firetank_C_OnSuccess_99FD1C99470CA485602C19950841354D");
static_assert(offsetof(Firetank_C_OnSuccess_99FD1C99470CA485602C19950841354D, MovementResult) == 0x000000, "Member 'Firetank_C_OnSuccess_99FD1C99470CA485602C19950841354D::MovementResult' has a wrong offset!");

// Function firetank.firetank_C.OnFail_99FD1C99470CA485602C19950841354D
// 0x0001 (0x0001 - 0x0000)
struct Firetank_C_OnFail_99FD1C99470CA485602C19950841354D final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_OnFail_99FD1C99470CA485602C19950841354D) == 0x000001, "Wrong alignment on Firetank_C_OnFail_99FD1C99470CA485602C19950841354D");
static_assert(sizeof(Firetank_C_OnFail_99FD1C99470CA485602C19950841354D) == 0x000001, "Wrong size on Firetank_C_OnFail_99FD1C99470CA485602C19950841354D");
static_assert(offsetof(Firetank_C_OnFail_99FD1C99470CA485602C19950841354D, MovementResult) == 0x000000, "Member 'Firetank_C_OnFail_99FD1C99470CA485602C19950841354D::MovementResult' has a wrong offset!");

// Function firetank.firetank_C.constructWheels
// 0x0320 (0x0320 - 0x0000)
struct Firetank_C_ConstructWheels final
{
public:
	class UPhysicsConstraintComponent*            CurrentConstraint_sus;                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CurrentMesh;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            CurrentConstraint;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Wheel;                                             // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Side;                                              // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00B0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            CallFunc_Array_Get_Item;                           // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFiretankCharacterController_C*         CallFunc_FinishSpawningActor_ReturnValue;          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x012E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_2;       // 0x012F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFlamethrower_C*                        K2Node_DynamicCast_AsFlamethrower;                 // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFiretank_Skeleton_AnimBlueprint_C*     K2Node_DynamicCast_AsFiretank_Skeleton_Anim_Blueprint; // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicsConstraintComponent*            CallFunc_Array_Get_Item_1;                         // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            CallFunc_Array_Get_Item_2;                         // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPhysicsConstraintComponent*>    K2Node_Select_Default;                             // 0x0178(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFiretank_thread_Skeleton_AnimBlueprint_C* K2Node_DynamicCast_AsFiretank_Thread_Skeleton_Anim_Blueprint; // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_2;            // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFiretank_thread_Skeleton_AnimBlueprint_C* K2Node_DynamicCast_AsFiretank_Thread_Skeleton_Anim_Blueprint_1; // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_3;                         // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DD[0x3];                                      // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_4;                         // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            CallFunc_Array_Get_Item_5;                         // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FD[0x3];                                      // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicsConstraintComponent*            CallFunc_Array_Get_Item_6;                         // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0xF];                                      // 0x0221(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0230(0x0030)(IsPlainOldData, NoDestructor)
	class UPhysicsConstraintComponent*            CallFunc_AddComponent_ReturnValue;                 // 0x0260(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_268[0x8];                                      // 0x0268(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0270(0x0030)(IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue_1;               // 0x02A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A8[0x8];                                      // 0x02A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x02B0(0x0030)(IsPlainOldData, NoDestructor)
	class UPhysicsConstraintComponent*            CallFunc_AddComponent_ReturnValue_2;               // 0x02E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           K2Node_Select_Default_1;                           // 0x02E8(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPhysicsConstraintComponent*>    K2Node_Select_Default_2;                           // 0x0300(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_315[0x3];                                      // 0x0315(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_ConstructWheels) == 0x000010, "Wrong alignment on Firetank_C_ConstructWheels");
static_assert(sizeof(Firetank_C_ConstructWheels) == 0x000320, "Wrong size on Firetank_C_ConstructWheels");
static_assert(offsetof(Firetank_C_ConstructWheels, CurrentConstraint_sus) == 0x000000, "Member 'Firetank_C_ConstructWheels::CurrentConstraint_sus' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CurrentMesh) == 0x000008, "Member 'Firetank_C_ConstructWheels::CurrentMesh' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CurrentConstraint) == 0x000010, "Member 'Firetank_C_ConstructWheels::CurrentConstraint' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, Wheel) == 0x000018, "Member 'Firetank_C_ConstructWheels::Wheel' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, Side) == 0x00001C, "Member 'Firetank_C_ConstructWheels::Side' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, Temp_int_Variable) == 0x000020, "Member 'Firetank_C_ConstructWheels::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, Temp_int_Variable_1) == 0x000024, "Member 'Firetank_C_ConstructWheels::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'Firetank_C_ConstructWheels::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'Firetank_C_ConstructWheels::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, Temp_int_Variable_2) == 0x000030, "Member 'Firetank_C_ConstructWheels::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Add_IntInt_ReturnValue_2) == 0x000034, "Member 'Firetank_C_ConstructWheels::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, Temp_int_Variable_3) == 0x000038, "Member 'Firetank_C_ConstructWheels::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, Temp_int_Variable_4) == 0x00003C, "Member 'Firetank_C_ConstructWheels::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, Temp_int_Variable_5) == 0x000040, "Member 'Firetank_C_ConstructWheels::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Add_IntInt_ReturnValue_3) == 0x000044, "Member 'Firetank_C_ConstructWheels::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Add_IntInt_ReturnValue_4) == 0x000048, "Member 'Firetank_C_ConstructWheels::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, Temp_int_Variable_6) == 0x00004C, "Member 'Firetank_C_ConstructWheels::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, Temp_int_Variable_7) == 0x000050, "Member 'Firetank_C_ConstructWheels::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Add_IntInt_ReturnValue_5) == 0x000054, "Member 'Firetank_C_ConstructWheels::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Add_IntInt_ReturnValue_6) == 0x000058, "Member 'Firetank_C_ConstructWheels::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, Temp_int_Variable_8) == 0x00005C, "Member 'Firetank_C_ConstructWheels::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, Temp_int_Variable_9) == 0x000060, "Member 'Firetank_C_ConstructWheels::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000064, "Member 'Firetank_C_ConstructWheels::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, Temp_int_Variable_10) == 0x000068, "Member 'Firetank_C_ConstructWheels::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_MakeTransform_ReturnValue) == 0x000070, "Member 'Firetank_C_ConstructWheels::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000A0, "Member 'Firetank_C_ConstructWheels::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Add_IntInt_ReturnValue_7) == 0x0000A4, "Member 'Firetank_C_ConstructWheels::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_GetTransform_ReturnValue) == 0x0000B0, "Member 'Firetank_C_ConstructWheels::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_ComposeTransforms_ReturnValue) == 0x0000E0, "Member 'Firetank_C_ConstructWheels::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000110, "Member 'Firetank_C_ConstructWheels::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Array_Get_Item) == 0x000118, "Member 'Firetank_C_ConstructWheels::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_FinishSpawningActor_ReturnValue) == 0x000120, "Member 'Firetank_C_ConstructWheels::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Array_Length_ReturnValue) == 0x000128, "Member 'Firetank_C_ConstructWheels::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Less_IntInt_ReturnValue) == 0x00012C, "Member 'Firetank_C_ConstructWheels::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_K2_AttachToComponent_ReturnValue) == 0x00012D, "Member 'Firetank_C_ConstructWheels::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x00012E, "Member 'Firetank_C_ConstructWheels::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_K2_AttachToComponent_ReturnValue_2) == 0x00012F, "Member 'Firetank_C_ConstructWheels::CallFunc_K2_AttachToComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_GetAnimInstance_ReturnValue) == 0x000130, "Member 'Firetank_C_ConstructWheels::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, K2Node_DynamicCast_AsFlamethrower) == 0x000138, "Member 'Firetank_C_ConstructWheels::K2Node_DynamicCast_AsFlamethrower' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'Firetank_C_ConstructWheels::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, K2Node_DynamicCast_AsFiretank_Skeleton_Anim_Blueprint) == 0x000148, "Member 'Firetank_C_ConstructWheels::K2Node_DynamicCast_AsFiretank_Skeleton_Anim_Blueprint' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, K2Node_DynamicCast_bSuccess_1) == 0x000150, "Member 'Firetank_C_ConstructWheels::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Array_Get_Item_1) == 0x000158, "Member 'Firetank_C_ConstructWheels::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Array_Get_Item_2) == 0x000160, "Member 'Firetank_C_ConstructWheels::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Array_Length_ReturnValue_1) == 0x000168, "Member 'Firetank_C_ConstructWheels::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Less_IntInt_ReturnValue_1) == 0x00016C, "Member 'Firetank_C_ConstructWheels::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Array_Length_ReturnValue_2) == 0x000170, "Member 'Firetank_C_ConstructWheels::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Less_IntInt_ReturnValue_2) == 0x000174, "Member 'Firetank_C_ConstructWheels::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, K2Node_Select_Default) == 0x000178, "Member 'Firetank_C_ConstructWheels::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000188, "Member 'Firetank_C_ConstructWheels::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Array_Add_ReturnValue) == 0x000190, "Member 'Firetank_C_ConstructWheels::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, K2Node_DynamicCast_AsFiretank_Thread_Skeleton_Anim_Blueprint) == 0x000198, "Member 'Firetank_C_ConstructWheels::K2Node_DynamicCast_AsFiretank_Thread_Skeleton_Anim_Blueprint' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, K2Node_DynamicCast_bSuccess_2) == 0x0001A0, "Member 'Firetank_C_ConstructWheels::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_GetAnimInstance_ReturnValue_2) == 0x0001A8, "Member 'Firetank_C_ConstructWheels::CallFunc_GetAnimInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, K2Node_DynamicCast_AsFiretank_Thread_Skeleton_Anim_Blueprint_1) == 0x0001B0, "Member 'Firetank_C_ConstructWheels::K2Node_DynamicCast_AsFiretank_Thread_Skeleton_Anim_Blueprint_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, K2Node_DynamicCast_bSuccess_3) == 0x0001B8, "Member 'Firetank_C_ConstructWheels::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0001C0, "Member 'Firetank_C_ConstructWheels::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x0001C8, "Member 'Firetank_C_ConstructWheels::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Array_Get_Item_3) == 0x0001D0, "Member 'Firetank_C_ConstructWheels::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Array_Length_ReturnValue_3) == 0x0001D8, "Member 'Firetank_C_ConstructWheels::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Less_IntInt_ReturnValue_3) == 0x0001DC, "Member 'Firetank_C_ConstructWheels::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Array_Get_Item_4) == 0x0001E0, "Member 'Firetank_C_ConstructWheels::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Array_Get_Item_5) == 0x0001E8, "Member 'Firetank_C_ConstructWheels::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Array_Length_ReturnValue_4) == 0x0001F0, "Member 'Firetank_C_ConstructWheels::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Less_IntInt_ReturnValue_4) == 0x0001F4, "Member 'Firetank_C_ConstructWheels::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Array_Length_ReturnValue_5) == 0x0001F8, "Member 'Firetank_C_ConstructWheels::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Less_IntInt_ReturnValue_5) == 0x0001FC, "Member 'Firetank_C_ConstructWheels::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Array_Get_Item_6) == 0x000200, "Member 'Firetank_C_ConstructWheels::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Conv_IntToBool_ReturnValue) == 0x000208, "Member 'Firetank_C_ConstructWheels::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_SelectFloat_ReturnValue) == 0x00020C, "Member 'Firetank_C_ConstructWheels::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Array_Length_ReturnValue_6) == 0x000210, "Member 'Firetank_C_ConstructWheels::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_MakeVector_ReturnValue) == 0x000214, "Member 'Firetank_C_ConstructWheels::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Less_IntInt_ReturnValue_6) == 0x000220, "Member 'Firetank_C_ConstructWheels::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_MakeTransform_ReturnValue_1) == 0x000230, "Member 'Firetank_C_ConstructWheels::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_AddComponent_ReturnValue) == 0x000260, "Member 'Firetank_C_ConstructWheels::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_MakeTransform_ReturnValue_2) == 0x000270, "Member 'Firetank_C_ConstructWheels::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_AddComponent_ReturnValue_1) == 0x0002A0, "Member 'Firetank_C_ConstructWheels::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_MakeTransform_ReturnValue_3) == 0x0002B0, "Member 'Firetank_C_ConstructWheels::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_AddComponent_ReturnValue_2) == 0x0002E0, "Member 'Firetank_C_ConstructWheels::CallFunc_AddComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, K2Node_Select_Default_1) == 0x0002E8, "Member 'Firetank_C_ConstructWheels::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Array_Add_ReturnValue_1) == 0x0002F8, "Member 'Firetank_C_ConstructWheels::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, Temp_int_Variable_11) == 0x0002FC, "Member 'Firetank_C_ConstructWheels::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, K2Node_Select_Default_2) == 0x000300, "Member 'Firetank_C_ConstructWheels::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Array_Add_ReturnValue_2) == 0x000310, "Member 'Firetank_C_ConstructWheels::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000314, "Member 'Firetank_C_ConstructWheels::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_ConstructWheels, CallFunc_Add_IntInt_ReturnValue_8) == 0x000318, "Member 'Firetank_C_ConstructWheels::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");

// Function firetank.firetank_C.checkSides
// 0x0388 (0x0388 - 0x0000)
struct Firetank_C_CheckSides final
{
public:
	float                                         Og;                                                // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Num;                                               // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Side;                                              // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      CallFunc_obj_static_obj;                           // 0x0048(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0068(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x00D8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0168(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17A[0x2];                                      // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_obj_statDyn_obj;                          // 0x0200(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit_1;     // 0x0240(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue_1; // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x02CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CB[0x1];                                      // 0x02CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x02D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x02E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x02EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x02F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0318(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0334(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0340(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x034C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0358(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x0364(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0374(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Firetank_C_CheckSides) == 0x000008, "Wrong alignment on Firetank_C_CheckSides");
static_assert(sizeof(Firetank_C_CheckSides) == 0x000388, "Wrong size on Firetank_C_CheckSides");
static_assert(offsetof(Firetank_C_CheckSides, Og) == 0x000000, "Member 'Firetank_C_CheckSides::Og' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, Num) == 0x000004, "Member 'Firetank_C_CheckSides::Num' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, Side) == 0x000008, "Member 'Firetank_C_CheckSides::Side' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00000C, "Member 'Firetank_C_CheckSides::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_GetRightVector_ReturnValue) == 0x000018, "Member 'Firetank_C_CheckSides::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000024, "Member 'Firetank_C_CheckSides::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_Normal_ReturnValue) == 0x000030, "Member 'Firetank_C_CheckSides::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00003C, "Member 'Firetank_C_CheckSides::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_obj_static_obj) == 0x000048, "Member 'Firetank_C_CheckSides::CallFunc_obj_static_obj' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_GetActorUpVector_ReturnValue) == 0x000058, "Member 'Firetank_C_CheckSides::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, Temp_object_Variable) == 0x000068, "Member 'Firetank_C_CheckSides::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000078, "Member 'Firetank_C_CheckSides::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000084, "Member 'Firetank_C_CheckSides::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_Add_VectorVector_ReturnValue) == 0x000090, "Member 'Firetank_C_CheckSides::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_GetForwardVector_ReturnValue) == 0x00009C, "Member 'Firetank_C_CheckSides::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0000A8, "Member 'Firetank_C_CheckSides::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_GetForwardVector_ReturnValue_1) == 0x0000B4, "Member 'Firetank_C_CheckSides::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000C0, "Member 'Firetank_C_CheckSides::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000CC, "Member 'Firetank_C_CheckSides::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x0000D8, "Member 'Firetank_C_CheckSides::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x000160, "Member 'Firetank_C_CheckSides::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, Temp_object_Variable_1) == 0x000168, "Member 'Firetank_C_CheckSides::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_bBlockingHit) == 0x000178, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_bInitialOverlap) == 0x000179, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_Time) == 0x00017C, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_Distance) == 0x000180, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_Location) == 0x000184, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_ImpactPoint) == 0x000190, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_Normal) == 0x00019C, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_ImpactNormal) == 0x0001A8, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_PhysMat) == 0x0001B8, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_HitActor) == 0x0001C0, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_HitComponent) == 0x0001C8, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_HitBoneName) == 0x0001D0, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_HitItem) == 0x0001D8, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_ElementIndex) == 0x0001DC, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_FaceIndex) == 0x0001E0, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_TraceStart) == 0x0001E4, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_TraceEnd) == 0x0001F0, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_obj_statDyn_obj) == 0x000200, "Member 'Firetank_C_CheckSides::CallFunc_obj_statDyn_obj' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_Cross_VectorVector_ReturnValue) == 0x000210, "Member 'Firetank_C_CheckSides::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x00021C, "Member 'Firetank_C_CheckSides::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000228, "Member 'Firetank_C_CheckSides::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000234, "Member 'Firetank_C_CheckSides::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_SphereTraceSingleForObjects_OutHit_1) == 0x000240, "Member 'Firetank_C_CheckSides::CallFunc_SphereTraceSingleForObjects_OutHit_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_SphereTraceSingleForObjects_ReturnValue_1) == 0x0002C8, "Member 'Firetank_C_CheckSides::CallFunc_SphereTraceSingleForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0002C9, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0002CA, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_Time_1) == 0x0002CC, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_Distance_1) == 0x0002D0, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_Location_1) == 0x0002D4, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0002E0, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_Normal_1) == 0x0002EC, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0002F8, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_PhysMat_1) == 0x000308, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_HitActor_1) == 0x000310, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_HitComponent_1) == 0x000318, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_HitBoneName_1) == 0x000320, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_HitItem_1) == 0x000328, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_ElementIndex_1) == 0x00032C, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_FaceIndex_1) == 0x000330, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_TraceStart_1) == 0x000334, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_BreakHitResult_TraceEnd_1) == 0x000340, "Member 'Firetank_C_CheckSides::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x00034C, "Member 'Firetank_C_CheckSides::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_Normal_ReturnValue_1) == 0x000358, "Member 'Firetank_C_CheckSides::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x000364, "Member 'Firetank_C_CheckSides::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_Dot_VectorVector_ReturnValue) == 0x000370, "Member 'Firetank_C_CheckSides::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000374, "Member 'Firetank_C_CheckSides::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_CheckSides, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000380, "Member 'Firetank_C_CheckSides::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function firetank.firetank_C.sensePawn
// 0x0240 (0x0240 - 0x0000)
struct Firetank_C_SensePawn final
{
public:
	float                                         Spread;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Pawns;                                             // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0088(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_obj_statDynPawn_obj;                      // 0x00B0(0x0010)(ReferenceParm)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x00C8(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomPointInBoundingBox_ReturnValue;     // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0114(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x019E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19F[0x1];                                      // 0x019F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0204(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x3];                                      // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_SensePawn) == 0x000008, "Wrong alignment on Firetank_C_SensePawn");
static_assert(sizeof(Firetank_C_SensePawn) == 0x000240, "Wrong size on Firetank_C_SensePawn");
static_assert(offsetof(Firetank_C_SensePawn, Spread) == 0x000000, "Member 'Firetank_C_SensePawn::Spread' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, Pawns) == 0x000008, "Member 'Firetank_C_SensePawn::Pawns' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, Temp_int_Array_Index_Variable) == 0x000018, "Member 'Firetank_C_SensePawn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_RandomFloat_ReturnValue) == 0x00001C, "Member 'Firetank_C_SensePawn::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'Firetank_C_SensePawn::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00002C, "Member 'Firetank_C_SensePawn::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_Array_RemoveItem_ReturnValue) == 0x00002D, "Member 'Firetank_C_SensePawn::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_Array_Get_Item) == 0x000030, "Member 'Firetank_C_SensePawn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'Firetank_C_SensePawn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000040, "Member 'Firetank_C_SensePawn::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_GetComponentBounds_Origin) == 0x000048, "Member 'Firetank_C_SensePawn::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_GetComponentBounds_BoxExtent) == 0x000054, "Member 'Firetank_C_SensePawn::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_GetComponentBounds_SphereRadius) == 0x000060, "Member 'Firetank_C_SensePawn::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_IsValid_ReturnValue) == 0x000064, "Member 'Firetank_C_SensePawn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000068, "Member 'Firetank_C_SensePawn::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_SelectFloat_ReturnValue) == 0x000074, "Member 'Firetank_C_SensePawn::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_SelectFloat_ReturnValue_1) == 0x000078, "Member 'Firetank_C_SensePawn::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, Temp_int_Loop_Counter_Variable) == 0x00007C, "Member 'Firetank_C_SensePawn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'Firetank_C_SensePawn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'Firetank_C_SensePawn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, Temp_object_Variable) == 0x000088, "Member 'Firetank_C_SensePawn::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_IsValid_ReturnValue_1) == 0x000098, "Member 'Firetank_C_SensePawn::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x00009C, "Member 'Firetank_C_SensePawn::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_Vector_Distance_ReturnValue) == 0x0000A8, "Member 'Firetank_C_SensePawn::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_obj_statDynPawn_obj) == 0x0000B0, "Member 'Firetank_C_SensePawn::CallFunc_obj_statDynPawn_obj' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000C0, "Member 'Firetank_C_SensePawn::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000C4, "Member 'Firetank_C_SensePawn::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_GetOverlappingActors_OverlappingActors) == 0x0000C8, "Member 'Firetank_C_SensePawn::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000D8, "Member 'Firetank_C_SensePawn::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_Add_VectorVector_ReturnValue) == 0x0000E4, "Member 'Firetank_C_SensePawn::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000F0, "Member 'Firetank_C_SensePawn::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_RandomPointInBoundingBox_ReturnValue) == 0x0000FC, "Member 'Firetank_C_SensePawn::CallFunc_RandomPointInBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000108, "Member 'Firetank_C_SensePawn::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000114, "Member 'Firetank_C_SensePawn::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x00019C, "Member 'Firetank_C_SensePawn::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_BreakHitResult_bBlockingHit) == 0x00019D, "Member 'Firetank_C_SensePawn::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_BreakHitResult_bInitialOverlap) == 0x00019E, "Member 'Firetank_C_SensePawn::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_BreakHitResult_Time) == 0x0001A0, "Member 'Firetank_C_SensePawn::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_BreakHitResult_Distance) == 0x0001A4, "Member 'Firetank_C_SensePawn::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_BreakHitResult_Location) == 0x0001A8, "Member 'Firetank_C_SensePawn::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_BreakHitResult_ImpactPoint) == 0x0001B4, "Member 'Firetank_C_SensePawn::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_BreakHitResult_Normal) == 0x0001C0, "Member 'Firetank_C_SensePawn::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_BreakHitResult_ImpactNormal) == 0x0001CC, "Member 'Firetank_C_SensePawn::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_BreakHitResult_PhysMat) == 0x0001D8, "Member 'Firetank_C_SensePawn::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_BreakHitResult_HitActor) == 0x0001E0, "Member 'Firetank_C_SensePawn::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_BreakHitResult_HitComponent) == 0x0001E8, "Member 'Firetank_C_SensePawn::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_BreakHitResult_HitBoneName) == 0x0001F0, "Member 'Firetank_C_SensePawn::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_BreakHitResult_HitItem) == 0x0001F8, "Member 'Firetank_C_SensePawn::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_BreakHitResult_ElementIndex) == 0x0001FC, "Member 'Firetank_C_SensePawn::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_BreakHitResult_FaceIndex) == 0x000200, "Member 'Firetank_C_SensePawn::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_BreakHitResult_TraceStart) == 0x000204, "Member 'Firetank_C_SensePawn::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_BreakHitResult_TraceEnd) == 0x000210, "Member 'Firetank_C_SensePawn::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, K2Node_DynamicCast_AsPawn) == 0x000220, "Member 'Firetank_C_SensePawn::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, K2Node_DynamicCast_bSuccess) == 0x000228, "Member 'Firetank_C_SensePawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00022C, "Member 'Firetank_C_SensePawn::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_FClamp_ReturnValue) == 0x000230, "Member 'Firetank_C_SensePawn::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000234, "Member 'Firetank_C_SensePawn::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_SensePawn, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x000238, "Member 'Firetank_C_SensePawn::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");

// Function firetank.firetank_C.setThreadsOffset
// 0x0028 (0x0028 - 0x0000)
struct Firetank_C_SetThreadsOffset final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_SetThreadsOffset) == 0x000008, "Wrong alignment on Firetank_C_SetThreadsOffset");
static_assert(sizeof(Firetank_C_SetThreadsOffset) == 0x000028, "Wrong size on Firetank_C_SetThreadsOffset");
static_assert(offsetof(Firetank_C_SetThreadsOffset, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Firetank_C_SetThreadsOffset::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Firetank_C_SetThreadsOffset, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Firetank_C_SetThreadsOffset::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Firetank_C_SetThreadsOffset, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Firetank_C_SetThreadsOffset::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_SetThreadsOffset, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'Firetank_C_SetThreadsOffset::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_SetThreadsOffset, CallFunc_Array_Get_Item) == 0x000010, "Member 'Firetank_C_SetThreadsOffset::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Firetank_C_SetThreadsOffset, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'Firetank_C_SetThreadsOffset::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_SetThreadsOffset, CallFunc_Add_VectorVector_ReturnValue) == 0x00001C, "Member 'Firetank_C_SetThreadsOffset::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function firetank.firetank_C.gcanExp
// 0x0040 (0x0040 - 0x0000)
struct Firetank_C_GcanExp final
{
public:
	struct FTransform                             SpawnTransform;                                    // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AExplosion_C*                           CallFunc_FinishSpawningActor_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_GcanExp) == 0x000010, "Wrong alignment on Firetank_C_GcanExp");
static_assert(sizeof(Firetank_C_GcanExp) == 0x000040, "Wrong size on Firetank_C_GcanExp");
static_assert(offsetof(Firetank_C_GcanExp, SpawnTransform) == 0x000000, "Member 'Firetank_C_GcanExp::SpawnTransform' has a wrong offset!");
static_assert(offsetof(Firetank_C_GcanExp, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000030, "Member 'Firetank_C_GcanExp::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_GcanExp, CallFunc_FinishSpawningActor_ReturnValue) == 0x000038, "Member 'Firetank_C_GcanExp::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function firetank.firetank_C.makePathPoints
// 0x0088 (0x0088 - 0x0000)
struct Firetank_C_MakePathPoints final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentPathIndex_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        CallFunc_GetCurrentPathPoints_ReturnValue;         // 0x0040(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_MakePathPoints) == 0x000008, "Wrong alignment on Firetank_C_MakePathPoints");
static_assert(sizeof(Firetank_C_MakePathPoints) == 0x000088, "Wrong size on Firetank_C_MakePathPoints");
static_assert(offsetof(Firetank_C_MakePathPoints, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'Firetank_C_MakePathPoints::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_MakePathPoints, CallFunc_GetForwardVector_ReturnValue) == 0x00000C, "Member 'Firetank_C_MakePathPoints::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_MakePathPoints, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000018, "Member 'Firetank_C_MakePathPoints::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_MakePathPoints, CallFunc_Add_VectorVector_ReturnValue) == 0x000024, "Member 'Firetank_C_MakePathPoints::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_MakePathPoints, CallFunc_GetController_ReturnValue) == 0x000030, "Member 'Firetank_C_MakePathPoints::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_MakePathPoints, CallFunc_GetCurrentPathIndex_ReturnValue) == 0x000038, "Member 'Firetank_C_MakePathPoints::CallFunc_GetCurrentPathIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_MakePathPoints, CallFunc_GetCurrentPathPoints_ReturnValue) == 0x000040, "Member 'Firetank_C_MakePathPoints::CallFunc_GetCurrentPathPoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_MakePathPoints, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'Firetank_C_MakePathPoints::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_MakePathPoints, CallFunc_Array_Get_Item) == 0x000054, "Member 'Firetank_C_MakePathPoints::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Firetank_C_MakePathPoints, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'Firetank_C_MakePathPoints::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_MakePathPoints, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00006C, "Member 'Firetank_C_MakePathPoints::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_MakePathPoints, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000070, "Member 'Firetank_C_MakePathPoints::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_MakePathPoints, CallFunc_Normal_ReturnValue) == 0x00007C, "Member 'Firetank_C_MakePathPoints::CallFunc_Normal_ReturnValue' has a wrong offset!");

// Function firetank.firetank_C.updGastank
// 0x0028 (0x0028 - 0x0000)
struct Firetank_C_UpdGastank final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue_1;       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Firetank_C_UpdGastank) == 0x000008, "Wrong alignment on Firetank_C_UpdGastank");
static_assert(sizeof(Firetank_C_UpdGastank) == 0x000028, "Wrong size on Firetank_C_UpdGastank");
static_assert(offsetof(Firetank_C_UpdGastank, Temp_int_Variable) == 0x000000, "Member 'Firetank_C_UpdGastank::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Firetank_C_UpdGastank, Temp_int_Variable_1) == 0x000004, "Member 'Firetank_C_UpdGastank::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_UpdGastank, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Firetank_C_UpdGastank::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_UpdGastank, CallFunc_Add_IntInt_ReturnValue_1) == 0x00000C, "Member 'Firetank_C_UpdGastank::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_UpdGastank, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000010, "Member 'Firetank_C_UpdGastank::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_UpdGastank, CallFunc_SpawnEmitterAttached_ReturnValue_1) == 0x000018, "Member 'Firetank_C_UpdGastank::CallFunc_SpawnEmitterAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_UpdGastank, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'Firetank_C_UpdGastank::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_UpdGastank, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'Firetank_C_UpdGastank::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_UpdGastank, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000022, "Member 'Firetank_C_UpdGastank::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_UpdGastank, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000023, "Member 'Firetank_C_UpdGastank::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function firetank.firetank_C.updGastankRot
// 0x016C (0x016C - 0x0000)
struct Firetank_C_UpdGastankRot final
{
public:
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult; // 0x003C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue_1;                      // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue_1;                      // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_1; // 0x00E4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Firetank_C_UpdGastankRot) == 0x000004, "Wrong alignment on Firetank_C_UpdGastankRot");
static_assert(sizeof(Firetank_C_UpdGastankRot) == 0x00016C, "Wrong size on Firetank_C_UpdGastankRot");
static_assert(offsetof(Firetank_C_UpdGastankRot, CallFunc_RandomFloatInRange_ReturnValue) == 0x000000, "Member 'Firetank_C_UpdGastankRot::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_UpdGastankRot, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000004, "Member 'Firetank_C_UpdGastankRot::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_UpdGastankRot, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000008, "Member 'Firetank_C_UpdGastankRot::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_UpdGastankRot, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'Firetank_C_UpdGastankRot::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_UpdGastankRot, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'Firetank_C_UpdGastankRot::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_UpdGastankRot, CallFunc_MakeRotator_ReturnValue) == 0x000014, "Member 'Firetank_C_UpdGastankRot::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_UpdGastankRot, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000020, "Member 'Firetank_C_UpdGastankRot::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_UpdGastankRot, CallFunc_VLerp_ReturnValue) == 0x000024, "Member 'Firetank_C_UpdGastankRot::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_UpdGastankRot, CallFunc_RLerp_ReturnValue) == 0x000030, "Member 'Firetank_C_UpdGastankRot::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_UpdGastankRot, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult) == 0x00003C, "Member 'Firetank_C_UpdGastankRot::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Firetank_C_UpdGastankRot, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000C4, "Member 'Firetank_C_UpdGastankRot::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_UpdGastankRot, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x0000C8, "Member 'Firetank_C_UpdGastankRot::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_UpdGastankRot, CallFunc_VLerp_ReturnValue_1) == 0x0000CC, "Member 'Firetank_C_UpdGastankRot::CallFunc_VLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_UpdGastankRot, CallFunc_RLerp_ReturnValue_1) == 0x0000D8, "Member 'Firetank_C_UpdGastankRot::CallFunc_RLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_UpdGastankRot, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_1) == 0x0000E4, "Member 'Firetank_C_UpdGastankRot::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_1' has a wrong offset!");

// Function firetank.firetank_C.addGastankHealthEffect
// 0x0068 (0x0068 - 0x0000)
struct Firetank_C_AddGastankHealthEffect final
{
public:
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue_1;         // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue_1;       // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue_1;       // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Firetank_C_AddGastankHealthEffect) == 0x000008, "Wrong alignment on Firetank_C_AddGastankHealthEffect");
static_assert(sizeof(Firetank_C_AddGastankHealthEffect) == 0x000068, "Wrong size on Firetank_C_AddGastankHealthEffect");
static_assert(offsetof(Firetank_C_AddGastankHealthEffect, CallFunc_RandomFloatInRange_ReturnValue) == 0x000000, "Member 'Firetank_C_AddGastankHealthEffect::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_AddGastankHealthEffect, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000004, "Member 'Firetank_C_AddGastankHealthEffect::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_AddGastankHealthEffect, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000010, "Member 'Firetank_C_AddGastankHealthEffect::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_AddGastankHealthEffect, CallFunc_Conv_FloatToVector_ReturnValue_1) == 0x000014, "Member 'Firetank_C_AddGastankHealthEffect::CallFunc_Conv_FloatToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_AddGastankHealthEffect, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000020, "Member 'Firetank_C_AddGastankHealthEffect::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_AddGastankHealthEffect, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000024, "Member 'Firetank_C_AddGastankHealthEffect::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_AddGastankHealthEffect, CallFunc_MakeRotator_ReturnValue) == 0x000028, "Member 'Firetank_C_AddGastankHealthEffect::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_AddGastankHealthEffect, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000038, "Member 'Firetank_C_AddGastankHealthEffect::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_AddGastankHealthEffect, CallFunc_SpawnEmitterAttached_ReturnValue_1) == 0x000040, "Member 'Firetank_C_AddGastankHealthEffect::CallFunc_SpawnEmitterAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_AddGastankHealthEffect, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000048, "Member 'Firetank_C_AddGastankHealthEffect::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_AddGastankHealthEffect, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00004C, "Member 'Firetank_C_AddGastankHealthEffect::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_AddGastankHealthEffect, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000050, "Member 'Firetank_C_AddGastankHealthEffect::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_AddGastankHealthEffect, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000054, "Member 'Firetank_C_AddGastankHealthEffect::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_AddGastankHealthEffect, CallFunc_Add_FloatFloat_ReturnValue) == 0x000058, "Member 'Firetank_C_AddGastankHealthEffect::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_AddGastankHealthEffect, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00005C, "Member 'Firetank_C_AddGastankHealthEffect::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_AddGastankHealthEffect, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000060, "Member 'Firetank_C_AddGastankHealthEffect::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_AddGastankHealthEffect, CallFunc_RandomBoolWithWeight_ReturnValue_1) == 0x000061, "Member 'Firetank_C_AddGastankHealthEffect::CallFunc_RandomBoolWithWeight_ReturnValue_1' has a wrong offset!");

// Function firetank.firetank_C.ariralShoot
// 0x0218 (0x0218 - 0x0000)
struct Firetank_C_AriralShoot final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AArirGun_shoot_C*                       Shoot;                                             // 0x0088(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects;                  // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_LineTraceComponent_HitLocation;        // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_LineTraceComponent_HitNormal;          // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_K2_LineTraceComponent_BoneName;           // 0x016C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_LineTraceComponent_OutHit;             // 0x0174(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_LineTraceComponent_ReturnValue;        // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FD[0x3];                                      // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_1;       // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20D[0x3];                                      // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue_1;     // 0x0210(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_AriralShoot) == 0x000008, "Wrong alignment on Firetank_C_AriralShoot");
static_assert(sizeof(Firetank_C_AriralShoot) == 0x000218, "Wrong size on Firetank_C_AriralShoot");
static_assert(offsetof(Firetank_C_AriralShoot, Hit) == 0x000000, "Member 'Firetank_C_AriralShoot::Hit' has a wrong offset!");
static_assert(offsetof(Firetank_C_AriralShoot, Shoot) == 0x000088, "Member 'Firetank_C_AriralShoot::Shoot' has a wrong offset!");
static_assert(offsetof(Firetank_C_AriralShoot, CallFunc_BreakHitResult_bBlockingHit) == 0x000090, "Member 'Firetank_C_AriralShoot::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Firetank_C_AriralShoot, CallFunc_BreakHitResult_bInitialOverlap) == 0x000091, "Member 'Firetank_C_AriralShoot::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Firetank_C_AriralShoot, CallFunc_BreakHitResult_Time) == 0x000094, "Member 'Firetank_C_AriralShoot::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Firetank_C_AriralShoot, CallFunc_BreakHitResult_Distance) == 0x000098, "Member 'Firetank_C_AriralShoot::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Firetank_C_AriralShoot, CallFunc_BreakHitResult_Location) == 0x00009C, "Member 'Firetank_C_AriralShoot::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Firetank_C_AriralShoot, CallFunc_BreakHitResult_ImpactPoint) == 0x0000A8, "Member 'Firetank_C_AriralShoot::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Firetank_C_AriralShoot, CallFunc_BreakHitResult_Normal) == 0x0000B4, "Member 'Firetank_C_AriralShoot::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Firetank_C_AriralShoot, CallFunc_BreakHitResult_ImpactNormal) == 0x0000C0, "Member 'Firetank_C_AriralShoot::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Firetank_C_AriralShoot, CallFunc_BreakHitResult_PhysMat) == 0x0000D0, "Member 'Firetank_C_AriralShoot::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Firetank_C_AriralShoot, CallFunc_BreakHitResult_HitActor) == 0x0000D8, "Member 'Firetank_C_AriralShoot::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Firetank_C_AriralShoot, CallFunc_BreakHitResult_HitComponent) == 0x0000E0, "Member 'Firetank_C_AriralShoot::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Firetank_C_AriralShoot, CallFunc_BreakHitResult_HitBoneName) == 0x0000E8, "Member 'Firetank_C_AriralShoot::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Firetank_C_AriralShoot, CallFunc_BreakHitResult_HitItem) == 0x0000F0, "Member 'Firetank_C_AriralShoot::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Firetank_C_AriralShoot, CallFunc_BreakHitResult_ElementIndex) == 0x0000F4, "Member 'Firetank_C_AriralShoot::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Firetank_C_AriralShoot, CallFunc_BreakHitResult_FaceIndex) == 0x0000F8, "Member 'Firetank_C_AriralShoot::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Firetank_C_AriralShoot, CallFunc_BreakHitResult_TraceStart) == 0x0000FC, "Member 'Firetank_C_AriralShoot::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Firetank_C_AriralShoot, CallFunc_BreakHitResult_TraceEnd) == 0x000108, "Member 'Firetank_C_AriralShoot::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Firetank_C_AriralShoot, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000114, "Member 'Firetank_C_AriralShoot::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_AriralShoot, K2Node_DynamicCast_AsInt_Objects) == 0x000120, "Member 'Firetank_C_AriralShoot::K2Node_DynamicCast_AsInt_Objects' has a wrong offset!");
static_assert(offsetof(Firetank_C_AriralShoot, K2Node_DynamicCast_bSuccess) == 0x000130, "Member 'Firetank_C_AriralShoot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Firetank_C_AriralShoot, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000134, "Member 'Firetank_C_AriralShoot::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_AriralShoot, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000140, "Member 'Firetank_C_AriralShoot::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_AriralShoot, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000148, "Member 'Firetank_C_AriralShoot::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_AriralShoot, CallFunc_K2_LineTraceComponent_HitLocation) == 0x000154, "Member 'Firetank_C_AriralShoot::CallFunc_K2_LineTraceComponent_HitLocation' has a wrong offset!");
static_assert(offsetof(Firetank_C_AriralShoot, CallFunc_K2_LineTraceComponent_HitNormal) == 0x000160, "Member 'Firetank_C_AriralShoot::CallFunc_K2_LineTraceComponent_HitNormal' has a wrong offset!");
static_assert(offsetof(Firetank_C_AriralShoot, CallFunc_K2_LineTraceComponent_BoneName) == 0x00016C, "Member 'Firetank_C_AriralShoot::CallFunc_K2_LineTraceComponent_BoneName' has a wrong offset!");
static_assert(offsetof(Firetank_C_AriralShoot, CallFunc_K2_LineTraceComponent_OutHit) == 0x000174, "Member 'Firetank_C_AriralShoot::CallFunc_K2_LineTraceComponent_OutHit' has a wrong offset!");
static_assert(offsetof(Firetank_C_AriralShoot, CallFunc_K2_LineTraceComponent_ReturnValue) == 0x0001FC, "Member 'Firetank_C_AriralShoot::CallFunc_K2_LineTraceComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_AriralShoot, CallFunc_Conv_VectorToRotator_ReturnValue_1) == 0x000200, "Member 'Firetank_C_AriralShoot::CallFunc_Conv_VectorToRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_AriralShoot, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00020C, "Member 'Firetank_C_AriralShoot::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_AriralShoot, CallFunc_SpawnEmitterAtLocation_ReturnValue_1) == 0x000210, "Member 'Firetank_C_AriralShoot::CallFunc_SpawnEmitterAtLocation_ReturnValue_1' has a wrong offset!");

// Function firetank.firetank_C.skipRadial
// 0x0001 (0x0001 - 0x0000)
struct Firetank_C_SkipRadial final
{
public:
	bool                                          Skip;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Firetank_C_SkipRadial) == 0x000001, "Wrong alignment on Firetank_C_SkipRadial");
static_assert(sizeof(Firetank_C_SkipRadial) == 0x000001, "Wrong size on Firetank_C_SkipRadial");
static_assert(offsetof(Firetank_C_SkipRadial, Skip) == 0x000000, "Member 'Firetank_C_SkipRadial::Skip' has a wrong offset!");

// Function firetank.firetank_C.gascanFuel
// 0x0010 (0x0010 - 0x0000)
struct Firetank_C_GascanFuel final
{
public:
	class AProp_gascan_C*                         Gascan;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Fueled;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Firetank_C_GascanFuel) == 0x000008, "Wrong alignment on Firetank_C_GascanFuel");
static_assert(sizeof(Firetank_C_GascanFuel) == 0x000010, "Wrong size on Firetank_C_GascanFuel");
static_assert(offsetof(Firetank_C_GascanFuel, Gascan) == 0x000000, "Member 'Firetank_C_GascanFuel::Gascan' has a wrong offset!");
static_assert(offsetof(Firetank_C_GascanFuel, Fueled) == 0x000008, "Member 'Firetank_C_GascanFuel::Fueled' has a wrong offset!");

// Function firetank.firetank_C.getActionOptions
// 0x0050 (0x0050 - 0x0000)
struct Firetank_C_GetActionOptions final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Options;                                           // 0x0018(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               Options_enum;                                      // 0x0028(0x0010)(Parm, OutParm)
	TArray<class FText>                           OptionsNamesOverlay;                               // 0x0038(0x0010)(Parm, OutParm)
	uint8                                         Number;                                            // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_GetActionOptions) == 0x000008, "Wrong alignment on Firetank_C_GetActionOptions");
static_assert(sizeof(Firetank_C_GetActionOptions) == 0x000050, "Wrong size on Firetank_C_GetActionOptions");
static_assert(offsetof(Firetank_C_GetActionOptions, Player) == 0x000000, "Member 'Firetank_C_GetActionOptions::Player' has a wrong offset!");
static_assert(offsetof(Firetank_C_GetActionOptions, Component) == 0x000008, "Member 'Firetank_C_GetActionOptions::Component' has a wrong offset!");
static_assert(offsetof(Firetank_C_GetActionOptions, Actor) == 0x000010, "Member 'Firetank_C_GetActionOptions::Actor' has a wrong offset!");
static_assert(offsetof(Firetank_C_GetActionOptions, Options) == 0x000018, "Member 'Firetank_C_GetActionOptions::Options' has a wrong offset!");
static_assert(offsetof(Firetank_C_GetActionOptions, Options_enum) == 0x000028, "Member 'Firetank_C_GetActionOptions::Options_enum' has a wrong offset!");
static_assert(offsetof(Firetank_C_GetActionOptions, OptionsNamesOverlay) == 0x000038, "Member 'Firetank_C_GetActionOptions::OptionsNamesOverlay' has a wrong offset!");
static_assert(offsetof(Firetank_C_GetActionOptions, Number) == 0x000048, "Member 'Firetank_C_GetActionOptions::Number' has a wrong offset!");

// Function firetank.firetank_C.setPath
// 0x0018 (0x0018 - 0x0000)
struct Firetank_C_SetPath final
{
public:
	TArray<struct FVector>                        Path;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Return;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Firetank_C_SetPath) == 0x000008, "Wrong alignment on Firetank_C_SetPath");
static_assert(sizeof(Firetank_C_SetPath) == 0x000018, "Wrong size on Firetank_C_SetPath");
static_assert(offsetof(Firetank_C_SetPath, Path) == 0x000000, "Member 'Firetank_C_SetPath::Path' has a wrong offset!");
static_assert(offsetof(Firetank_C_SetPath, Return) == 0x000010, "Member 'Firetank_C_SetPath::Return' has a wrong offset!");

// Function firetank.firetank_C.getOnlyKey
// 0x0010 (0x0010 - 0x0000)
struct Firetank_C_GetOnlyKey final
{
public:
	class FString                                 Key_0;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_GetOnlyKey) == 0x000008, "Wrong alignment on Firetank_C_GetOnlyKey");
static_assert(sizeof(Firetank_C_GetOnlyKey) == 0x000010, "Wrong size on Firetank_C_GetOnlyKey");
static_assert(offsetof(Firetank_C_GetOnlyKey, Key_0) == 0x000000, "Member 'Firetank_C_GetOnlyKey::Key_0' has a wrong offset!");

// Function firetank.firetank_C.processKeys
// 0x0001 (0x0001 - 0x0000)
struct Firetank_C_ProcessKeys final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Firetank_C_ProcessKeys) == 0x000001, "Wrong alignment on Firetank_C_ProcessKeys");
static_assert(sizeof(Firetank_C_ProcessKeys) == 0x000001, "Wrong size on Firetank_C_ProcessKeys");
static_assert(offsetof(Firetank_C_ProcessKeys, Return) == 0x000000, "Member 'Firetank_C_ProcessKeys::Return' has a wrong offset!");

// Function firetank.firetank_C.canBeUsedHold
// 0x0001 (0x0001 - 0x0000)
struct Firetank_C_CanBeUsedHold final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Firetank_C_CanBeUsedHold) == 0x000001, "Wrong alignment on Firetank_C_CanBeUsedHold");
static_assert(sizeof(Firetank_C_CanBeUsedHold) == 0x000001, "Wrong size on Firetank_C_CanBeUsedHold");
static_assert(offsetof(Firetank_C_CanBeUsedHold, Return) == 0x000000, "Member 'Firetank_C_CanBeUsedHold::Return' has a wrong offset!");

// Function firetank.firetank_C.GetKey
// 0x0028 (0x0028 - 0x0000)
struct Firetank_C_GetKey final
{
public:
	class FString                                 Key_0;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	const class AActor*                           Temp_object_Variable;                              // 0x0010(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_generateKey_keyOut;                       // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_GetKey) == 0x000008, "Wrong alignment on Firetank_C_GetKey");
static_assert(sizeof(Firetank_C_GetKey) == 0x000028, "Wrong size on Firetank_C_GetKey");
static_assert(offsetof(Firetank_C_GetKey, Key_0) == 0x000000, "Member 'Firetank_C_GetKey::Key_0' has a wrong offset!");
static_assert(offsetof(Firetank_C_GetKey, Temp_object_Variable) == 0x000010, "Member 'Firetank_C_GetKey::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Firetank_C_GetKey, CallFunc_generateKey_keyOut) == 0x000018, "Member 'Firetank_C_GetKey::CallFunc_generateKey_keyOut' has a wrong offset!");

// Function firetank.firetank_C.toolboxFix
// 0x0010 (0x0010 - 0x0000)
struct Firetank_C_ToolboxFix final
{
public:
	class AProp_toolbox_C*                        Toolbox;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Firetank_C_ToolboxFix) == 0x000008, "Wrong alignment on Firetank_C_ToolboxFix");
static_assert(sizeof(Firetank_C_ToolboxFix) == 0x000010, "Wrong size on Firetank_C_ToolboxFix");
static_assert(offsetof(Firetank_C_ToolboxFix, Toolbox) == 0x000000, "Member 'Firetank_C_ToolboxFix::Toolbox' has a wrong offset!");
static_assert(offsetof(Firetank_C_ToolboxFix, Return) == 0x000008, "Member 'Firetank_C_ToolboxFix::Return' has a wrong offset!");

// Function firetank.firetank_C.getPriceMultiplier
// 0x0004 (0x0004 - 0x0000)
struct Firetank_C_GetPriceMultiplier final
{
public:
	float                                         PriceMult;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_GetPriceMultiplier) == 0x000004, "Wrong alignment on Firetank_C_GetPriceMultiplier");
static_assert(sizeof(Firetank_C_GetPriceMultiplier) == 0x000004, "Wrong size on Firetank_C_GetPriceMultiplier");
static_assert(offsetof(Firetank_C_GetPriceMultiplier, PriceMult) == 0x000000, "Member 'Firetank_C_GetPriceMultiplier::PriceMult' has a wrong offset!");

// Function firetank.firetank_C.landedOn
// 0x0010 (0x0010 - 0x0000)
struct Firetank_C_LandedOn final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreFallDamage;                                  // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Firetank_C_LandedOn) == 0x000008, "Wrong alignment on Firetank_C_LandedOn");
static_assert(sizeof(Firetank_C_LandedOn) == 0x000010, "Wrong size on Firetank_C_LandedOn");
static_assert(offsetof(Firetank_C_LandedOn, Player) == 0x000000, "Member 'Firetank_C_LandedOn::Player' has a wrong offset!");
static_assert(offsetof(Firetank_C_LandedOn, IgnoreFallDamage) == 0x000008, "Member 'Firetank_C_LandedOn::IgnoreFallDamage' has a wrong offset!");

// Function firetank.firetank_C.canBePutInContainer
// 0x0001 (0x0001 - 0x0000)
struct Firetank_C_CanBePutInContainer final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Firetank_C_CanBePutInContainer) == 0x000001, "Wrong alignment on Firetank_C_CanBePutInContainer");
static_assert(sizeof(Firetank_C_CanBePutInContainer) == 0x000001, "Wrong size on Firetank_C_CanBePutInContainer");
static_assert(offsetof(Firetank_C_CanBePutInContainer, Return) == 0x000000, "Member 'Firetank_C_CanBePutInContainer::Return' has a wrong offset!");

// Function firetank.firetank_C.asProp
// 0x0008 (0x0008 - 0x0000)
struct Firetank_C_AsProp final
{
public:
	class AProp_C*                                Return;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_AsProp) == 0x000008, "Wrong alignment on Firetank_C_AsProp");
static_assert(sizeof(Firetank_C_AsProp) == 0x000008, "Wrong size on Firetank_C_AsProp");
static_assert(offsetof(Firetank_C_AsProp, Return) == 0x000000, "Member 'Firetank_C_AsProp::Return' has a wrong offset!");

// Function firetank.firetank_C.canPickup
// 0x0001 (0x0001 - 0x0000)
struct Firetank_C_CanPickup final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Firetank_C_CanPickup) == 0x000001, "Wrong alignment on Firetank_C_CanPickup");
static_assert(sizeof(Firetank_C_CanPickup) == 0x000001, "Wrong size on Firetank_C_CanPickup");
static_assert(offsetof(Firetank_C_CanPickup, Return) == 0x000000, "Member 'Firetank_C_CanPickup::Return' has a wrong offset!");

// Function firetank.firetank_C.noRespawn
// 0x0002 (0x0002 - 0x0000)
struct Firetank_C_NoRespawn final
{
public:
	bool                                          NoRespawn_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Return;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Firetank_C_NoRespawn) == 0x000001, "Wrong alignment on Firetank_C_NoRespawn");
static_assert(sizeof(Firetank_C_NoRespawn) == 0x000002, "Wrong size on Firetank_C_NoRespawn");
static_assert(offsetof(Firetank_C_NoRespawn, NoRespawn_0) == 0x000000, "Member 'Firetank_C_NoRespawn::NoRespawn_0' has a wrong offset!");
static_assert(offsetof(Firetank_C_NoRespawn, Return) == 0x000001, "Member 'Firetank_C_NoRespawn::Return' has a wrong offset!");

// Function firetank.firetank_C.lookAt
// 0x00B8 (0x00B8 - 0x0000)
struct Firetank_C_LookAt final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Return;                                            // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Text;                                              // 0x0098(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    boundObjectReplace;                                // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Number;                                            // 0x00B0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_LookAt) == 0x000008, "Wrong alignment on Firetank_C_LookAt");
static_assert(sizeof(Firetank_C_LookAt) == 0x0000B8, "Wrong size on Firetank_C_LookAt");
static_assert(offsetof(Firetank_C_LookAt, Player) == 0x000000, "Member 'Firetank_C_LookAt::Player' has a wrong offset!");
static_assert(offsetof(Firetank_C_LookAt, Hit) == 0x000008, "Member 'Firetank_C_LookAt::Hit' has a wrong offset!");
static_assert(offsetof(Firetank_C_LookAt, Return) == 0x000090, "Member 'Firetank_C_LookAt::Return' has a wrong offset!");
static_assert(offsetof(Firetank_C_LookAt, Text) == 0x000098, "Member 'Firetank_C_LookAt::Text' has a wrong offset!");
static_assert(offsetof(Firetank_C_LookAt, boundObjectReplace) == 0x0000A8, "Member 'Firetank_C_LookAt::boundObjectReplace' has a wrong offset!");
static_assert(offsetof(Firetank_C_LookAt, Number) == 0x0000B0, "Member 'Firetank_C_LookAt::Number' has a wrong offset!");

// Function firetank.firetank_C.isButtonUsed
// 0x0001 (0x0001 - 0x0000)
struct Firetank_C_IsButtonUsed final
{
public:
	bool                                          Failed;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Firetank_C_IsButtonUsed) == 0x000001, "Wrong alignment on Firetank_C_IsButtonUsed");
static_assert(sizeof(Firetank_C_IsButtonUsed) == 0x000001, "Wrong size on Firetank_C_IsButtonUsed");
static_assert(offsetof(Firetank_C_IsButtonUsed, Failed) == 0x000000, "Member 'Firetank_C_IsButtonUsed::Failed' has a wrong offset!");

// Function firetank.firetank_C.gatherDataFromKey
// 0x0001 (0x0001 - 0x0000)
struct Firetank_C_GatherDataFromKey final
{
public:
	bool                                          Gather;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Firetank_C_GatherDataFromKey) == 0x000001, "Wrong alignment on Firetank_C_GatherDataFromKey");
static_assert(sizeof(Firetank_C_GatherDataFromKey) == 0x000001, "Wrong size on Firetank_C_GatherDataFromKey");
static_assert(offsetof(Firetank_C_GatherDataFromKey, Gather) == 0x000000, "Member 'Firetank_C_GatherDataFromKey::Gather' has a wrong offset!");

// Function firetank.firetank_C.skipPreDelete
// 0x0001 (0x0001 - 0x0000)
struct Firetank_C_SkipPreDelete final
{
public:
	bool                                          Skip;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Firetank_C_SkipPreDelete) == 0x000001, "Wrong alignment on Firetank_C_SkipPreDelete");
static_assert(sizeof(Firetank_C_SkipPreDelete) == 0x000001, "Wrong size on Firetank_C_SkipPreDelete");
static_assert(offsetof(Firetank_C_SkipPreDelete, Skip) == 0x000000, "Member 'Firetank_C_SkipPreDelete::Skip' has a wrong offset!");

// Function firetank.firetank_C.ignoreSave
// 0x0001 (0x0001 - 0x0000)
struct Firetank_C_IgnoreSave final
{
public:
	bool                                          IgnoreSave_0;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Firetank_C_IgnoreSave) == 0x000001, "Wrong alignment on Firetank_C_IgnoreSave");
static_assert(sizeof(Firetank_C_IgnoreSave) == 0x000001, "Wrong size on Firetank_C_IgnoreSave");
static_assert(offsetof(Firetank_C_IgnoreSave, IgnoreSave_0) == 0x000000, "Member 'Firetank_C_IgnoreSave::IgnoreSave_0' has a wrong offset!");

// Function firetank.firetank_C.loadData
// 0x0100 (0x0100 - 0x0000)
struct Firetank_C_LoadData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mFloat                         CallFunc_Array_Get_Item;                           // 0x00C8(0x0010)(HasGetValueTypeHash)
	struct FStruct_mBool                          CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0010)(HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_2;                         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_3;                         // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Array_Get_Item_4;                         // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_LoadData) == 0x000010, "Wrong alignment on Firetank_C_LoadData");
static_assert(sizeof(Firetank_C_LoadData) == 0x000100, "Wrong size on Firetank_C_LoadData");
static_assert(offsetof(Firetank_C_LoadData, Data) == 0x000000, "Member 'Firetank_C_LoadData::Data' has a wrong offset!");
static_assert(offsetof(Firetank_C_LoadData, Return) == 0x0000C0, "Member 'Firetank_C_LoadData::Return' has a wrong offset!");
static_assert(offsetof(Firetank_C_LoadData, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'Firetank_C_LoadData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Firetank_C_LoadData, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'Firetank_C_LoadData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_LoadData, CallFunc_Array_Get_Item_2) == 0x0000E8, "Member 'Firetank_C_LoadData::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_LoadData, CallFunc_Array_Get_Item_3) == 0x0000EC, "Member 'Firetank_C_LoadData::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_LoadData, CallFunc_Array_Get_Item_4) == 0x0000F0, "Member 'Firetank_C_LoadData::CallFunc_Array_Get_Item_4' has a wrong offset!");

// Function firetank.firetank_C.getData
// 0x0220 (0x0220 - 0x0000)
struct Firetank_C_GetData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(Parm, OutParm, HasGetValueTypeHash)
	TArray<bool>                                  K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm)
	struct FStruct_mBool                          K2Node_MakeStruct_struct_mBool;                    // 0x00D0(0x0010)(HasGetValueTypeHash)
	TArray<float>                                 K2Node_MakeArray_Array_1;                          // 0x00E0(0x0010)(ReferenceParm)
	TArray<struct FStruct_mBool>                  K2Node_MakeArray_Array_2;                          // 0x00F0(0x0010)(ReferenceParm)
	struct FStruct_mFloat                         K2Node_MakeStruct_struct_mFloat;                   // 0x0100(0x0010)(HasGetValueTypeHash)
	TArray<struct FStruct_mFloat>                 K2Node_MakeArray_Array_3;                          // 0x0110(0x0010)(ReferenceParm)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0120(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_158[0x8];                                      // 0x0158(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_save                           K2Node_MakeStruct_struct_save;                     // 0x0160(0x00C0)(HasGetValueTypeHash)
};
static_assert(alignof(Firetank_C_GetData) == 0x000010, "Wrong alignment on Firetank_C_GetData");
static_assert(sizeof(Firetank_C_GetData) == 0x000220, "Wrong size on Firetank_C_GetData");
static_assert(offsetof(Firetank_C_GetData, Data) == 0x000000, "Member 'Firetank_C_GetData::Data' has a wrong offset!");
static_assert(offsetof(Firetank_C_GetData, K2Node_MakeArray_Array) == 0x0000C0, "Member 'Firetank_C_GetData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Firetank_C_GetData, K2Node_MakeStruct_struct_mBool) == 0x0000D0, "Member 'Firetank_C_GetData::K2Node_MakeStruct_struct_mBool' has a wrong offset!");
static_assert(offsetof(Firetank_C_GetData, K2Node_MakeArray_Array_1) == 0x0000E0, "Member 'Firetank_C_GetData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Firetank_C_GetData, K2Node_MakeArray_Array_2) == 0x0000F0, "Member 'Firetank_C_GetData::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(Firetank_C_GetData, K2Node_MakeStruct_struct_mFloat) == 0x000100, "Member 'Firetank_C_GetData::K2Node_MakeStruct_struct_mFloat' has a wrong offset!");
static_assert(offsetof(Firetank_C_GetData, K2Node_MakeArray_Array_3) == 0x000110, "Member 'Firetank_C_GetData::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(Firetank_C_GetData, CallFunc_GetTransform_ReturnValue) == 0x000120, "Member 'Firetank_C_GetData::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_GetData, CallFunc_GetObjectClass_ReturnValue) == 0x000150, "Member 'Firetank_C_GetData::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firetank_C_GetData, K2Node_MakeStruct_struct_save) == 0x000160, "Member 'Firetank_C_GetData::K2Node_MakeStruct_struct_save' has a wrong offset!");

}

