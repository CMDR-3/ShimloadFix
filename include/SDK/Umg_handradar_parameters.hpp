#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Umg_handradar

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function umg_handradar.umg_handradar_C.ExecuteUbergraph_umg_handradar
// 0x0410 (0x0410 - 0x0000)
struct Umg_handradar_C_ExecuteUbergraph_umg_handradar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x000C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0060(0x0018)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0080(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00A0(0x0010)(ConstParm, ReferenceParm)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUmg_radarPoint_C*                      CallFunc_Create_ReturnValue;                       // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue_1;         // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_2;              // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_3;              // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0180(0x0018)()
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      CallFunc_obj_static_obj;                           // 0x01B0(0x0010)(ReferenceParm)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x01C4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_1;           // 0x0250(0x0018)()
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26A[0x2];                                      // 0x026A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x028C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x02F0(0x0018)()
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_2;           // 0x0310(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_3;           // 0x0328(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0340(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_4;           // 0x0358(0x0018)()
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0384(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391[0x3];                                      // 0x0391(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x0394(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_LowEntry_LocalVariable_Value__Object;       // 0x03A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqualExactly_VectorVector_ReturnValue; // 0x03B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B2[0x2];                                      // 0x03B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Vector_Distance_ReturnValue_1;            // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x03B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue_1;                   // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x03DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DD[0x3];                                      // 0x03DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x03E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue_2;         // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x03FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FD[0x3];                                      // 0x03FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetRotated2D_ReturnValue;                 // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_handradar_C_ExecuteUbergraph_umg_handradar) == 0x000008, "Wrong alignment on Umg_handradar_C_ExecuteUbergraph_umg_handradar");
static_assert(sizeof(Umg_handradar_C_ExecuteUbergraph_umg_handradar) == 0x000410, "Wrong size on Umg_handradar_C_ExecuteUbergraph_umg_handradar");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, EntryPoint) == 0x000000, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::EntryPoint' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, Temp_int_Array_Index_Variable) == 0x000008, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, K2Node_Event_MyGeometry) == 0x00000C, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, K2Node_Event_InDeltaTime) == 0x000044, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000048, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000050, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x000054, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, Temp_text_Variable) == 0x000060, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, Temp_bool_Variable) == 0x00007C, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, Temp_text_Variable_1) == 0x000080, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, Temp_bool_Variable_1) == 0x000098, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, Temp_object_Variable) == 0x0000A0, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_GetPlayerPawn_ReturnValue) == 0x0000B0, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B8, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000C4, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000C8, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Create_ReturnValue) == 0x0000D8, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Percent_FloatFloat_ReturnValue) == 0x0000E0, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x0000E8, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_AddChild_ReturnValue) == 0x0000F0, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x0000F8, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_GetActorForwardVector_ReturnValue) == 0x000100, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x00010C, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Normal_ReturnValue) == 0x000118, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakVector_X) == 0x000124, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakVector_Y) == 0x000128, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakVector_Z) == 0x00012C, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_DegAtan2_ReturnValue) == 0x000130, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Add_FloatFloat_ReturnValue) == 0x000134, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Percent_FloatFloat_ReturnValue_1) == 0x000138, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Percent_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00013C, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000140, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_GetPlayerPawn_ReturnValue_2) == 0x000148, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_GetPlayerPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000150, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Divide_VectorFloat_ReturnValue) == 0x00015C, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_GetPlayerPawn_ReturnValue_3) == 0x000168, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_GetPlayerPawn_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Vector_Distance_ReturnValue) == 0x000170, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000174, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Conv_FloatToText_ReturnValue) == 0x000180, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000198, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakVector_X_1) == 0x0001A4, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakVector_Y_1) == 0x0001A8, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakVector_Z_1) == 0x0001AC, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_obj_static_obj) == 0x0001B0, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_obj_static_obj' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0001C0, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0001C4, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x00024C, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Conv_FloatToText_ReturnValue_1) == 0x000250, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Conv_FloatToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_bBlockingHit) == 0x000268, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_bInitialOverlap) == 0x000269, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_Time) == 0x00026C, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_Distance) == 0x000270, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_Location) == 0x000274, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_ImpactPoint) == 0x000280, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_Normal) == 0x00028C, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_ImpactNormal) == 0x000298, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_PhysMat) == 0x0002A8, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_HitActor) == 0x0002B0, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_HitComponent) == 0x0002B8, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_HitBoneName) == 0x0002C0, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_HitItem) == 0x0002C8, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_ElementIndex) == 0x0002CC, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_FaceIndex) == 0x0002D0, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_TraceStart) == 0x0002D4, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_TraceEnd) == 0x0002E0, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, K2Node_Select_Default) == 0x0002F0, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000308, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Conv_FloatToText_ReturnValue_2) == 0x000310, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Conv_FloatToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Conv_FloatToText_ReturnValue_3) == 0x000328, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Conv_FloatToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, K2Node_Select_Default_1) == 0x000340, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Conv_FloatToText_ReturnValue_4) == 0x000358, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Conv_FloatToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000370, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Array_Get_Item) == 0x000378, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Array_Add_ReturnValue) == 0x000380, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000384, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Array_Contains_ReturnValue) == 0x000390, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x000394, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, K2Node_LowEntry_LocalVariable_Value__Object) == 0x0003A0, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::K2Node_LowEntry_LocalVariable_Value__Object' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Array_Length_ReturnValue) == 0x0003AC, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Less_IntInt_ReturnValue) == 0x0003B0, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_NotEqualExactly_VectorVector_ReturnValue) == 0x0003B1, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_NotEqualExactly_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Vector_Distance_ReturnValue_1) == 0x0003B4, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0003B8, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0003C4, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakVector_X_2) == 0x0003C8, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakVector_Y_2) == 0x0003CC, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakVector_Z_2) == 0x0003D0, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0003D4, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_DegAtan2_ReturnValue_1) == 0x0003D8, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_DegAtan2_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Less_FloatFloat_ReturnValue) == 0x0003DC, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0003E0, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_MakeVector2D_ReturnValue) == 0x0003E4, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0003EC, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Percent_FloatFloat_ReturnValue_2) == 0x0003F0, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Percent_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x0003F4, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0003F8, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0003FC, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_GetRotated2D_ReturnValue) == 0x000400, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_GetRotated2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BooleanAND_ReturnValue) == 0x000408, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BooleanAND_ReturnValue_1) == 0x000409, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function umg_handradar.umg_handradar_C.Tick
// 0x003C (0x003C - 0x0000)
struct Umg_handradar_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_handradar_C_Tick) == 0x000004, "Wrong alignment on Umg_handradar_C_Tick");
static_assert(sizeof(Umg_handradar_C_Tick) == 0x00003C, "Wrong size on Umg_handradar_C_Tick");
static_assert(offsetof(Umg_handradar_C_Tick, MyGeometry) == 0x000000, "Member 'Umg_handradar_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_Tick, InDeltaTime) == 0x000038, "Member 'Umg_handradar_C_Tick::InDeltaTime' has a wrong offset!");

}

