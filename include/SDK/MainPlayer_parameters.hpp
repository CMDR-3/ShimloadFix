#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MainPlayer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Struct_equipment_structs.hpp"
#include "Enum_interactionActions_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Struct_save_structs.hpp"
#include "InputCore_structs.hpp"
#include "Struct_mInt_structs.hpp"
#include "Struct_physSound_structs.hpp"
#include "Struct_prop3_structs.hpp"
#include "Struct_mString_structs.hpp"
#include "Struct_weapon_structs.hpp"
#include "Struct_propDynamic_structs.hpp"
#include "Enum_foodType_structs.hpp"
#include "Struct_settings_structs.hpp"
#include "Enum_difficulty_structs.hpp"


namespace SDK::Params
{

// Function mainPlayer.mainPlayer_C.flashlightStateChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_FlashlightStateChanged__DelegateSignature final
{
public:
	class USpotLightComponent*                    Light;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_FlashlightStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on MainPlayer_C_FlashlightStateChanged__DelegateSignature");
static_assert(sizeof(MainPlayer_C_FlashlightStateChanged__DelegateSignature) == 0x000010, "Wrong size on MainPlayer_C_FlashlightStateChanged__DelegateSignature");
static_assert(offsetof(MainPlayer_C_FlashlightStateChanged__DelegateSignature, Light) == 0x000000, "Member 'MainPlayer_C_FlashlightStateChanged__DelegateSignature::Light' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FlashlightStateChanged__DelegateSignature, Visible) == 0x000008, "Member 'MainPlayer_C_FlashlightStateChanged__DelegateSignature::Visible' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.used_E__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_Used_E__DelegateSignature final
{
public:
	bool                                          Pressed;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Used_E__DelegateSignature) == 0x000001, "Wrong alignment on MainPlayer_C_Used_E__DelegateSignature");
static_assert(sizeof(MainPlayer_C_Used_E__DelegateSignature) == 0x000001, "Wrong size on MainPlayer_C_Used_E__DelegateSignature");
static_assert(offsetof(MainPlayer_C_Used_E__DelegateSignature, Pressed) == 0x000000, "Member 'MainPlayer_C_Used_E__DelegateSignature::Pressed' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.mouse_xy__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_Mouse_xy__DelegateSignature final
{
public:
	struct FVector2D                              MouseXY;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_Mouse_xy__DelegateSignature) == 0x000004, "Wrong alignment on MainPlayer_C_Mouse_xy__DelegateSignature");
static_assert(sizeof(MainPlayer_C_Mouse_xy__DelegateSignature) == 0x000008, "Wrong size on MainPlayer_C_Mouse_xy__DelegateSignature");
static_assert(offsetof(MainPlayer_C_Mouse_xy__DelegateSignature, MouseXY) == 0x000000, "Member 'MainPlayer_C_Mouse_xy__DelegateSignature::MouseXY' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.shift__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_Shift__DelegateSignature final
{
public:
	bool                                          Pressed;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Shift__DelegateSignature) == 0x000001, "Wrong alignment on MainPlayer_C_Shift__DelegateSignature");
static_assert(sizeof(MainPlayer_C_Shift__DelegateSignature) == 0x000001, "Wrong size on MainPlayer_C_Shift__DelegateSignature");
static_assert(offsetof(MainPlayer_C_Shift__DelegateSignature, Pressed) == 0x000000, "Member 'MainPlayer_C_Shift__DelegateSignature::Pressed' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.used_alt__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_Used_alt__DelegateSignature final
{
public:
	bool                                          Pressed;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Used_alt__DelegateSignature) == 0x000001, "Wrong alignment on MainPlayer_C_Used_alt__DelegateSignature");
static_assert(sizeof(MainPlayer_C_Used_alt__DelegateSignature) == 0x000001, "Wrong size on MainPlayer_C_Used_alt__DelegateSignature");
static_assert(offsetof(MainPlayer_C_Used_alt__DelegateSignature, Pressed) == 0x000000, "Member 'MainPlayer_C_Used_alt__DelegateSignature::Pressed' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.montageNotify__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_MontageNotify__DelegateSignature final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_MontageNotify__DelegateSignature) == 0x000004, "Wrong alignment on MainPlayer_C_MontageNotify__DelegateSignature");
static_assert(sizeof(MainPlayer_C_MontageNotify__DelegateSignature) == 0x000008, "Wrong size on MainPlayer_C_MontageNotify__DelegateSignature");
static_assert(offsetof(MainPlayer_C_MontageNotify__DelegateSignature, Name_0) == 0x000000, "Member 'MainPlayer_C_MontageNotify__DelegateSignature::Name_0' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.space__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_Space__DelegateSignature final
{
public:
	bool                                          Pressed;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Space__DelegateSignature) == 0x000001, "Wrong alignment on MainPlayer_C_Space__DelegateSignature");
static_assert(sizeof(MainPlayer_C_Space__DelegateSignature) == 0x000001, "Wrong size on MainPlayer_C_Space__DelegateSignature");
static_assert(offsetof(MainPlayer_C_Space__DelegateSignature, Pressed) == 0x000000, "Member 'MainPlayer_C_Space__DelegateSignature::Pressed' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.used_R__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_Used_R__DelegateSignature final
{
public:
	bool                                          Pressed;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Used_R__DelegateSignature) == 0x000001, "Wrong alignment on MainPlayer_C_Used_R__DelegateSignature");
static_assert(sizeof(MainPlayer_C_Used_R__DelegateSignature) == 0x000001, "Wrong size on MainPlayer_C_Used_R__DelegateSignature");
static_assert(offsetof(MainPlayer_C_Used_R__DelegateSignature, Pressed) == 0x000000, "Member 'MainPlayer_C_Used_R__DelegateSignature::Pressed' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.used_RMB__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_Used_RMB__DelegateSignature final
{
public:
	bool                                          Pressed;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Used_RMB__DelegateSignature) == 0x000001, "Wrong alignment on MainPlayer_C_Used_RMB__DelegateSignature");
static_assert(sizeof(MainPlayer_C_Used_RMB__DelegateSignature) == 0x000001, "Wrong size on MainPlayer_C_Used_RMB__DelegateSignature");
static_assert(offsetof(MainPlayer_C_Used_RMB__DelegateSignature, Pressed) == 0x000000, "Member 'MainPlayer_C_Used_RMB__DelegateSignature::Pressed' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.anyKeyEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct MainPlayer_C_AnyKeyEvent__DelegateSignature final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Pressed;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_AnyKeyEvent__DelegateSignature) == 0x000008, "Wrong alignment on MainPlayer_C_AnyKeyEvent__DelegateSignature");
static_assert(sizeof(MainPlayer_C_AnyKeyEvent__DelegateSignature) == 0x000020, "Wrong size on MainPlayer_C_AnyKeyEvent__DelegateSignature");
static_assert(offsetof(MainPlayer_C_AnyKeyEvent__DelegateSignature, Key) == 0x000000, "Member 'MainPlayer_C_AnyKeyEvent__DelegateSignature::Key' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AnyKeyEvent__DelegateSignature, Pressed) == 0x000018, "Member 'MainPlayer_C_AnyKeyEvent__DelegateSignature::Pressed' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.ExecuteUbergraph_mainPlayer
// 0x5B00 (0x5B00 - 0x0000)
struct MainPlayer_C_ExecuteUbergraph_mainPlayer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable;                              // 0x0008(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_10;                    // 0x0020(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_4;                        // 0x0038(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_3;                        // 0x0050(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_1;                            // 0x0068(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x0080(0x0018)(HasGetValueTypeHash)
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x0098(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x00C8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_2;                            // 0x00E0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_9;                     // 0x00F8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_8;                     // 0x0110(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_7;                     // 0x0128(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_6;                     // 0x0140(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_3;                            // 0x0158(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0170(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_5;                     // 0x0188(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_4;                     // 0x01A0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_4;                            // 0x01B8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_3;                     // 0x01D0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x01E8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_5;                            // 0x0200(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0218(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0230(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_6;                            // 0x0248(0x0018)(HasGetValueTypeHash)
	float                                         K2Node_InputAxisKeyEvent_AxisValue;                // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0265(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_266[0x2];                                      // 0x0266(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot;                     // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0270(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_11;                    // 0x0290(0x0018)(HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x02A8(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x02C0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D2[0x2];                                      // 0x02D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x02D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DD[0x3];                                      // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_12;                    // 0x02E0(0x0018)(HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x02F8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_ReleaseKey_ReturnValue;                   // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PressKey_ReturnValue;                     // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A[0x6];                                      // 0x030A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UblackScreen_C*                         CallFunc_Create_ReturnValue;                       // 0x0310(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player;                   // 0x0320(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x3];                                      // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0334(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_C*                                CallFunc_asProp_return;                            // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1;                   // 0x0350(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ignoreSave_ignoreSave;                    // 0x0361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0362(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_putObjectInventory2_return;               // 0x0363(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365[0x3];                                      // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_372[0x6];                                      // 0x0372(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_C*                                K2Node_DynamicCast_AsProp;                         // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_381[0x3];                                      // 0x0381(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0384(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394[0x4];                                      // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_LowEntry_LocalVariable_Value__Object;       // 0x0398(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1[0x3];                                      // 0x03A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x03AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AB[0x1];                                      // 0x03AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x03AC(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_1;                              // 0x03BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x03C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x03C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x03C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C7[0x1];                                      // 0x03C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x03D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x03DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x03E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x03F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0410(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x042C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0438(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_444[0x4];                                      // 0x0444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0448(0x0010)(ConstParm, ReferenceParm)
	class FName                                   Temp_name_Variable_2;                              // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_7;                            // 0x0460(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0479(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47A[0x2];                                      // 0x047A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0484(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0490(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x049C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x04A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B4[0x4];                                      // 0x04B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x04C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x04E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x04F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC[0x4];                                      // 0x04FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_13;                    // 0x0500(0x0018)(HasGetValueTypeHash)
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects;                  // 0x0518(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0529(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52A[0x6];                                      // 0x052A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_MontageToPlay_2;                // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_StartingSection_1;              // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_call;                           // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_551[0x3];                                      // 0x0551(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_name;                           // 0x0554(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55C[0x4];                                      // 0x055C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_MontageToPlay_1;                // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_reload;                         // 0x0568(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x056C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56D[0x3];                                      // 0x056D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1; // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_attack_hit;                               // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_579[0x3];                                      // 0x0579(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_attack_OutputPin;                         // 0x057C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_604[0x4];                                      // 0x0604(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_attack_ReturnValue;                       // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_611[0x7];                                      // 0x0611(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsNail;                    // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x0621(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x0622(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_623[0x1];                                      // 0x0623(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x0624(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x062C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x0638(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x0644(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x0650(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65C[0x4];                                      // 0x065C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x0670(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x0680(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x0684(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x0688(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x068C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x0698(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x06A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_1;                 // 0x06B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x06C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x06C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C2[0x6];                                      // 0x06C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_14;                    // 0x06C8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x06E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E1[0x7];                                      // 0x06E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_2;                 // 0x06E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x06F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F9[0x7];                                      // 0x06F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0700(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_731[0x7];                                      // 0x0731(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects_1;                // 0x0738(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0748(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_749[0x7];                                      // 0x0749(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0750(0x0010)(ConstParm, ReferenceParm)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0760(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_761[0x7];                                      // 0x0761(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects_2;                // 0x0768(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_779[0x3];                                      // 0x0779(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x077C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0788(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0810(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_811[0x7];                                      // 0x0811(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0818(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x0820(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0828(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0829(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x082A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x082B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x082C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_831[0x3];                                      // 0x0831(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut;         // 0x0834(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0838(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0839(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x083A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x083B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_83C[0x4];                                      // 0x083C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable_8;                            // 0x0840(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_tryGetNail_success;                       // 0x0858(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_859[0x7];                                      // 0x0859(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_tryGetNail_nailClass;                     // 0x0860(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0868(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_874[0x4];                                      // 0x0874(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_15;                    // 0x0878(0x0018)(HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0890(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x08C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot_1;                   // 0x08C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ANail_C*                                CallFunc_FinishSpawningActor_ReturnValue;          // 0x08D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_nailNail_fail;                            // 0x08D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D9[0x7];                                      // 0x08D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_equipment                      CallFunc_Array_Get_Item;                           // 0x08E0(0x0100)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_16;                    // 0x09E0(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x09F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x09F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9FA[0x2];                                      // 0x09FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Ease_ReturnValue;                         // 0x09FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x0A00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A01[0x3];                                      // 0x0A01(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Ease_ReturnValue_1;                       // 0x0A04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_2;              // 0x0A08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A09[0x3];                                      // 0x0A09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0A0C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0A18(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0A24(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0A30(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0A3C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0A48(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0A54(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0A60(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0A6C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0A78(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A84[0x4];                                      // 0x0A84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2; // 0x0A88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0A90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A91[0x7];                                      // 0x0A91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3; // 0x0A98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x0AA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA1[0x3];                                      // 0x0AA1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_3;                              // 0x0AA4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0AAC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0AB4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_arm_start;                                // 0x0AC0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_arm_end;                                  // 0x0ACC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_arm_rotation;                             // 0x0AD8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AE4[0x4];                                      // 0x0AE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_54;                    // 0x0AE8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_55;                    // 0x0B00(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0B18(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0B24(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0B30(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B3C[0x4];                                      // 0x0B3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0B40(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0B70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0B71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B72[0x2];                                      // 0x0B72(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0B74(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_CustomEvent_damage;                         // 0x0BFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0C00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0C04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0C08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x0C0C(0x0010)(ZeroConstructor, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0C1C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_LowEntry_LocalVariable_Value__1_Object;     // 0x0C28(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_1;    // 0x0C34(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0C40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_LowEntry_LocalVariable_Value__2_Object;     // 0x0C48(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C54[0xC];                                      // 0x0C54(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0C60(0x0030)(IsPlainOldData, NoDestructor)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0C90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0C98(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0CA4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA5[0x3];                                      // 0x0CA5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0CA8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0D30(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0D3C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0D48(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x0D54(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D55[0x3];                                      // 0x0D55(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x0D58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0D60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_2;       // 0x0D68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D69[0x7];                                      // 0x0D69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x0D70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0D78(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0D84(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x0D90(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_passOut;                        // 0x0DC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DC1[0x7];                                      // 0x0DC1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0DC8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot_2;                   // 0x0DD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0DD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0DDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0DE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0DE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0DE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0DEC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DED[0x3];                                      // 0x0DED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0DF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UKerfurOmegaV1_Skeleton_AnimBlueprint_C* K2Node_DynamicCast_AsKerfur_Omega_V1_Skeleton_Anim_Blueprint; // 0x0DF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0E00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_3;       // 0x0E01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E02[0x6];                                      // 0x0E02(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0E08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue_1;         // 0x0E10(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot_3;                   // 0x0E18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0E20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0E24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_MakeArray_Array_1;                          // 0x0E28(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x0E38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E3C[0x4];                                      // 0x0E3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0E40(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue_1;       // 0x0E50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0E51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x0E52(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E53[0x5];                                      // 0x0E53(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0E58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x0E60(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0E70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot_4;                   // 0x0E78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0E80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0E81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E82[0x2];                                      // 0x0E82(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x0E84(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x0E90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x0E94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0E98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut_1;       // 0x0E9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0EA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0EA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_2;       // 0x0EA2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA3[0xD];                                      // 0x0EA3(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam;                // 0x0EB0(0x0080)(IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    K2Node_CustomEvent_HitComponent;                   // 0x0F30(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0F38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x0F40(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_NormalImpulse;                  // 0x0F48(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_Hit;                            // 0x0F54(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_processArmor_damage;                      // 0x0FDC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_3;            // 0x0FDD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_3;         // 0x0FDE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FDF[0x1];                                      // 0x0FDF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_3;                    // 0x0FE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_3;                // 0x0FE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_3;                // 0x0FE8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_3;             // 0x0FF4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_3;                  // 0x1000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_3;            // 0x100C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_3;                 // 0x1018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_3;                // 0x1020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_3;            // 0x1028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_3;             // 0x1030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_3;                 // 0x1038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_3;            // 0x103C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_3;               // 0x1040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_3;              // 0x1044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_3;                // 0x1050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_2;                      // 0x105C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x1060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x106C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x1070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_6;          // 0x107C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2; // 0x1080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x1084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x1088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x108C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_108D[0x3];                                     // 0x108D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x1090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109C[0x4];                                     // 0x109C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x10A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UKel_lmao_Skeleton_AnimBlueprint_C*     K2Node_DynamicCast_AsKel_Lmao_Skeleton_Anim_Blueprint; // 0x10A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x10B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10B1[0xF];                                     // 0x10B1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x10C0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x10F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x10FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x1100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x1104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x1108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1109[0x7];                                     // 0x1109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x1110(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_updEquip_return;                          // 0x1140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1141[0x7];                                     // 0x1141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_updEquip_rebug;                           // 0x1148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot_5;                   // 0x1158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x1160(0x0010)(ZeroConstructor, NoDestructor)
	class UGameInst_C*                            CallFunc_getMainGameInstance_AsGame_Inst;          // 0x1170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot_6;                   // 0x1178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_3;       // 0x1180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1181[0x3];                                     // 0x1181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x1184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x1190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_4;    // 0x1194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_5;    // 0x11A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x11AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x11B8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_6;    // 0x1240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_7;    // 0x124C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_3;                      // 0x1258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x125C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_4;       // 0x1268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x1269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x126A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_death;                          // 0x126B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x126C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x126D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_126E[0x2];                                     // 0x126E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x1270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x1274(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x127C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_127D[0x3];                                     // 0x127D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x1280(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x1290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x1298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x129C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x12A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x12A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12A5[0x3];                                     // 0x12A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_10;           // 0x12A8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x12B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12B9[0x7];                                     // 0x12B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_17;                    // 0x12C0(0x0018)(HasGetValueTypeHash)
	EMovementMode                                 Temp_byte_Variable_2;                              // 0x12D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x12D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_21;                   // 0x12DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_checkEquip_empty;                         // 0x12DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12DC[0x4];                                     // 0x12DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_equipment                      CallFunc_checkEquip_Output;                        // 0x12E0(0x0100)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x13E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_coms_C>           K2Node_DynamicCast_AsInt_Coms;                     // 0x13E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x13F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13F9[0x7];                                     // 0x13F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x1400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1_1;                 // 0x1408(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x1418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadData_return;                          // 0x1419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141A[0x6];                                     // 0x141A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_coms_C>           K2Node_DynamicCast_AsInt_Coms_1;                   // 0x1420(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x1430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMovementMode                                 Temp_byte_Variable_3;                              // 0x1431(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_22;                   // 0x1432(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_23;                   // 0x1433(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x1434(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1435[0x3];                                     // 0x1435(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_2;      // 0x1438(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x1444(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x1450(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_5;       // 0x145C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x1468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_2;           // 0x146C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue;                  // 0x1470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_1;                // 0x1474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x1478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x147C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x1480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue_1;                    // 0x1484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x1488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x148C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x1490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x1494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x1498(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14A4[0x4];                                     // 0x14A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_18;                    // 0x14A8(0x0018)(HasGetValueTypeHash)
	ECollisionChannel                             Temp_byte_Variable_4;                              // 0x14C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C1[0x3];                                     // 0x14C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue_1;                 // 0x14C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x14C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x14CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x14D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x14D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_9;        // 0x14D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_10;       // 0x14DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_11;       // 0x14E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_12;       // 0x14E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x14E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_13;       // 0x14EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x14F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_14;       // 0x14F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x14F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x1504(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x1510(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_AddRelativeRotation_SweepHitResult;    // 0x1598(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x1620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_15;       // 0x1624(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_3;                     // 0x1628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_4;                // 0x162C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_16;       // 0x1638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddWorldRotation_SweepHitResult;       // 0x163C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue;        // 0x16C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddWorldRotation_SweepHitResult_1;     // 0x16D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	ECollisionChannel                             Temp_byte_Variable_5;                              // 0x1758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1759[0x7];                                     // 0x1759(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_settings                       K2Node_Event_settings;                             // 0x1760(0x0100)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x1860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1861[0x3];                                     // 0x1861(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x1864(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x1868(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x186C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x1870(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x1874(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x1878(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x187C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_187D[0x3];                                     // 0x187D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x1880(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x1884(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1885[0x3];                                     // 0x1885(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           Temp_object_Variable_1;                            // 0x1888(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_24;                   // 0x1890(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_25;                   // 0x1891(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_26;                   // 0x1892(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_27;                   // 0x1893(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x1894(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_FClamp_ReturnValue_4;                     // 0x191C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut_2;       // 0x1920(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x1924(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_28;                   // 0x1928(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_29;                   // 0x1929(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_192A[0x6];                                     // 0x192A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UblackScreen_C*                         CallFunc_Create_ReturnValue_1;                     // 0x1930(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x1938(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x193C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_5;                     // 0x1940(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut_3;       // 0x1944(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_1;        // 0x1948(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194C[0x4];                                     // 0x194C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable_9;                            // 0x1950(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_7;          // 0x1968(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x196C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_3; // 0x1970(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_8;    // 0x1974(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_17;       // 0x1980(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x1984(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x1994(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_19;                    // 0x1998(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue_1;                // 0x19B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_4;                      // 0x19BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_8;          // 0x19C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x19C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x19C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue_1;                  // 0x19D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue;              // 0x19E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x19EC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_3;       // 0x1A74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_20;                    // 0x1A78(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_4;            // 0x1A90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_4;         // 0x1A91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A92[0x2];                                     // 0x1A92(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_4;                    // 0x1A94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_4;                // 0x1A98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_4;                // 0x1A9C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_4;             // 0x1AA8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_4;                  // 0x1AB4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_4;            // 0x1AC0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1ACC[0x4];                                     // 0x1ACC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_4;                 // 0x1AD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_4;                // 0x1AD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_4;            // 0x1AE0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_4;             // 0x1AE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_4;                 // 0x1AF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_4;            // 0x1AF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_4;               // 0x1AF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_4;              // 0x1AFC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_4;                // 0x1B08(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x1B14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_9;          // 0x1B18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x1B1C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x1B28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_2;  // 0x1B2C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_4; // 0x1BB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x1BB8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC4[0x4];                                     // 0x1BC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable_10;                           // 0x1BC8(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue_2;                  // 0x1BE0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_3;  // 0x1BEC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_processClimb_setClimb;                    // 0x1C74(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C75[0x3];                                     // 0x1C75(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_processClimb_OutputPin;                   // 0x1C78(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C84[0x4];                                     // 0x1C84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_21;                    // 0x1C88(0x0018)(HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x1CA0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x1CB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CB1[0x7];                                     // 0x1CB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_2;     // 0x1CB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_30;                   // 0x1CC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CC1[0x3];                                     // 0x1CC1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x1CC4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x1CD0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_9;    // 0x1CE0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAxisValue_ReturnValue;            // 0x1CEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAxisValue_ReturnValue_1;          // 0x1CF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x1CF4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_31;                   // 0x1CFC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x1CFD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x1CFE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CFF[0x1];                                     // 0x1CFF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInputAxisValue_ReturnValue_2;          // 0x1D00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x1D04(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D05[0x3];                                     // 0x1D05(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInputAxisValue_ReturnValue_3;          // 0x1D08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x1D0C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_10;   // 0x1D14(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_22;                    // 0x1D20(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_1;                // 0x1D38(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_6;       // 0x1D44(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      CallFunc_obj_static_obj;                           // 0x1D50(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x1D60(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D6C[0x4];                                     // 0x1D6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_actor_1;                              // 0x1D70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_damage_6;                             // 0x1D78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_8;                                // 0x1D7C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                K2Node_Event_impact_1;                             // 0x1E04(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_skipSetting;                          // 0x1E10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E11[0x3];                                     // 0x1E11(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x1E14(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x1E9C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x1E9D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x1E9E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x1E9F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x1EA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_32;                   // 0x1EA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x1EA2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EA3[0x1];                                     // 0x1EA3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_5;        // 0x1EA4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_4;       // 0x1EB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_5;       // 0x1EB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_10;         // 0x1EB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_2;        // 0x1EBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_6;                     // 0x1EC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWalking_ReturnValue;                    // 0x1EC4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EC5[0x3];                                     // 0x1EC5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USave_main_C*                           CallFunc_getMainSave_save_main;                    // 0x1EC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_6;        // 0x1ED0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue_1;            // 0x1EDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_7;        // 0x1EE0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_3;        // 0x1EEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_11;                           // 0x1EF0(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_18;       // 0x1F08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_5;                      // 0x1F0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue;                       // 0x1F10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_11;         // 0x1F14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_19;       // 0x1F18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x1F1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_23;                    // 0x1F20(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_20;       // 0x1F38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue_1;                     // 0x1F3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_21;       // 0x1F40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_22;       // 0x1F44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_5;                // 0x1F48(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_DegSin_ReturnValue_2;                     // 0x1F54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_23;       // 0x1F58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x1F5C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_24;       // 0x1FE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit)> K2Node_CreateDelegate_OutputDelegate_11;           // 0x1FE8(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_DegSin_ReturnValue_3;                     // 0x1FF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_25;       // 0x1FFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x2000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_2;    // 0x200C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_7;       // 0x2018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_4;  // 0x2024(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetVelocity_ReturnValue_2;                // 0x20AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_updEquip_return_1;                        // 0x20B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20B9[0x7];                                     // 0x20B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_updEquip_rebug_1;                         // 0x20C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue_3;                  // 0x20D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20DC[0x4];                                     // 0x20DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_3;     // 0x20E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_5;            // 0x20E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_5;         // 0x20E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20EA[0x2];                                     // 0x20EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_5;                    // 0x20EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_5;                // 0x20F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_5;                // 0x20F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_5;             // 0x2100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_5;                  // 0x210C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_5;            // 0x2118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2124[0x4];                                     // 0x2124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_5;                 // 0x2128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_5;                // 0x2130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_5;            // 0x2138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_5;             // 0x2140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_5;                 // 0x2148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_5;            // 0x214C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_5;               // 0x2150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_5;              // 0x2154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_5;                // 0x2160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_8;        // 0x216C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x2178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2179[0x3];                                     // 0x2179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Vector_Distance_ReturnValue_2;            // 0x217C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x2180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x2184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_6;                      // 0x2188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x218C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_12;         // 0x2190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x2194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_12;           // 0x2198(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_26;       // 0x21A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21AC[0x4];                                     // 0x21AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x21B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_4;        // 0x21B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21BC[0x4];                                     // 0x21BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInst_C*                            CallFunc_getMainGameInstance_AsGame_Inst_1;        // 0x21C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue_2;       // 0x21C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21C9[0x3];                                     // 0x21C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_1;                           // 0x21CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21D4[0x4];                                     // 0x21D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_24;                    // 0x21D8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_canBackrooms_return;                      // 0x21F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x21F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21F2[0x2];                                     // 0x21F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_AddActorWorldOffset_SweepHitResult;    // 0x21F4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x227C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_12;                           // 0x2280(0x0018)(HasGetValueTypeHash)
	class UGameInst_C*                            CallFunc_getMainGameInstance_AsGame_Inst_2;        // 0x2298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x22A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22A4[0x4];                                     // 0x22A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue_1;        // 0x22A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x22B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22B9[0x7];                                     // 0x22B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot_7;                   // 0x22C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_2;                           // 0x22C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_25;                    // 0x22D0(0x0018)(HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DestroyedActor_1;               // 0x22E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_13;           // 0x22F0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_33;                   // 0x2300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2301[0x7];                                     // 0x2301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x2308(0x0008)(NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x2310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_34;                   // 0x2318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2319[0x3];                                     // 0x2319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x231C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x2328(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_6;       // 0x2334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x2338(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2344[0x4];                                     // 0x2344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x2348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x2350(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue_1;         // 0x235C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x2368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x236C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x2370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x2374(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_6;                // 0x2380(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_7;       // 0x238C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue_1;                  // 0x2390(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_11;   // 0x239C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x23A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23A9[0x7];                                     // 0x23A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_4;        // 0x23B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x23B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x23C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23C1[0x3];                                     // 0x23C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_9;        // 0x23C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x23D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23DC[0x4];                                     // 0x23DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_MontageToPlay;                  // 0x23E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23E8[0x8];                                     // 0x23E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_4;              // 0x23F0(0x0030)(IsPlainOldData, NoDestructor)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_4;     // 0x2420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_10;       // 0x2428(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2434[0x4];                                     // 0x2434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_26;                    // 0x2438(0x0018)(HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      CallFunc_obj_static_obj_1;                         // 0x2450(0x0010)(ReferenceParm)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_4; // 0x2460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_35;                   // 0x2468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2469[0x7];                                     // 0x2469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_3;                 // 0x2470(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x2480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2481[0x7];                                     // 0x2481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_4;                 // 0x2488(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x2498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue_1;     // 0x2499(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249A[0x6];                                     // 0x249A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_C*                                CallFunc_asProp_return_1;                          // 0x24A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_36;                   // 0x24A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24A9[0x3];                                     // 0x24A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_4;                // 0x24AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x24B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue_1;        // 0x24B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24B5[0x3];                                     // 0x24B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_5;                // 0x24B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x24BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24BD[0x3];                                     // 0x24BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_5; // 0x24C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_2;           // 0x24C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_6; // 0x24C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_27;       // 0x24CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_6;                // 0x24D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x24D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24D5[0x3];                                     // 0x24D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_5;     // 0x24D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_3;           // 0x24E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue_1;        // 0x24E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_28;       // 0x24F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_8;       // 0x24F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_7;                // 0x24F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24FC[0x4];                                     // 0x24FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_6;     // 0x2500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_29;       // 0x2508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_3;      // 0x250C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_30;       // 0x2518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_31;       // 0x251C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_8;       // 0x2520(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_9;       // 0x252C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_32;       // 0x2538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_10;      // 0x253C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_6;           // 0x2548(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_7;           // 0x2554(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable;               // 0x2560(0x0010)(NoDestructor)
	TArray<struct FWeightedBlendable>             K2Node_MakeArray_Array_2;                          // 0x2570(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_37;                   // 0x2580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2581[0x7];                                     // 0x2581(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendables                    K2Node_MakeStruct_WeightedBlendables;              // 0x2588(0x0010)()
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x2598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259C[0x4];                                     // 0x259C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInst_C*                            CallFunc_getMainGameInstance_AsGame_Inst_3;        // 0x25A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x25A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x25A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isBuoyant__buoyant_;                      // 0x25AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x25AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_14;           // 0x25AC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_25BC[0x4];                                     // 0x25BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x25C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	EMoveComponentAction                          Temp_byte_Variable_6;                              // 0x25C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C9[0x3];                                     // 0x25C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x25CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_8;           // 0x25D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_9;       // 0x25E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_9;           // 0x25E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_10;          // 0x25F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_10;      // 0x25FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_11;      // 0x2600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_12;      // 0x2604(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_coms_C>           K2Node_DynamicCast_AsInt_Coms_2;                   // 0x2608(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x2618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_38;                   // 0x2619(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_39;                   // 0x261A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261B[0x1];                                     // 0x261B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_15;           // 0x261C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_262C[0x4];                                     // 0x262C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_3;        // 0x2630(0x0008)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_coms_C>           K2Node_DynamicCast_AsInt_Coms_3;                   // 0x2638(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x2648(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_40;                   // 0x2649(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_264A[0x2];                                     // 0x264A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_4;           // 0x264C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_5;           // 0x2650(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_33;       // 0x2654(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_34;       // 0x2658(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x265C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_1;                  // 0x2660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_6;           // 0x2664(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_7;           // 0x2668(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_2;                  // 0x266C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_3;                  // 0x2670(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue_2;                       // 0x2674(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue_3;                       // 0x2678(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x267C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_VLerp_ReturnValue_1;                      // 0x2688(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2694[0xC];                                     // 0x2694(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_5;              // 0x26A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_1; // 0x26D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_BreakVector_X_1;                          // 0x2758(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x275C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x2760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_35;       // 0x2764(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_13;         // 0x2768(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_3;                       // 0x276C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue_2;        // 0x2770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2771[0x3];                                     // 0x2771(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_13;      // 0x2774(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMoveComponentAction                          Temp_byte_Variable_7;                              // 0x2778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2779[0x3];                                     // 0x2779(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue_2;        // 0x277C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_16;           // 0x2788(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue_1;         // 0x2798(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_3;           // 0x27A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_36;       // 0x27A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_4;                       // 0x27AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_37;       // 0x27B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_14;         // 0x27B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCrouching_ReturnValue;                  // 0x27B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27B9[0x3];                                     // 0x27B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x27BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_8;                // 0x27C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x27C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27C5[0x3];                                     // 0x27C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_9;                // 0x27C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_7;                      // 0x27CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_15;         // 0x27D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_16;         // 0x27D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue_1;                     // 0x27D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_5;                       // 0x27DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_6;                       // 0x27E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_38;       // 0x27E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_39;       // 0x27E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_40;       // 0x27EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_41;       // 0x27F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_42;       // 0x27F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_43;       // 0x27F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue_4;                     // 0x27FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x2800(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_44;       // 0x2804(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_14;      // 0x2808(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_45;       // 0x280C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_46;       // 0x2810(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_47;       // 0x2814(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_48;       // 0x2818(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x281C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_13;                           // 0x2820(0x0018)(HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_7;                // 0x2838(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_5;        // 0x2844(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2848[0x8];                                     // 0x2848(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_6;              // 0x2850(0x0030)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue_2;                  // 0x2880(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_2; // 0x288C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_2;  // 0x2914(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_SelectFloat_ReturnValue_10;               // 0x299C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x29A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29A1[0x7];                                     // 0x29A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_27;                    // 0x29A8(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_11;               // 0x29C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_17;         // 0x29C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_18;         // 0x29C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_5;             // 0x29CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_7;                       // 0x29D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_49;       // 0x29D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_15;      // 0x29D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29DC[0x4];                                     // 0x29DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_28;                    // 0x29E0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x29F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29F9[0x3];                                     // 0x29F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_12;               // 0x29FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_50;       // 0x2A00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_6;        // 0x2A04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_7;                     // 0x2A08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue;        // 0x2A0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_16;      // 0x2A10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_17;      // 0x2A14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_19;         // 0x2A18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_20;         // 0x2A1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_21;         // 0x2A20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isDreaming_dreaming;                      // 0x2A24(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFalling_ReturnValue_1;                  // 0x2A25(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A26[0x2];                                     // 0x2A26(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue_8;                      // 0x2A28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_13;               // 0x2A2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_14;               // 0x2A30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x2A34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_22;         // 0x2A38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x2A3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_23;         // 0x2A40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_8;                       // 0x2A44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_8;                     // 0x2A48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_51;       // 0x2A4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_9;                       // 0x2A50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_52;       // 0x2A54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isDreaming_dreaming_1;                    // 0x2A58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A59[0x3];                                     // 0x2A59(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_18;      // 0x2A5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_24;         // 0x2A60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_53;       // 0x2A64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut_4;       // 0x2A68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_5;       // 0x2A6C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_41;                   // 0x2A6D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A6E[0x2];                                     // 0x2A6E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x2A70(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_3;    // 0x2A7C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_11;      // 0x2A88(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_12;   // 0x2A94(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_11;          // 0x2AA0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AAC[0x4];                                     // 0x2AAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_2;                            // 0x2AB0(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x2AC0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x2B48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_6;            // 0x2B49(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_6;         // 0x2B4A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B4B[0x1];                                     // 0x2B4B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_6;                    // 0x2B4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_6;                // 0x2B50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_6;                // 0x2B54(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_6;             // 0x2B60(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_6;                  // 0x2B6C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_6;            // 0x2B78(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B84[0x4];                                     // 0x2B84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_6;                 // 0x2B88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_6;                // 0x2B90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_6;            // 0x2B98(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_6;             // 0x2BA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_6;                 // 0x2BA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_6;            // 0x2BAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_6;               // 0x2BB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_6;              // 0x2BB4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_6;                // 0x2BC0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue_3;        // 0x2BCC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue;       // 0x2BCD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x2BCE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x2BCF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AMurderKerfuroDig_C*                    K2Node_DynamicCast_AsMurder_Kerfuro_Dig;           // 0x2BD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x2BD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BD9[0x7];                                     // 0x2BD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActorChipPile_C*                       K2Node_DynamicCast_AsActor_Chip_Pile;              // 0x2BE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x2BE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x2BE9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x2BEA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BEB[0x1];                                     // 0x2BEB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x2BEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x2BF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_5;    // 0x2BF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BF2[0x2];                                     // 0x2BF2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x2BF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x2BF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BF9[0x3];                                     // 0x2BF9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x2BFC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x2C08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C09[0x3];                                     // 0x2C09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue;         // 0x2C0C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x2C18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C19[0x7];                                     // 0x2C19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_7;              // 0x2C20(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x2C50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C51[0x7];                                     // 0x2C51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x2C58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x2C60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C61[0x7];                                     // 0x2C61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADirthole_C*                            CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x2C68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x2C70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C71[0x7];                                     // 0x2C71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_3;                          // 0x2C78(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable_3;                            // 0x2C88(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         K2Node_LowEntry_LocalVariable_Value__3_Object;     // 0x2C98(0x0010)(ConstParm, ReferenceParm)
	TArray<EObjectTypeQuery>                      CallFunc_obj_statDyn_obj;                          // 0x2CA8(0x0010)(ReferenceParm)
	TArray<EObjectTypeQuery>                      CallFunc_obj_phys_obj;                             // 0x2CB8(0x0010)(ReferenceParm)
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects_3;                // 0x2CC8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_20;                    // 0x2CD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_42;                   // 0x2CD9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue_2;     // 0x2CDA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CDB[0x5];                                     // 0x2CDB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USave_main_C*                           CallFunc_getMainSave_save_main_1;                  // 0x2CE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_14;                           // 0x2CE8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_29;                    // 0x2D00(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_30;                    // 0x2D18(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_15;                           // 0x2D30(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_31;                    // 0x2D48(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_32;                    // 0x2D60(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_43;                   // 0x2D78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_7;            // 0x2D79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_7;         // 0x2D7A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D7B[0x1];                                     // 0x2D7B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_7;                    // 0x2D7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_7;                // 0x2D80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_7;                // 0x2D84(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_7;             // 0x2D90(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_7;                  // 0x2D9C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_7;            // 0x2DA8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DB4[0x4];                                     // 0x2DB4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_7;                 // 0x2DB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_7;                // 0x2DC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_7;            // 0x2DC8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_7;             // 0x2DD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_7;                 // 0x2DD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_7;            // 0x2DDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_7;               // 0x2DE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_7;              // 0x2DE4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_7;                // 0x2DF0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x2DFC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DFD[0x3];                                     // 0x2DFD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects_4;                // 0x2E00(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_21;                    // 0x2E10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x2E11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E12[0x6];                                     // 0x2E12(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_5;                 // 0x2E18(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_22;                    // 0x2E28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E29[0x7];                                     // 0x2E29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_C*                                CallFunc_asProp_return_2;                          // 0x2E30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_6;                 // 0x2E38(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_23;                    // 0x2E48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_lookAt_return;                            // 0x2E49(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E4A[0x6];                                     // 0x2E4A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_lookAt_text;                              // 0x2E50(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_lookAt_boundObjectReplace;                // 0x2E60(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_lookAt_number;                            // 0x2E68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_44;                   // 0x2E69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x2E6A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_45;                   // 0x2E6B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E6C[0x4];                                     // 0x2E6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x2E70(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x2E88(0x0018)()
	class FText                                   CallFunc_getName_name;                             // 0x2EA0(0x0018)()
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_6;    // 0x2EB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EB9[0x3];                                     // 0x2EB9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_arm_start_1;                              // 0x2EBC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_arm_end_1;                                // 0x2EC8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_arm_rotation_1;                           // 0x2ED4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x2EE0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x2F68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_46;                   // 0x2F69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_8;            // 0x2F6A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_8;         // 0x2F6B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time_8;                    // 0x2F6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_8;                // 0x2F70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_8;                // 0x2F74(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_8;             // 0x2F80(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_8;                  // 0x2F8C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_8;            // 0x2F98(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FA4[0x4];                                     // 0x2FA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_8;                 // 0x2FA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_8;                // 0x2FB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_8;            // 0x2FB8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_8;             // 0x2FC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_8;                 // 0x2FC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_8;            // 0x2FCC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_8;               // 0x2FD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_8;              // 0x2FD4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_8;                // 0x2FE0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_47;                   // 0x2FEC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue_1;     // 0x2FED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x2FEE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FEF[0x1];                                     // 0x2FEF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit_1;     // 0x2FF0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue_1; // 0x3078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_9;            // 0x3079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_9;         // 0x307A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_307B[0x1];                                     // 0x307B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_9;                    // 0x307C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_9;                // 0x3080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_9;                // 0x3084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_9;             // 0x3090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_9;                  // 0x309C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_9;            // 0x30A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30B4[0x4];                                     // 0x30B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_9;                 // 0x30B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_9;                // 0x30C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_9;            // 0x30C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_9;             // 0x30D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_9;                 // 0x30D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_9;            // 0x30DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_9;               // 0x30E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_9;              // 0x30E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_9;                // 0x30F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x30FC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x3184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3185[0x3];                                     // 0x3185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_findFootLocation_ReturnValue;             // 0x3188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3194[0x4];                                     // 0x3194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_33;                    // 0x3198(0x0018)(HasGetValueTypeHash)
	struct FHitResult                             CallFunc_step_OutHit;                              // 0x31B0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x3238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x3239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_323A[0x2];                                     // 0x323A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_15;               // 0x323C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_16;               // 0x3240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_4;         // 0x3244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3245[0x3];                                     // 0x3245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue_3;                // 0x3248(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_9;                      // 0x3254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_5;         // 0x3258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3259[0x3];                                     // 0x3259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Vector_Distance_ReturnValue_3;            // 0x325C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_54;       // 0x3260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_7;        // 0x3264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_19;      // 0x3268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_55;       // 0x326C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_34;                    // 0x3270(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x3288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3289[0x3];                                     // 0x3289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut_5;       // 0x328C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x3290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_11;       // 0x3298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess_1;                    // 0x32A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32A5[0x3];                                     // 0x32A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_12;       // 0x32A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetClosestPointOnCollision_OutPointOnBody; // 0x32B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetClosestPointOnCollision_ReturnValue;   // 0x32C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C4[0x4];                                     // 0x32C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_35;                    // 0x32C8(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x32E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_10;                     // 0x32EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_4;        // 0x32F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x32F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_25;         // 0x3300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x3304(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_9;                     // 0x3310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3314[0x4];                                     // 0x3314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_7;     // 0x3318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_17;               // 0x3320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3324[0x4];                                     // 0x3324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_36;                    // 0x3328(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_12;                 // 0x3340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3341[0x7];                                     // 0x3341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_37;                    // 0x3348(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_38;                    // 0x3360(0x0018)(HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_10;                  // 0x3378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x3380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3381[0x7];                                     // 0x3381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_39;                    // 0x3388(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_40;                    // 0x33A0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_12;               // 0x33B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33B9[0x7];                                     // 0x33B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_41;                    // 0x33C0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x33D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_6;         // 0x33D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33DA[0x2];                                     // 0x33DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_20;      // 0x33DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x33E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E1[0x3];                                     // 0x33E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_56;       // 0x33E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_13;                // 0x33E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E9[0x3];                                     // 0x33E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_6;             // 0x33EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_13;       // 0x33F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33FC[0x4];                                     // 0x33FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_42;                    // 0x3400(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x3418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x341C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x3420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3424[0x4];                                     // 0x3424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_43;                    // 0x3428(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x3440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3444[0x4];                                     // 0x3444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWaterVolume_C*                         CallFunc_Array_Get_Item_1;                         // 0x3448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x3450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x3454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x3458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_5;        // 0x345C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_26;         // 0x3460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_10;                    // 0x3464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_44;                    // 0x3468(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_21;      // 0x3480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_18;               // 0x3484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_45;                    // 0x3488(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_57;       // 0x34A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_12;          // 0x34A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_19;               // 0x34B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_13;          // 0x34B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_22;      // 0x34C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_14;          // 0x34C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_58;       // 0x34D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue_2;         // 0x34D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_59;       // 0x34E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_12;      // 0x34E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x34F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34FC[0x4];                                     // 0x34FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_46;                    // 0x3500(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_47;                    // 0x3518(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_13;                 // 0x3530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3531[0x7];                                     // 0x3531(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_48;                    // 0x3538(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x3550(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_15;          // 0x355C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_16;          // 0x3568(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue_3;         // 0x3574(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_17;           // 0x3580(0x0010)(ZeroConstructor, NoDestructor)
	struct FKey                                   K2Node_InputActionEvent_Key_49;                    // 0x3590(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_48;                   // 0x35A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A9[0x7];                                     // 0x35A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x35B0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x35E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x35EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x35F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3604[0xC];                                     // 0x3604(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_8;              // 0x3610(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x3640(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364C[0x4];                                     // 0x364C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_50;                    // 0x3650(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_findFootLocation_ReturnValue_1;           // 0x3668(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_11;                  // 0x3674(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_10;           // 0x367C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_10;        // 0x367D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_367E[0x2];                                     // 0x367E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_10;                   // 0x3680(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_10;               // 0x3684(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_10;               // 0x3688(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_10;            // 0x3694(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_10;                 // 0x36A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_10;           // 0x36AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_10;                // 0x36B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_10;               // 0x36C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_10;           // 0x36C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_10;            // 0x36D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_10;                // 0x36D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_10;           // 0x36DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_10;              // 0x36E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_10;             // 0x36E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_10;               // 0x36F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36FC[0x4];                                     // 0x36FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_2;               // 0x3700(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x3730(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x373C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x3748(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_7;    // 0x3754(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3755[0xB];                                     // 0x3755(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_9;              // 0x3760(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x3790(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_18;           // 0x379C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_12;                  // 0x37AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_13;                  // 0x37B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_19;           // 0x37BC(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_14;                  // 0x37CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_20;           // 0x37D4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_37E4[0x4];                                     // 0x37E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_51;                    // 0x37E8(0x0018)(HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_21;           // 0x3800(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_5;                              // 0x3810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess_2;                    // 0x3818(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_skipGrabRadial_skip;                      // 0x3819(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_LowEntry_LocalVariable_Value__4_Object;     // 0x381A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_49;                   // 0x381B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanXOR_ReturnValue;                   // 0x381C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_14;                // 0x381D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_11;           // 0x381E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_11;        // 0x381F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time_11;                   // 0x3820(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_11;               // 0x3824(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_11;               // 0x3828(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_11;            // 0x3834(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_11;                 // 0x3840(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_11;           // 0x384C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_11;                // 0x3858(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_11;               // 0x3860(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_11;           // 0x3868(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_11;            // 0x3870(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_11;                // 0x3878(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_11;           // 0x387C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_11;              // 0x3880(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_11;             // 0x3884(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_11;               // 0x3890(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_50;                   // 0x389C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_useAction_succ;                           // 0x389D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_51;                   // 0x389E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_389F[0x1];                                     // 0x389F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_15;                  // 0x38A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_52;                   // 0x38A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A9[0x3];                                     // 0x38A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_22;           // 0x38AC(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_27;         // 0x38BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue_4;                       // 0x38C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_53;                   // 0x38C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_54;                   // 0x38C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38C6[0x2];                                     // 0x38C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_16;                  // 0x38C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_arm_start_2;                              // 0x38D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_arm_end_2;                                // 0x38DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_arm_rotation_2;                           // 0x38E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38F4[0x4];                                     // 0x38F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_7;                 // 0x38F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_24;                    // 0x3908(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isDreaming_dreaming_2;                    // 0x3909(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_collectObject_collected;                  // 0x390A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_14;                 // 0x390B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_390C[0x4];                                     // 0x390C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_obj_statDynPhys_obj;                      // 0x3910(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanOR_ReturnValue_15;                 // 0x3920(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x3921(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3922[0x6];                                     // 0x3922(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_8;     // 0x3928(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_14;       // 0x3930(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_393C[0x4];                                     // 0x393C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Select_Default_3;                           // 0x3940(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit_2;     // 0x3948(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue_2; // 0x39D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39D1[0x3];                                     // 0x39D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue_3;        // 0x39D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_12;           // 0x39E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_12;        // 0x39E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39E2[0x2];                                     // 0x39E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_12;                   // 0x39E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_12;               // 0x39E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_12;               // 0x39EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_12;            // 0x39F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_12;                 // 0x3A04(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_12;           // 0x3A10(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1C[0x4];                                     // 0x3A1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_12;                // 0x3A20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_12;               // 0x3A28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_12;           // 0x3A30(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_12;            // 0x3A38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_12;                // 0x3A40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_12;           // 0x3A44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_12;              // 0x3A48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_12;             // 0x3A4C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_12;               // 0x3A58(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_13;      // 0x3A64(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_4;      // 0x3A70(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_14;      // 0x3A7C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_15;      // 0x3A88(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_1;               // 0x3A94(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_2;               // 0x3AA0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_3;               // 0x3AAC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_4;               // 0x3AB8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_dontWakeup;                     // 0x3AC4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_alt;                            // 0x3AC5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_dontCollect;                    // 0x3AC6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_16;                 // 0x3AC7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_17;                 // 0x3AC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_updEquip_return_2;                        // 0x3AC9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3ACA[0x6];                                     // 0x3ACA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_updEquip_rebug_2;                         // 0x3AD0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot_8;                   // 0x3AE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_23;           // 0x3AE8(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3AF8[0x8];                                     // 0x3AF8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_3;               // 0x3B00(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_checkEquip_empty_1;                       // 0x3B30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B31[0xF];                                     // 0x3B31(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_equipment                      CallFunc_checkEquip_Output_1;                      // 0x3B40(0x0100)(HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x3C40(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x3C4C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x3C58(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x3C64(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_SelectVector_ReturnValue_5;               // 0x3C70(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_6;               // 0x3C7C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_17;                  // 0x3C88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_10;             // 0x3C90(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3; // 0x3CC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_3;        // 0x3CC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1_2;                 // 0x3CD0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_25;                    // 0x3CE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadData_return_1;                        // 0x3CE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_putObjectInventory2_return_1;             // 0x3CE2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CE3[0x1];                                     // 0x3CE3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue_10;                      // 0x3CE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x3CE8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_5;  // 0x3CF4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_VSize_ReturnValue_11;                     // 0x3D7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_11;                    // 0x3D80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SetVectorLength_ReturnValue;              // 0x3D84(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_6;  // 0x3D90(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_lookAt_return_1;                          // 0x3E18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E19[0x7];                                     // 0x3E19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_lookAt_text_1;                            // 0x3E20(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_lookAt_boundObjectReplace_1;              // 0x3E30(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_lookAt_number_1;                          // 0x3E38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E39[0x3];                                     // 0x3E39(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_24;           // 0x3E3C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_55;                   // 0x3E4C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_56;                   // 0x3E4D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E4E[0x2];                                     // 0x3E4E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_13;   // 0x3E50(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_2;     // 0x3E5C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue_13;               // 0x3EE4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3EE5[0x3];                                     // 0x3EE5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_15;       // 0x3EE8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_15;                // 0x3EF4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3EF5[0x3];                                     // 0x3EF5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x3EF8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_57;                   // 0x3F04(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F05[0x3];                                     // 0x3F05(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMass_ReturnValue;                      // 0x3F08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_4;    // 0x3F0C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_28;         // 0x3F18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_12;                    // 0x3F1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_18;                  // 0x3F20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x3F28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_18;                 // 0x3F29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F2A[0x2];                                     // 0x3F2A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_2;                  // 0x3F2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x3F30(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x3F3C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_4dir_return;                              // 0x3FC4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_1;       // 0x3FD0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_5;    // 0x3FDC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_3;  // 0x3FE8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             K2Node_CustomEvent_hitResult;                      // 0x4070(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_13;           // 0x40F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_13;        // 0x40F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40FA[0x2];                                     // 0x40FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_13;                   // 0x40FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_13;               // 0x4100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_13;               // 0x4104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_13;            // 0x4110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_13;                 // 0x411C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_13;           // 0x4128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4134[0x4];                                     // 0x4134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_13;                // 0x4138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_13;               // 0x4140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_13;           // 0x4148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_13;            // 0x4150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_13;                // 0x4158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_13;           // 0x415C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_13;              // 0x4160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_13;             // 0x4164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_13;               // 0x4170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCenterOfMass_ReturnValue;              // 0x417C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_1;        // 0x4188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component_1;        // 0x4190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_26;                    // 0x4198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x4199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_419A[0x2];                                     // 0x419A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetClosestPointOnCollision_OutPointOnBody_1; // 0x419C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetClosestPointOnCollision_ReturnValue_1; // 0x41A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_3;     // 0x41AC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_25;           // 0x4234(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x4244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue_4;            // 0x4250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_4;     // 0x4254(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_6;       // 0x42DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42DD[0x3];                                     // 0x42DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_19;                  // 0x42E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_26;           // 0x42E8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_hasEquipment_return;                      // 0x42F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42F9[0x3];                                     // 0x42F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_20;               // 0x42FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isStrong_return;                          // 0x4300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4301[0x3];                                     // 0x4301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_21;               // 0x4304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_step_OutHit_1;                            // 0x4308(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Temp_bool_Variable_6;                              // 0x4390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4391[0x7];                                     // 0x4391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Select_Default_4;                           // 0x4398(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_getActionOptions_options;                 // 0x43A0(0x0010)(ReferenceParm)
	TArray<Enum_interactionActions>               CallFunc_getActionOptions_options_enum;            // 0x43B0(0x0010)(ReferenceParm)
	TArray<class FText>                           CallFunc_getActionOptions_optionsNamesOverlay;     // 0x43C0(0x0010)(ReferenceParm)
	uint8                                         CallFunc_getActionOptions_number;                  // 0x43D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43D1[0x3];                                     // 0x43D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x43D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x43D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x43DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_8;    // 0x43E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_16;                // 0x43E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_17;                // 0x43E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43E3[0x1];                                     // 0x43E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue_11;                      // 0x43E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x43E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x43EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x43F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_12;                      // 0x43F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_2;                        // 0x43F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_3;                        // 0x43FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_4;                        // 0x4400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_7;             // 0x4404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_29;         // 0x4408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_8;             // 0x440C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_step_OutHit_2;                            // 0x4410(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_60;       // 0x4498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449C[0x4];                                     // 0x449C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPhysicalMaterial*>              K2Node_MakeArray_Array_4;                          // 0x44A0(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_61;       // 0x44B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isDreaming_dreaming_3;                    // 0x44B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44B5[0x3];                                     // 0x44B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_30;         // 0x44B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_31;         // 0x44BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_7;         // 0x44C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44C1[0x3];                                     // 0x44C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_7; // 0x44C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_8;         // 0x44C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44C9[0x7];                                     // 0x44C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USave_main_C*                           CallFunc_getMainSave_save_main_2;                  // 0x44D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x44D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44DC[0x4];                                     // 0x44DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_11;             // 0x44E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_3; // 0x4510(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_58;                   // 0x4598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4599[0x3];                                     // 0x4599(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_hit_7;                                // 0x459C(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_14;           // 0x4624(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_14;        // 0x4625(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4626[0x2];                                     // 0x4626(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_14;                   // 0x4628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_14;               // 0x462C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_14;               // 0x4630(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_14;            // 0x463C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_14;                 // 0x4648(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_14;           // 0x4654(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_14;                // 0x4660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_14;               // 0x4668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_14;           // 0x4670(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_14;            // 0x4678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_14;                // 0x4680(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_14;           // 0x4684(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_14;              // 0x4688(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_14;             // 0x468C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_14;               // 0x4698(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46A4[0x4];                                     // 0x46A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_8;                 // 0x46A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_27;                    // 0x46B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46B9[0x7];                                     // 0x46B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_9;                 // 0x46C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_28;                    // 0x46D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_landedOn_ignoreFallDamage;                // 0x46D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_landedOn_ignoreFallDamage_1;              // 0x46D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue_3;     // 0x46D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x46D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x46D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_hasEquipment_return_1;                    // 0x46D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46D7[0x1];                                     // 0x46D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x46D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_22;               // 0x46DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_hasEquipment_return_2;                    // 0x46E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_hasEquipment_return_3;                    // 0x46E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46E2[0x6];                                     // 0x46E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot_9;                   // 0x46E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_12;                     // 0x46F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_32;         // 0x46F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_9;         // 0x46F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46F9[0x3];                                     // 0x46F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_9;             // 0x46FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isUnderwater_ReturnValue;                 // 0x4700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_10;        // 0x4701(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4702[0x2];                                     // 0x4702(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_23;      // 0x4704(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_62;       // 0x4708(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_11;        // 0x470C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_470D[0x3];                                     // 0x470D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut_6;       // 0x4710(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x4714(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x4718(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_471C[0x4];                                     // 0x471C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_5;        // 0x4720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue_4;        // 0x4728(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_5;      // 0x4734(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x4740(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x474C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_2;       // 0x4758(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_fuel;                                 // 0x4764(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_16;                           // 0x4768(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x4780(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_59;                   // 0x4784(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_60;                   // 0x4785(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4786[0x2];                                     // 0x4786(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_56;                    // 0x4788(0x0018)(HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_6;        // 0x47A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_24;      // 0x47A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue_4;         // 0x47AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionChannel                             K2Node_Select_Default_5;                           // 0x47B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isBuoyant__buoyant__1;                    // 0x47B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMovementMode                                 K2Node_Select_Default_6;                           // 0x47BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_14;               // 0x47BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47BC[0x4];                                     // 0x47BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_57;                    // 0x47C0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsGamePaused_ReturnValue;                 // 0x47D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_61;                   // 0x47D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isDreaming_dreaming_4;                    // 0x47DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47DB[0x5];                                     // 0x47DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_7;        // 0x47E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_7;  // 0x47E8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_62;                   // 0x4870(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4871[0x3];                                     // 0x4871(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult; // 0x4874(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_48FC[0x4];                                     // 0x48FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_8;        // 0x4900(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_6;    // 0x4908(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_LowEntry_LocalVariable_Value__5_Object;     // 0x4914(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_1; // 0x4920(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_4;       // 0x49A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_5;       // 0x49A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49AA[0x2];                                     // 0x49AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_StartingSection;                // 0x49AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49B4[0x4];                                     // 0x49B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_5; // 0x49B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqualExactly_VectorVector_ReturnValue; // 0x49C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_63;                   // 0x49C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49C2[0x2];                                     // 0x49C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x49C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot_10;                  // 0x49C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut_7;       // 0x49D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_12;        // 0x49D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49D5[0x3];                                     // 0x49D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_LowEntry_LocalVariable_Value__6_Object;     // 0x49D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x49E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x49E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x49EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x49F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x49F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49F5[0x3];                                     // 0x49F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_step_OutHit_3;                            // 0x49F8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         Temp_float_Variable_2;                             // 0x4A80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x4A84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_16;       // 0x4A88(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_LowEntry_LocalVariable_Value__7_Object;     // 0x4A94(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_6;                          // 0x4AA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_6;                          // 0x4AA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_6;                          // 0x4AA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_13;                      // 0x4AAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_14;                      // 0x4AB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_15;                      // 0x4AB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_6;                 // 0x4AB8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_16;      // 0x4AC4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_12;             // 0x4AD0(0x0030)(IsPlainOldData, NoDestructor)
	TArray<class FName>                           CallFunc_GetAllSocketNames_ReturnValue;            // 0x4B00(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue_15;               // 0x4B10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B11[0x3];                                     // 0x4B11(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x4B14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x4B18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x4B19(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFalling_ReturnValue_2;                  // 0x4B1A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B1B[0x5];                                     // 0x4B1B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USave_main_C*                           CallFunc_getMainSave_save_main_3;                  // 0x4B20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x4B28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_64;                   // 0x4B2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_65;                   // 0x4B2D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B2E[0x2];                                     // 0x4B2E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_HalfHeightAdjust_1;                   // 0x4B30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ScaledHalfHeightAdjust_1;             // 0x4B34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_HalfHeightAdjust;                     // 0x4B38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ScaledHalfHeightAdjust;               // 0x4B3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_8;  // 0x4B40(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_9;  // 0x4BC8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FName                                   Temp_name_Variable_6;                              // 0x4C50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x4C58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_4;               // 0x4C60(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x4C90(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x4C9C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x4CA8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_3;                      // 0x4CB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_3;                     // 0x4CB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_3;                       // 0x4CBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue_1;        // 0x4CC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CC1[0x3];                                     // 0x4CC1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_8;                // 0x4CC4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_1;          // 0x4CD0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CDC[0x4];                                     // 0x4CDC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_9;        // 0x4CE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_1;     // 0x4CE8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_1;        // 0x4D70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D71[0x3];                                     // 0x4D71(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_4;                             // 0x4D74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_4;  // 0x4D78(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_difficulty                               Temp_byte_Variable_8;                              // 0x4E00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E01[0x3];                                     // 0x4E01(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_7;                           // 0x4E04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_63;       // 0x4E08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_64;       // 0x4E0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x4E10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut_8;       // 0x4E14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_2;                       // 0x4E18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E1C[0x4];                                     // 0x4E1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DestroyedActor;                 // 0x4E20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x4E28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E29[0x3];                                     // 0x4E29(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_8;                           // 0x4E2C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_66;                   // 0x4E34(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_67;                   // 0x4E35(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E36[0x2];                                     // 0x4E36(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects_5;                // 0x4E38(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_29;                    // 0x4E48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E49[0x3];                                     // 0x4E49(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_8;                              // 0x4E4C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E54[0x4];                                     // 0x4E54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects_6;                // 0x4E58(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_30;                    // 0x4E68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_68;                   // 0x4E69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_canBeUsedHold_return;                     // 0x4E6A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_69;                   // 0x4E6B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_20;                  // 0x4E6C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_70;                   // 0x4E74(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E75[0x3];                                     // 0x4E75(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_27;           // 0x4E78(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_71;                   // 0x4E88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E89[0x3];                                     // 0x4E89(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_21;                  // 0x4E8C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E94[0x4];                                     // 0x4E94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects_7;                // 0x4E98(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_31;                    // 0x4EA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_72;                   // 0x4EA9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EAA[0x2];                                     // 0x4EAA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_6;                             // 0x4EAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_28;           // 0x4EB0(0x0010)(ZeroConstructor, NoDestructor)
	class UUmg_texturePicker_C*                   K2Node_Event_picker;                               // 0x4EC0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Event_texture;                              // 0x4EC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_index;                                // 0x4ED0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Event_color;                                // 0x4ED4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_22;                  // 0x4EE4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EEC[0x4];                                     // 0x4EEC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_Event_key_2;                                // 0x4EF0(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_Event_pressed_1;                            // 0x4F08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F09[0x7];                                     // 0x4F09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        K2Node_Event_gamemode;                             // 0x4F10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHook_C*                                K2Node_Event_hook_1;                               // 0x4F18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_clean_1;                              // 0x4F20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F24[0x4];                                     // 0x4F24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_18;                            // 0x4F28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHook_C*                                K2Node_Event_hook;                                 // 0x4F30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_17;                            // 0x4F38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_6;                                // 0x4F40(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_Event_clean;                                // 0x4FC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FC9[0x3];                                     // 0x4FC9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_location_1;                           // 0x4FCC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_damage_5;                             // 0x4FD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FDC[0x4];                                     // 0x4FDC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_16;                            // 0x4FE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_volume;                               // 0x4FE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FEC[0x4];                                     // 0x4FEC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_15;                            // 0x4FF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_5;                                // 0x4FF8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 K2Node_Event_name_1;                               // 0x5080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_Event_temperature_1;                        // 0x5090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_speed;                                // 0x5094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_temperature;                          // 0x5098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_509C[0x4];                                     // 0x509C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_14;                            // 0x50A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_Event_key_1;                                // 0x50A8(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_Event_pressed;                              // 0x50C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50C1[0x3];                                     // 0x50C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_29;           // 0x50C4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_50D4[0x4];                                     // 0x50D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_13;                            // 0x50D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_mouse;                                // 0x50E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_12;                            // 0x50E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_wheelDelta;                           // 0x50F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50F4[0x4];                                     // 0x50F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_11;                            // 0x50F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_10;                            // 0x5100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_damage_4;                             // 0x5108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_location;                             // 0x510C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_9;                             // 0x5118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_8;                             // 0x5120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_7;                             // 0x5128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_4;                                // 0x5130(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       K2Node_Event_action;                               // 0x51B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51B9[0x3];                                     // 0x51B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_damage_3;                             // 0x51BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hot;                                  // 0x51C0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_Event_damage_2;                             // 0x5248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_524C[0x4];                                     // 0x524C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_6;                             // 0x5250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_3;                                // 0x5258(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 K2Node_Event_key;                                  // 0x52E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_static;                               // 0x52F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_frozen;                               // 0x52F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_active;                               // 0x52F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_activate;                             // 0x52F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_damage_1;                             // 0x52F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_2;                                // 0x52F8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 K2Node_Event_actor;                                // 0x5380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_impact;                               // 0x5388(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5394[0x4];                                     // 0x5394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_5;                             // 0x5398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_4;                             // 0x53A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_3;                             // 0x53A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_2;                             // 0x53B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_1;                                // 0x53B8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_Event_damage;                               // 0x5440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5444[0x4];                                     // 0x5444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_1;                             // 0x5448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_name;                                 // 0x5450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_kick;                                 // 0x5458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5459[0x7];                                     // 0x5459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x5460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x5468(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FName                                   K2Node_CustomEvent_NotifyName_23;                  // 0x54F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_24;                  // 0x54F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_30;           // 0x5500(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_9;                              // 0x5510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_31;           // 0x5518(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x5528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5529[0x3];                                     // 0x5529(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x552C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_25;                  // 0x5530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_2;                         // 0x5538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_32;           // 0x5540(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_26;                  // 0x5550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x5558(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_33;           // 0x555C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x556C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_556D[0x3];                                     // 0x556D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x5570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x5574(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5575[0x3];                                     // 0x5575(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_27;                  // 0x5578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_16;               // 0x5580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5581[0x3];                                     // 0x5581(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_7;                             // 0x5584(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_34;           // 0x5588(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_28;                  // 0x5598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_8;                             // 0x55A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_9;                             // 0x55A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_35;           // 0x55A8(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x55B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_29;                  // 0x55BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_36;           // 0x55C4(0x0010)(ZeroConstructor, NoDestructor)
	Enum_difficulty                               Temp_byte_Variable_9;                              // 0x55D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_73;                   // 0x55D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55D6[0x2];                                     // 0x55D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_9;                           // 0x55D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_65;       // 0x55DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_66;       // 0x55E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut_9;       // 0x55E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x55E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_3;                       // 0x55EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_4;                            // 0x55F0(0x0010)(ConstParm, ReferenceParm)
	struct FKey                                   K2Node_InputActionEvent_Key_58;                    // 0x5600(0x0018)(HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_1;       // 0x5618(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_1;  // 0x56A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_15;           // 0x56A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_15;        // 0x56A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56A3[0x1];                                     // 0x56A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_15;                   // 0x56A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_15;               // 0x56A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_15;               // 0x56AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_15;            // 0x56B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_15;                 // 0x56C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_15;           // 0x56D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56DC[0x4];                                     // 0x56DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_15;                // 0x56E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_15;               // 0x56E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_15;           // 0x56F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_15;            // 0x56F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_15;                // 0x5700(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_15;           // 0x5704(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_15;              // 0x5708(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_15;             // 0x570C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_15;               // 0x5718(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5724[0x4];                                     // 0x5724(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWaterVolume_C*                         K2Node_DynamicCast_AsWater_Volume;                 // 0x5728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_32;                    // 0x5730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5731[0x7];                                     // 0x5731(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x5738(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isBuoyant__buoyant__2;                    // 0x5740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5741[0x7];                                     // 0x5741(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_10;       // 0x5748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_59;                    // 0x5750(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_74;                   // 0x5768(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_75;                   // 0x5769(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_76;                   // 0x576A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_576B[0x1];                                     // 0x576B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_7;                 // 0x576C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_77;                   // 0x5778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5779[0x3];                                     // 0x5779(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_10; // 0x577C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Variable_2;                               // 0x5804(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_78;                   // 0x5808(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_79;                   // 0x5809(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_80;                   // 0x580A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_580B[0x1];                                     // 0x580B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_8;                 // 0x580C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_11; // 0x5818(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_81;                   // 0x58A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_82;                   // 0x58A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_58A2[0x2];                                     // 0x58A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_4;      // 0x58A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_9;     // 0x58B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x58B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_17;       // 0x58C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_17;      // 0x58D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPointInBox_ReturnValue;                 // 0x58DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_17;               // 0x58DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_getEvent_isEventActive;                   // 0x58DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isDreaming_dreaming_5;                    // 0x58DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable_3;                               // 0x58E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_19;                 // 0x58E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_20;                 // 0x58E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_21;                 // 0x58E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetGamePaused_ReturnValue;                // 0x58E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_22;                 // 0x58E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_58E9[0x7];                                     // 0x58E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_11;       // 0x58F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_83;                   // 0x58F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_58F9[0x7];                                     // 0x58F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_52;                    // 0x5900(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_53;                    // 0x5918(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_isDreaming_dreaming_6;                    // 0x5930(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isExhausted_exhausted;                    // 0x5931(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_23;                 // 0x5932(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5933[0x5];                                     // 0x5933(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_10;                // 0x5938(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_33;                    // 0x5948(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5949[0x7];                                     // 0x5949(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_C*                                CallFunc_asProp_return_3;                          // 0x5950(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_84;                   // 0x5958(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isDreaming_dreaming_7;                    // 0x5959(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_595A[0x6];                                     // 0x595A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1_3;                 // 0x5960(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_34;                    // 0x5970(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_putObjectInventory2_return_2;             // 0x5971(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ignoreSave_ignoreSave_1;                  // 0x5972(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_85;                   // 0x5973(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5974[0x4];                                     // 0x5974(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_5;                            // 0x5978(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_2;       // 0x5988(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_2;  // 0x5A10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_18;                // 0x5A11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_16;           // 0x5A12(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_16;        // 0x5A13(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time_16;                   // 0x5A14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_16;               // 0x5A18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_16;               // 0x5A1C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_16;            // 0x5A28(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_16;                 // 0x5A34(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_16;           // 0x5A40(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A4C[0x4];                                     // 0x5A4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_16;                // 0x5A50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_16;               // 0x5A58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_16;           // 0x5A60(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_16;            // 0x5A68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_16;                // 0x5A70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_16;           // 0x5A74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_16;              // 0x5A78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_16;             // 0x5A7C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_16;               // 0x5A88(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x5A94(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isBuoyant__buoyant__3;                    // 0x5A95(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_19;                // 0x5A96(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_20;                // 0x5A97(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isBuoyant__buoyant__4;                    // 0x5A98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A99[0x7];                                     // 0x5A99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_12;       // 0x5AA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_10;                             // 0x5AA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWaterVolume_C*                         K2Node_Event_water_3;                              // 0x5AB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWaterVolume_C*                         K2Node_Event_water_2;                              // 0x5AB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x5AC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AC1[0x7];                                     // 0x5AC1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWaterVolume_C*                         K2Node_Event_water_1;                              // 0x5AC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x5AD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x5AD4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AD5[0x3];                                     // 0x5AD5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AWaterVolume_C*                         K2Node_Event_water;                                // 0x5AD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_2;           // 0x5AE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AE1[0x3];                                     // 0x5AE1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x5AE4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x5AEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_3;             // 0x5AF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_ExecuteUbergraph_mainPlayer) == 0x000010, "Wrong alignment on MainPlayer_C_ExecuteUbergraph_mainPlayer");
static_assert(sizeof(MainPlayer_C_ExecuteUbergraph_mainPlayer) == 0x005B00, "Wrong size on MainPlayer_C_ExecuteUbergraph_mainPlayer");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, EntryPoint) == 0x000000, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::EntryPoint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable) == 0x000008, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_10) == 0x000020, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputKeyEvent_Key_4) == 0x000038, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputKeyEvent_Key_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputKeyEvent_Key_3) == 0x000050, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputKeyEvent_Key_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_1) == 0x000068, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputKeyEvent_Key_2) == 0x000080, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Key_GetDisplayName_ReturnValue) == 0x000098, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_TextToString_ReturnValue) == 0x0000B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_SwitchString_CmpSuccess) == 0x0000C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputKeyEvent_Key_1) == 0x0000C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_2) == 0x0000E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_9) == 0x0000F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_8) == 0x000110, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_7) == 0x000128, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_6) == 0x000140, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_3) == 0x000158, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputKeyEvent_Key) == 0x000170, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_5) == 0x000188, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_4) == 0x0001A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_4) == 0x0001B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_3) == 0x0001D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_2) == 0x0001E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_5) == 0x000200, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_1) == 0x000218, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key) == 0x000230, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_6) == 0x000248, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputAxisKeyEvent_AxisValue) == 0x000260, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputAxisKeyEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000264, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue) == 0x000265, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getSaveSlot_saveSlot) == 0x000268, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getSaveSlot_saveSlot' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate) == 0x000270, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000280, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000284, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_7) == 0x000288, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_11) == 0x000290, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_1) == 0x0002A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_8) == 0x0002B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_2) == 0x0002C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_1) == 0x0002D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue) == 0x0002D1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_9) == 0x0002D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_1) == 0x0002DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_12) == 0x0002E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_3) == 0x0002F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_ReleaseKey_ReturnValue) == 0x000308, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_ReleaseKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_PressKey_ReturnValue) == 0x000309, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_PressKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Create_ReturnValue) == 0x000310, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000318, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Player) == 0x000320, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess) == 0x000330, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_4) == 0x000334, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_asProp_return) == 0x000348, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_asProp_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Save_1) == 0x000350, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Save_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_1) == 0x000360, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_ignoreSave_ignoreSave) == 0x000361, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_ignoreSave_ignoreSave' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_2) == 0x000362, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_putObjectInventory2_return) == 0x000363, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_putObjectInventory2_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_3) == 0x000364, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_name_Variable) == 0x000368, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_bool_Variable) == 0x000370, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_4) == 0x000371, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsProp) == 0x000378, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsProp' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_2) == 0x000380, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetVelocity_ReturnValue) == 0x000384, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue) == 0x000390, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_LowEntry_LocalVariable_Value__Object) == 0x000398, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_LowEntry_LocalVariable_Value__Object' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Less_FloatFloat_ReturnValue) == 0x0003A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Dot_VectorVector_ReturnValue) == 0x0003A4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue) == 0x0003A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0003A9, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_1) == 0x0003AA, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_5) == 0x0003AC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_name_Variable_1) == 0x0003BC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_5) == 0x0003C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit) == 0x0003C5, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap) == 0x0003C6, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time) == 0x0003C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance) == 0x0003CC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location) == 0x0003D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint) == 0x0003DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal) == 0x0003E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal) == 0x0003F4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat) == 0x000400, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor) == 0x000408, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent) == 0x000410, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName) == 0x000418, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem) == 0x000420, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex) == 0x000424, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex) == 0x000428, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart) == 0x00042C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd) == 0x000438, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_MakeArray_Array) == 0x000448, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_name_Variable_2) == 0x000458, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_7) == 0x000460, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000478, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000479, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_1) == 0x00047C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_1) == 0x000480, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_1) == 0x000484, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000490, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_1) == 0x00049C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0004A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_1) == 0x0004B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_1) == 0x0004C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_1) == 0x0004C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_1) == 0x0004D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_1) == 0x0004D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_1) == 0x0004DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_1) == 0x0004E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_1) == 0x0004E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_1) == 0x0004F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_13) == 0x000500, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Objects) == 0x000518, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Objects' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_3) == 0x000528, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DoesImplementInterface_ReturnValue) == 0x000529, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_MontageToPlay_2) == 0x000530, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_MontageToPlay_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_StartingSection_1) == 0x000538, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_StartingSection_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_call) == 0x000540, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_call' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000548, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_6) == 0x000550, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_name) == 0x000554, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_name' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_MontageToPlay_1) == 0x000560, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_MontageToPlay_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_reload) == 0x000568, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_reload' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_bool_Variable_1) == 0x00056C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1) == 0x000570, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_attack_hit) == 0x000578, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_attack_hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_attack_OutputPin) == 0x00057C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_attack_OutputPin' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_attack_ReturnValue) == 0x000608, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_attack_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_7) == 0x000610, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_ClassDynamicCast_AsNail) == 0x000618, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_ClassDynamicCast_AsNail' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_ClassDynamicCast_bSuccess) == 0x000620, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_2) == 0x000621, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x000622, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_2) == 0x000624, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_2) == 0x000628, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_2) == 0x00062C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_2) == 0x000638, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_2) == 0x000644, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_2) == 0x000650, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_2) == 0x000660, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_2) == 0x000668, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_2) == 0x000670, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_2) == 0x000678, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_2) == 0x000680, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_2) == 0x000684, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_2) == 0x000688, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_2) == 0x00068C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_2) == 0x000698, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue) == 0x0006A4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Player_1) == 0x0006B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Player_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_4) == 0x0006C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_8) == 0x0006C1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_14) == 0x0006C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_9) == 0x0006E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Player_2) == 0x0006E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Player_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_5) == 0x0006F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue) == 0x000700, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_10) == 0x000730, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Objects_1) == 0x000738, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Objects_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_6) == 0x000748, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_object_Variable) == 0x000750, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_byte_Variable) == 0x000760, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Objects_2) == 0x000768, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Objects_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_7) == 0x000778, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00077C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000788, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000810, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000818, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsPrimitive_Component) == 0x000820, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_8) == 0x000828, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_11) == 0x000829, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue) == 0x00082A, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_2) == 0x00082B, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00082C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000830, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatMinusEquals_FloatOut) == 0x000834, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatMinusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000838, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_12) == 0x000839, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_byte_Variable_1) == 0x00083A, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_bool_Variable_2) == 0x00083B, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_8) == 0x000840, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_tryGetNail_success) == 0x000858, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_tryGetNail_success' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_tryGetNail_nailClass) == 0x000860, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_tryGetNail_nailClass' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000868, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_15) == 0x000878, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_1) == 0x000890, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0008C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getSaveSlot_saveSlot_1) == 0x0008C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getSaveSlot_saveSlot_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FinishSpawningActor_ReturnValue) == 0x0008D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_nailNail_fail) == 0x0008D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_nailNail_fail' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Get_Item) == 0x0008E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_16) == 0x0009E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_SwitchName_CmpSuccess) == 0x0009F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SetStaticMesh_ReturnValue) == 0x0009F9, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Ease_ReturnValue) == 0x0009FC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SetStaticMesh_ReturnValue_1) == 0x000A00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Ease_ReturnValue_1) == 0x000A04, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Ease_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SetStaticMesh_ReturnValue_2) == 0x000A08, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SetStaticMesh_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorForwardVector_ReturnValue) == 0x000A0C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000A18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000A24, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000A30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetUpVector_ReturnValue) == 0x000A3C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000A48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000A54, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000A60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000A6C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000A78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2) == 0x000A88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_13) == 0x000A90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3) == 0x000A98, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_14) == 0x000AA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_name_Variable_3) == 0x000AA4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName) == 0x000AAC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000AB4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_arm_start) == 0x000AC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_arm_start' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_arm_end) == 0x000ACC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_arm_end' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_arm_rotation) == 0x000AD8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_arm_rotation' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_54) == 0x000AE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_54' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_55) == 0x000B00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_55' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeVector_ReturnValue) == 0x000B18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeVector_ReturnValue_1) == 0x000B24, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeVector_ReturnValue_2) == 0x000B30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_2) == 0x000B40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_2) == 0x000B70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_3) == 0x000B71, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000B74, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_damage) == 0x000BFC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_damage' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Roll) == 0x000C00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Pitch) == 0x000C04, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Yaw) == 0x000C08, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_6) == 0x000C0C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotator_ReturnValue) == 0x000C1C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_LowEntry_LocalVariable_Value__1_Object) == 0x000C28, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_LowEntry_LocalVariable_Value__1_Object' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentRotation_ReturnValue_1) == 0x000C34, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue) == 0x000C40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_LowEntry_LocalVariable_Value__2_Object) == 0x000C48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_LowEntry_LocalVariable_Value__2_Object' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetRelativeTransform_ReturnValue) == 0x000C60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000C90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000C98, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000CA4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000CA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Location) == 0x000D30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Rotation) == 0x000D3C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Scale) == 0x000D48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x000D54, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_1) == 0x000D58, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_1) == 0x000D60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_AttachToComponent_ReturnValue_2) == 0x000D68, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_AttachToComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x000D70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000D78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000D84, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_3) == 0x000D90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_passOut) == 0x000DC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_passOut' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000DC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getSaveSlot_saveSlot_2) == 0x000DD0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getSaveSlot_saveSlot_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000DD8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000DDC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MapRangeClamped_ReturnValue) == 0x000DE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue) == 0x000DE4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000DE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000DEC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetAnimInstance_ReturnValue) == 0x000DF0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsKerfur_Omega_V1_Skeleton_Anim_Blueprint) == 0x000DF8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsKerfur_Omega_V1_Skeleton_Anim_Blueprint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_9) == 0x000E00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_AttachToComponent_ReturnValue_3) == 0x000E01, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_AttachToComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000E08, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SpawnSoundAttached_ReturnValue_1) == 0x000E10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SpawnSoundAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getSaveSlot_saveSlot_3) == 0x000E18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getSaveSlot_saveSlot_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000E20, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000E24, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_MakeArray_Array_1) == 0x000E28, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x000E38, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000E40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RandomBoolWithWeight_ReturnValue_1) == 0x000E50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RandomBoolWithWeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Contains_ReturnValue) == 0x000E51, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_15) == 0x000E52, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000E58, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_7) == 0x000E60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_2) == 0x000E70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getSaveSlot_saveSlot_4) == 0x000E78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getSaveSlot_saveSlot_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000E80, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000E81, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetComponentVelocity_ReturnValue) == 0x000E84, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_1) == 0x000E90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x000E94, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_FloatFloat_ReturnValue) == 0x000E98, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatMinusEquals_FloatOut_1) == 0x000E9C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatMinusEquals_FloatOut_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000EA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000EA1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LessEqual_FloatFloat_ReturnValue_2) == 0x000EA2, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LessEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_MakeStruct_ParticleSysParam) == 0x000EB0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_MakeStruct_ParticleSysParam' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_HitComponent) == 0x000F30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_OtherActor) == 0x000F38, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_OtherComp) == 0x000F40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NormalImpulse) == 0x000F48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_Hit) == 0x000F54, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_Hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_processArmor_damage) == 0x000FDC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_processArmor_damage' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_3) == 0x000FDD, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_3) == 0x000FDE, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_3) == 0x000FE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_3) == 0x000FE4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_3) == 0x000FE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_3) == 0x000FF4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_3) == 0x001000, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_3) == 0x00100C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_3) == 0x001018, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_3) == 0x001020, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_3) == 0x001028, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_3) == 0x001030, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_3) == 0x001038, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_3) == 0x00103C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_3) == 0x001040, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_3) == 0x001044, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_3) == 0x001050, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_2) == 0x00105C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x001060, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x00106C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_4) == 0x001070, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_6) == 0x00107C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2) == 0x001080, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x001084, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x001088, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x00108C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x001090, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetAnimInstance_ReturnValue_1) == 0x0010A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsKel_Lmao_Skeleton_Anim_Blueprint) == 0x0010A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsKel_Lmao_Skeleton_Anim_Blueprint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_10) == 0x0010B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetTransform_ReturnValue) == 0x0010C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x0010F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_X) == 0x0010FC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Y) == 0x001100, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Z) == 0x001104, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x001108, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x001110, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_updEquip_return) == 0x001140, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_updEquip_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_updEquip_rebug) == 0x001148, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_updEquip_rebug' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getSaveSlot_saveSlot_5) == 0x001158, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getSaveSlot_saveSlot_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_8) == 0x001160, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGameInstance_AsGame_Inst) == 0x001170, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGameInstance_AsGame_Inst' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getSaveSlot_saveSlot_6) == 0x001178, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getSaveSlot_saveSlot_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LessEqual_FloatFloat_ReturnValue_3) == 0x001180, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LessEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x001184, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x001190, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_4) == 0x001194, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_5) == 0x0011A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VInterpTo_ReturnValue) == 0x0011AC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0011B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_6) == 0x001240, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_7) == 0x00124C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_3) == 0x001258, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x00125C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LessEqual_FloatFloat_ReturnValue_4) == 0x001268, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LessEqual_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_3) == 0x001269, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_4) == 0x00126A, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_death) == 0x00126B, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_death' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_16) == 0x00126C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_17) == 0x00126D, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue) == 0x001270, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_3) == 0x001274, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_4) == 0x00127C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_9) == 0x001280, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_4) == 0x001290, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Roll_1) == 0x001298, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Pitch_1) == 0x00129C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Yaw_1) == 0x0012A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_18) == 0x0012A4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_10) == 0x0012A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_19) == 0x0012B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_17) == 0x0012C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_byte_Variable_2) == 0x0012D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_20) == 0x0012D9, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_21) == 0x0012DA, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_checkEquip_empty) == 0x0012DB, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_checkEquip_empty' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_checkEquip_Output) == 0x0012E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_checkEquip_Output' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x0013E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Coms) == 0x0013E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Coms' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_11) == 0x0013F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x001400, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Save_1_1) == 0x001408, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Save_1_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_12) == 0x001418, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_loadData_return) == 0x001419, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_loadData_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Coms_1) == 0x001420, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Coms_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_13) == 0x001430, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_byte_Variable_3) == 0x001431, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_22) == 0x001432, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_23) == 0x001433, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_bool_Variable_3) == 0x001434, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorForwardVector_ReturnValue_2) == 0x001438, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorRightVector_ReturnValue) == 0x001444, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x001450, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_5) == 0x00145C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x001468, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Dot_VectorVector_ReturnValue_2) == 0x00146C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Dot_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SignOfFloat_ReturnValue) == 0x001470, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SignOfFloat_ReturnValue_1) == 0x001474, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SignOfFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Abs_ReturnValue) == 0x001478, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Abs_ReturnValue_1) == 0x00147C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DegAcos_ReturnValue) == 0x001480, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DegAcos_ReturnValue_1) == 0x001484, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DegAcos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x001488, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00148C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x001490, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x001494, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotator_ReturnValue_1) == 0x001498, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_18) == 0x0014A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_byte_Variable_4) == 0x0014C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputAxisEvent_AxisValue_1) == 0x0014C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputAxisEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x0014C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputAxisEvent_AxisValue) == 0x0014CC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x0014D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x0014D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_9) == 0x0014D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_10) == 0x0014DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_11) == 0x0014E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_12) == 0x0014E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0014E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_13) == 0x0014EC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_1) == 0x0014F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_14) == 0x0014F4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotator_ReturnValue_2) == 0x0014F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotator_ReturnValue_3) == 0x001504, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x001510, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_AddRelativeRotation_SweepHitResult) == 0x001598, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_AddRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_2) == 0x001620, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_15) == 0x001624, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_3) == 0x001628, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotator_ReturnValue_4) == 0x00162C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_16) == 0x001638, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_AddWorldRotation_SweepHitResult) == 0x00163C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_AddWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_RotatorFloat_ReturnValue) == 0x0016C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_RotatorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_AddWorldRotation_SweepHitResult_1) == 0x0016D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_AddWorldRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_byte_Variable_5) == 0x001758, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_settings) == 0x001760, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_settings' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_1) == 0x001860, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_IntInt_ReturnValue) == 0x001864, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_IntInt_ReturnValue_1) == 0x001868, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_IntInt_ReturnValue_2) == 0x00186C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Percent_IntInt_ReturnValue) == 0x001870, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_IntInt_ReturnValue_3) == 0x001874, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Percent_IntInt_ReturnValue_1) == 0x001878, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_2) == 0x00187C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x001880, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_bool_Variable_4) == 0x001884, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_object_Variable_1) == 0x001888, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_24) == 0x001890, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_25) == 0x001891, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_26) == 0x001892, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_27) == 0x001893, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x001894, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_4) == 0x00191C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatMinusEquals_FloatOut_2) == 0x001920, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatMinusEquals_FloatOut_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x001924, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_28) == 0x001928, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_29) == 0x001929, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Create_ReturnValue_1) == 0x001930, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Subtract_IntInt_ReturnValue) == 0x001938, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_IntInt_ReturnValue_4) == 0x00193C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_5) == 0x001940, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatMinusEquals_FloatOut_3) == 0x001944, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatMinusEquals_FloatOut_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatPlusEquals_FloatOut_1) == 0x001948, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatPlusEquals_FloatOut_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_9) == 0x001950, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_7) == 0x001968, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MapRangeClamped_ReturnValue_1) == 0x00196C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_3) == 0x001970, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_8) == 0x001974, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_17) == 0x001980, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x001984, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x001994, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_19) == 0x001998, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetVelocity_ReturnValue_1) == 0x0019B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetVelocity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_4) == 0x0019BC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_8) == 0x0019C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x0019C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeVector_ReturnValue_3) == 0x0019C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VInterpTo_ReturnValue_1) == 0x0019D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_ClampVectorSize_ReturnValue) == 0x0019E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_ClampVectorSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x0019EC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_3) == 0x001A74, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_20) == 0x001A78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_4) == 0x001A90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_4) == 0x001A91, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_4) == 0x001A94, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_4) == 0x001A98, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_4) == 0x001A9C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_4) == 0x001AA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_4) == 0x001AB4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_4) == 0x001AC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_4) == 0x001AD0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_4) == 0x001AD8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_4) == 0x001AE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_4) == 0x001AE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_4) == 0x001AF0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_4) == 0x001AF4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_4) == 0x001AF8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_4) == 0x001AFC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_4) == 0x001B08, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Vector_Distance_ReturnValue) == 0x001B14, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_9) == 0x001B18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_VectorFloat_ReturnValue) == 0x001B1C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_1) == 0x001B28, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult_2) == 0x001B2C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_4) == 0x001BB4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VLerp_ReturnValue) == 0x001BB8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_10) == 0x001BC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VInterpTo_ReturnValue_2) == 0x001BE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VInterpTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult_3) == 0x001BEC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_processClimb_setClimb) == 0x001C74, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_processClimb_setClimb' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_processClimb_OutputPin) == 0x001C78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_processClimb_OutputPin' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_21) == 0x001C88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectColor_ReturnValue) == 0x001CA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x001CB0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerCameraManager_ReturnValue_2) == 0x001CB8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerCameraManager_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_30) == 0x001CC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x001CC4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x001CD0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_9) == 0x001CE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetInputAxisValue_ReturnValue) == 0x001CEC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetInputAxisValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetInputAxisValue_ReturnValue_1) == 0x001CF0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetInputAxisValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeVector2D_ReturnValue) == 0x001CF4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_31) == 0x001CFC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_3) == 0x001CFD, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_4) == 0x001CFE, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetInputAxisValue_ReturnValue_2) == 0x001D00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetInputAxisValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_5) == 0x001D04, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetInputAxisValue_ReturnValue_3) == 0x001D08, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetInputAxisValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeVector2D_ReturnValue_1) == 0x001D0C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_10) == 0x001D14, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_22) == 0x001D20, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetUpVector_ReturnValue_1) == 0x001D38, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetUpVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_6) == 0x001D44, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_obj_static_obj) == 0x001D50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_obj_static_obj' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x001D60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_actor_1) == 0x001D70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_actor_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_damage_6) == 0x001D78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_damage_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hit_8) == 0x001D7C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hit_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_impact_1) == 0x001E04, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_impact_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_skipSetting) == 0x001E10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_skipSetting' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x001E14, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x001E9C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_5) == 0x001E9D, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_6) == 0x001E9E, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x001E9F, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_7) == 0x001EA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_32) == 0x001EA1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Select_Default) == 0x001EA2, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_5) == 0x001EA4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_4) == 0x001EB0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_5) == 0x001EB4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_10) == 0x001EB8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatPlusEquals_FloatOut_2) == 0x001EBC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatPlusEquals_FloatOut_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_6) == 0x001EC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsWalking_ReturnValue) == 0x001EC4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsWalking_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainSave_save_main) == 0x001EC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainSave_save_main' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_6) == 0x001ED0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Vector_Distance_ReturnValue_1) == 0x001EDC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_7) == 0x001EE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatPlusEquals_FloatOut_3) == 0x001EEC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatPlusEquals_FloatOut_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_11) == 0x001EF0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_18) == 0x001F08, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_5) == 0x001F0C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DegSin_ReturnValue) == 0x001F10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_11) == 0x001F14, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_19) == 0x001F18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue) == 0x001F1C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_23) == 0x001F20, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_23' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_20) == 0x001F38, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DegSin_ReturnValue_1) == 0x001F3C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DegSin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_21) == 0x001F40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_22) == 0x001F44, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotator_ReturnValue_5) == 0x001F48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotator_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DegSin_ReturnValue_2) == 0x001F54, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DegSin_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_23) == 0x001F58, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x001F5C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_24) == 0x001FE4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_11) == 0x001FE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DegSin_ReturnValue_3) == 0x001FF8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DegSin_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_25) == 0x001FFC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeVector_ReturnValue_4) == 0x002000, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentRotation_ReturnValue_2) == 0x00200C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_7) == 0x002018, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult_4) == 0x002024, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetVelocity_ReturnValue_2) == 0x0020AC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetVelocity_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_updEquip_return_1) == 0x0020B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_updEquip_return_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_updEquip_rebug_1) == 0x0020C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_updEquip_rebug_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VInterpTo_ReturnValue_3) == 0x0020D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VInterpTo_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerCameraManager_ReturnValue_3) == 0x0020E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerCameraManager_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_5) == 0x0020E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_5) == 0x0020E9, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_5) == 0x0020EC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_5) == 0x0020F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_5) == 0x0020F4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_5) == 0x002100, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_5) == 0x00210C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_5) == 0x002118, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_5) == 0x002128, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_5) == 0x002130, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_5) == 0x002138, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_5) == 0x002140, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_5) == 0x002148, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_5) == 0x00214C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_5) == 0x002150, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_5) == 0x002154, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_5) == 0x002160, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_8) == 0x00216C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x002178, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Vector_Distance_ReturnValue_2) == 0x00217C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Vector_Distance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_1) == 0x002180, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_2) == 0x002184, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_6) == 0x002188, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_DeltaSeconds) == 0x00218C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_12) == 0x002190, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x002194, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_12) == 0x002198, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_26) == 0x0021A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0021B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatPlusEquals_FloatOut_4) == 0x0021B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatPlusEquals_FloatOut_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGameInstance_AsGame_Inst_1) == 0x0021C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGameInstance_AsGame_Inst_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RandomBoolWithWeight_ReturnValue_2) == 0x0021C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RandomBoolWithWeight_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Select_Default_1) == 0x0021CC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_24) == 0x0021D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_24' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_canBackrooms_return) == 0x0021F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_canBackrooms_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_6) == 0x0021F1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_AddActorWorldOffset_SweepHitResult) == 0x0021F4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_AddActorWorldOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_2) == 0x00227C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_12) == 0x002280, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGameInstance_AsGame_Inst_2) == 0x002298, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGameInstance_AsGame_Inst_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_3) == 0x0022A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetCurrentLevelName_ReturnValue_1) == 0x0022A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetCurrentLevelName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0022B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getSaveSlot_saveSlot_7) == 0x0022C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getSaveSlot_saveSlot_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Select_Default_2) == 0x0022C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_25) == 0x0022D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_25' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_DestroyedActor_1) == 0x0022E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_DestroyedActor_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_13) == 0x0022F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_33) == 0x002300, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x002308, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_2) == 0x002310, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_34) == 0x002318, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetControlRotation_ReturnValue) == 0x00231C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetForwardVector_ReturnValue) == 0x002328, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_6) == 0x002334, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x002338, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_3) == 0x002348, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RInterpTo_ReturnValue) == 0x002350, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetControlRotation_ReturnValue_1) == 0x00235C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetControlRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Roll_2) == 0x002368, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Pitch_2) == 0x00236C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Yaw_2) == 0x002370, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorRotation_ReturnValue) == 0x002374, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotator_ReturnValue_6) == 0x002380, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotator_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_7) == 0x00238C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RInterpTo_ReturnValue_1) == 0x002390, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_11) == 0x00239C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0023A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_4) == 0x0023B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetViewTarget_ReturnValue) == 0x0023B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0023C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_9) == 0x0023C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_5) == 0x0023D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_MontageToPlay) == 0x0023E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_MontageToPlay' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_4) == 0x0023F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerCameraManager_ReturnValue_4) == 0x002420, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerCameraManager_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_10) == 0x002428, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_26) == 0x002438, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_26' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_obj_static_obj_1) == 0x002450, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_obj_static_obj_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_4) == 0x002460, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_35) == 0x002468, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Player_3) == 0x002470, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Player_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_14) == 0x002480, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Player_4) == 0x002488, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Player_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_15) == 0x002498, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DoesImplementInterface_ReturnValue_1) == 0x002499, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DoesImplementInterface_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_asProp_return_1) == 0x0024A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_asProp_return_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_36) == 0x0024A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_4) == 0x0024AC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x0024B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsSimulatingPhysics_ReturnValue_1) == 0x0024B4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsSimulatingPhysics_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_5) == 0x0024B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_5) == 0x0024BC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_5) == 0x0024C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_BoolToFloat_ReturnValue_2) == 0x0024C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_BoolToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_6) == 0x0024C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_27) == 0x0024CC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_6) == 0x0024D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_6) == 0x0024D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerCameraManager_ReturnValue_5) == 0x0024D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerCameraManager_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_BoolToFloat_ReturnValue_3) == 0x0024E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_BoolToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorRightVector_ReturnValue_1) == 0x0024E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorRightVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_28) == 0x0024F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_8) == 0x0024F4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_7) == 0x0024F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerCameraManager_ReturnValue_6) == 0x002500, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerCameraManager_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_29) == 0x002508, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorForwardVector_ReturnValue_3) == 0x00250C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorForwardVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_30) == 0x002518, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_31) == 0x00251C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_8) == 0x002520, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_9) == 0x00252C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_32) == 0x002538, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_10) == 0x00253C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_6) == 0x002548, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_7) == 0x002554, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_MakeStruct_WeightedBlendable) == 0x002560, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_MakeStruct_WeightedBlendable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_MakeArray_Array_2) == 0x002570, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_37) == 0x002580, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_MakeStruct_WeightedBlendables) == 0x002588, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_MakeStruct_WeightedBlendables' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x002598, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGameInstance_AsGame_Inst_3) == 0x0025A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGameInstance_AsGame_Inst_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x0025A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0025A9, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isBuoyant__buoyant_) == 0x0025AA, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isBuoyant__buoyant_' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_7) == 0x0025AB, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_14) == 0x0025AC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x0025C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_byte_Variable_6) == 0x0025C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_6) == 0x0025CC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_8) == 0x0025D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_9) == 0x0025E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_9) == 0x0025E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_10) == 0x0025F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_10) == 0x0025FC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_11) == 0x002600, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_12) == 0x002604, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Coms_2) == 0x002608, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Coms_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_16) == 0x002618, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_38) == 0x002619, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_39) == 0x00261A, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_15) == 0x00261C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetTimerDelegate_ReturnValue_3) == 0x002630, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetTimerDelegate_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Coms_3) == 0x002638, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Coms_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_17) == 0x002648, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_40) == 0x002649, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_BoolToFloat_ReturnValue_4) == 0x00264C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_BoolToFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_BoolToFloat_ReturnValue_5) == 0x002650, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_BoolToFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_33) == 0x002654, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_34) == 0x002658, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FInterpTo_ReturnValue) == 0x00265C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FInterpTo_ReturnValue_1) == 0x002660, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_BoolToFloat_ReturnValue_6) == 0x002664, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_BoolToFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_BoolToFloat_ReturnValue_7) == 0x002668, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_BoolToFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FInterpTo_ReturnValue_2) == 0x00266C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FInterpTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FInterpTo_ReturnValue_3) == 0x002670, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FInterpTo_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Ease_ReturnValue_2) == 0x002674, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Ease_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Ease_ReturnValue_3) == 0x002678, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Ease_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RLerp_ReturnValue) == 0x00267C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VLerp_ReturnValue_1) == 0x002688, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_5) == 0x0026A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeTransform_SweepHitResult_1) == 0x0026D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_X_1) == 0x002758, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Y_1) == 0x00275C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Z_1) == 0x002760, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_35) == 0x002764, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_13) == 0x002768, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_3) == 0x00276C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsSimulatingPhysics_ReturnValue_2) == 0x002770, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsSimulatingPhysics_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_13) == 0x002774, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_byte_Variable_7) == 0x002778, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorRightVector_ReturnValue_2) == 0x00277C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorRightVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_16) == 0x002788, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_VectorFloat_ReturnValue_1) == 0x002798, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Dot_VectorVector_ReturnValue_3) == 0x0027A4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Dot_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_36) == 0x0027A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_4) == 0x0027AC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_37) == 0x0027B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_14) == 0x0027B4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsCrouching_ReturnValue) == 0x0027B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsCrouching_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DegCos_ReturnValue) == 0x0027BC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_8) == 0x0027C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsFalling_ReturnValue) == 0x0027C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_9) == 0x0027C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_7) == 0x0027CC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_15) == 0x0027D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_16) == 0x0027D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DegCos_ReturnValue_1) == 0x0027D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DegCos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_5) == 0x0027DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_6) == 0x0027E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_38) == 0x0027E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_39) == 0x0027E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_40) == 0x0027EC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_41) == 0x0027F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_42) == 0x0027F4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_43) == 0x0027F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DegSin_ReturnValue_4) == 0x0027FC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DegSin_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x002800, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_44) == 0x002804, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_14) == 0x002808, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_45) == 0x00280C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_46) == 0x002810, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_46' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_47) == 0x002814, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_47' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_48) == 0x002818, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_48' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x00281C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_13) == 0x002820, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotator_ReturnValue_7) == 0x002838, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotator_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatPlusEquals_FloatOut_5) == 0x002844, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatPlusEquals_FloatOut_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_6) == 0x002850, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RInterpTo_ReturnValue_2) == 0x002880, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RInterpTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeTransform_SweepHitResult_2) == 0x00288C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeTransform_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeRotation_SweepHitResult_2) == 0x002914, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_10) == 0x00299C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_7) == 0x0029A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_27) == 0x0029A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_27' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_11) == 0x0029C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_17) == 0x0029C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_18) == 0x0029C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_FloatFloat_ReturnValue_5) == 0x0029CC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_7) == 0x0029D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_49) == 0x0029D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_49' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_15) == 0x0029D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_28) == 0x0029E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_28' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_8) == 0x0029F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_12) == 0x0029FC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_50) == 0x002A00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_50' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatPlusEquals_FloatOut_6) == 0x002A04, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatPlusEquals_FloatOut_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_7) == 0x002A08, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetGlobalTimeDilation_ReturnValue) == 0x002A0C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetGlobalTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_16) == 0x002A10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_17) == 0x002A14, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_19) == 0x002A18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_20) == 0x002A1C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_21) == 0x002A20, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isDreaming_dreaming) == 0x002A24, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isDreaming_dreaming' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsFalling_ReturnValue_1) == 0x002A25, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsFalling_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_8) == 0x002A28, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_13) == 0x002A2C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_14) == 0x002A30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x002A34, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_22) == 0x002A38, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FMax_ReturnValue) == 0x002A3C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_23) == 0x002A40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_8) == 0x002A44, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_8) == 0x002A48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_51) == 0x002A4C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_51' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_9) == 0x002A50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_52) == 0x002A54, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_52' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isDreaming_dreaming_1) == 0x002A58, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isDreaming_dreaming_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_18) == 0x002A5C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_24) == 0x002A60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_53) == 0x002A64, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_53' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatMinusEquals_FloatOut_4) == 0x002A68, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatMinusEquals_FloatOut_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LessEqual_FloatFloat_ReturnValue_5) == 0x002A6C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LessEqual_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_41) == 0x002A6D, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetForwardVector_ReturnValue_1) == 0x002A70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentRotation_ReturnValue_3) == 0x002A7C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentRotation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_11) == 0x002A88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_12) == 0x002A94, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_11) == 0x002AA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_object_Variable_2) == 0x002AB0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LineTraceSingle_OutHit) == 0x002AC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LineTraceSingle_ReturnValue) == 0x002B48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_6) == 0x002B49, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_6) == 0x002B4A, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_6) == 0x002B4C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_6) == 0x002B50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_6) == 0x002B54, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_6) == 0x002B60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_6) == 0x002B6C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_6) == 0x002B78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_6) == 0x002B88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_6) == 0x002B90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_6) == 0x002B98, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_6) == 0x002BA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_6) == 0x002BA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_6) == 0x002BAC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_6) == 0x002BB0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_6) == 0x002BB4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_6) == 0x002BC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsSimulatingPhysics_ReturnValue_3) == 0x002BCC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsSimulatingPhysics_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetCollisionObjectType_ReturnValue) == 0x002BCD, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetCollisionObjectType_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_8) == 0x002BCE, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x002BCF, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsMurder_Kerfuro_Dig) == 0x002BD0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsMurder_Kerfuro_Dig' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_18) == 0x002BD8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsActor_Chip_Pile) == 0x002BE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsActor_Chip_Pile' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_19) == 0x002BE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x002BE9, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x002BEA, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectInt_ReturnValue) == 0x002BEC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x002BF0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ObjectObject_ReturnValue_5) == 0x002BF1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ObjectObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectInt_ReturnValue_1) == 0x002BF4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_8) == 0x002BF8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Cross_VectorVector_ReturnValue) == 0x002BFC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_9) == 0x002C08, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotationFromAxes_ReturnValue) == 0x002C0C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotationFromAxes_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_10) == 0x002C18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_7) == 0x002C20, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_9) == 0x002C50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x002C58, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_10) == 0x002C60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x002C68, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_9) == 0x002C70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_MakeArray_Array_3) == 0x002C78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_object_Variable_3) == 0x002C88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_LowEntry_LocalVariable_Value__3_Object) == 0x002C98, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_LowEntry_LocalVariable_Value__3_Object' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_obj_statDyn_obj) == 0x002CA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_obj_statDyn_obj' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_obj_phys_obj) == 0x002CB8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_obj_phys_obj' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Objects_3) == 0x002CC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Objects_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_20) == 0x002CD8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_42) == 0x002CD9, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DoesImplementInterface_ReturnValue_2) == 0x002CDA, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DoesImplementInterface_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainSave_save_main_1) == 0x002CE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainSave_save_main_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_14) == 0x002CE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_29) == 0x002D00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_29' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_30) == 0x002D18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_30' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_15) == 0x002D30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_31) == 0x002D48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_31' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_32) == 0x002D60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_32' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_43) == 0x002D78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_7) == 0x002D79, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_7) == 0x002D7A, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_7) == 0x002D7C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_7) == 0x002D80, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_7) == 0x002D84, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_7) == 0x002D90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_7) == 0x002D9C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_7) == 0x002DA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_7) == 0x002DB8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_7) == 0x002DC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_7) == 0x002DC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_7) == 0x002DD0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_7) == 0x002DD8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_7) == 0x002DDC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_7) == 0x002DE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_7) == 0x002DE4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_7) == 0x002DF0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_10) == 0x002DFC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Objects_4) == 0x002E00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Objects_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_21) == 0x002E10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_11) == 0x002E11, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Player_5) == 0x002E18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Player_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_22) == 0x002E28, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_asProp_return_2) == 0x002E30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_asProp_return_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Player_6) == 0x002E38, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Player_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_23) == 0x002E48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_23' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_lookAt_return) == 0x002E49, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_lookAt_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_lookAt_text) == 0x002E50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_lookAt_text' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_lookAt_boundObjectReplace) == 0x002E60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_lookAt_boundObjectReplace' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_lookAt_number) == 0x002E68, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_lookAt_number' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_44) == 0x002E69, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x002E6A, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_45) == 0x002E6B, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_StringToText_ReturnValue) == 0x002E70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_StringToText_ReturnValue_1) == 0x002E88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getName_name) == 0x002EA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getName_name' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ObjectObject_ReturnValue_6) == 0x002EB8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ObjectObject_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_arm_start_1) == 0x002EBC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_arm_start_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_arm_end_1) == 0x002EC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_arm_end_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_arm_rotation_1) == 0x002ED4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_arm_rotation_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SphereTraceSingle_OutHit) == 0x002EE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SphereTraceSingle_ReturnValue) == 0x002F68, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_46) == 0x002F69, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_46' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_8) == 0x002F6A, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_8) == 0x002F6B, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_8) == 0x002F6C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_8) == 0x002F70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_8) == 0x002F74, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_8) == 0x002F80, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_8) == 0x002F8C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_8) == 0x002F98, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_8) == 0x002FA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_8) == 0x002FB0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_8) == 0x002FB8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_8) == 0x002FC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_8) == 0x002FC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_8) == 0x002FCC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_8) == 0x002FD0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_8) == 0x002FD4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_8) == 0x002FE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_47) == 0x002FEC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_47' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetCollisionObjectType_ReturnValue_1) == 0x002FED, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetCollisionObjectType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x002FEE, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SphereTraceSingleForObjects_OutHit_1) == 0x002FF0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SphereTraceSingleForObjects_OutHit_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SphereTraceSingleForObjects_ReturnValue_1) == 0x003078, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SphereTraceSingleForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_9) == 0x003079, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_9) == 0x00307A, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_9) == 0x00307C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_9) == 0x003080, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_9) == 0x003084, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_9) == 0x003090, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_9) == 0x00309C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_9) == 0x0030A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_9) == 0x0030B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_9) == 0x0030C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_9) == 0x0030C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_9) == 0x0030D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_9) == 0x0030D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_9) == 0x0030DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_9) == 0x0030E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_9) == 0x0030E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_9) == 0x0030F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0030FC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x003184, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_findFootLocation_ReturnValue) == 0x003188, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_findFootLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_33) == 0x003198, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_33' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_step_OutHit) == 0x0031B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_step_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x003238, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_11) == 0x003239, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_15) == 0x00323C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_16) == 0x003240, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_4) == 0x003244, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetVelocity_ReturnValue_3) == 0x003248, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetVelocity_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_9) == 0x003254, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_5) == 0x003258, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Vector_Distance_ReturnValue_3) == 0x00325C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Vector_Distance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_54) == 0x003260, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_54' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatPlusEquals_FloatOut_7) == 0x003264, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatPlusEquals_FloatOut_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_19) == 0x003268, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_55) == 0x00326C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_55' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_34) == 0x003270, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_34' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x003288, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatMinusEquals_FloatOut_5) == 0x00328C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatMinusEquals_FloatOut_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_name_Variable_4) == 0x003290, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_11) == 0x003298, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_SwitchName_CmpSuccess_1) == 0x0032A4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_SwitchName_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_12) == 0x0032A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetClosestPointOnCollision_OutPointOnBody) == 0x0032B4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetClosestPointOnCollision_OutPointOnBody' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetClosestPointOnCollision_ReturnValue) == 0x0032C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetClosestPointOnCollision_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_35) == 0x0032C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_35' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x0032E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_10) == 0x0032EC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Subtract_FloatFloat_ReturnValue_4) == 0x0032F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Subtract_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0032F4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_25) == 0x003300, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Normal_ReturnValue) == 0x003304, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_9) == 0x003310, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerCameraManager_ReturnValue_7) == 0x003318, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerCameraManager_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_17) == 0x003320, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_36) == 0x003328, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_36' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_12) == 0x003340, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_37) == 0x003348, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_37' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_38) == 0x003360, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_38' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_10) == 0x003378, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_11) == 0x003380, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_39) == 0x003388, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_39' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_40) == 0x0033A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_40' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_12) == 0x0033B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_41) == 0x0033C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_41' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x0033D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_6) == 0x0033D9, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_20) == 0x0033DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_12) == 0x0033E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_56) == 0x0033E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_56' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_13) == 0x0033E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_FloatFloat_ReturnValue_6) == 0x0033EC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_13) == 0x0033F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_42) == 0x003400, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_42' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_X_2) == 0x003418, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Y_2) == 0x00341C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Z_2) == 0x003420, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_43) == 0x003428, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_43' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_LastIndex_ReturnValue) == 0x003440, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Get_Item_1) == 0x003448, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_X_3) == 0x003450, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Y_3) == 0x003454, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Z_3) == 0x003458, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Subtract_FloatFloat_ReturnValue_5) == 0x00345C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Subtract_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_26) == 0x003460, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_10) == 0x003464, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_44) == 0x003468, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_44' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_21) == 0x003480, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_18) == 0x003484, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_45) == 0x003488, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_45' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_57) == 0x0034A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_57' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_12) == 0x0034A4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_19) == 0x0034B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_13) == 0x0034B4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_22) == 0x0034C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_14) == 0x0034C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_58) == 0x0034D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_58' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_VectorFloat_ReturnValue_2) == 0x0034D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_59) == 0x0034E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_59' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_12) == 0x0034E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeVector_ReturnValue_5) == 0x0034F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_46) == 0x003500, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_46' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_47) == 0x003518, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_47' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_13) == 0x003530, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_48) == 0x003538, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_48' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectVector_ReturnValue) == 0x003550, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_15) == 0x00355C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_16) == 0x003568, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_VectorFloat_ReturnValue_3) == 0x003574, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_17) == 0x003580, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_49) == 0x003590, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_49' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_48) == 0x0035A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_48' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetTransform_ReturnValue_1) == 0x0035B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Location_1) == 0x0035E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Rotation_1) == 0x0035EC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Scale_1) == 0x0035F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_8) == 0x003610, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_TransformLocation_ReturnValue) == 0x003640, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_50) == 0x003650, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_50' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_findFootLocation_ReturnValue_1) == 0x003668, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_findFootLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_11) == 0x003674, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_10) == 0x00367C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_10) == 0x00367D, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_10) == 0x003680, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_10) == 0x003684, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_10) == 0x003688, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_10) == 0x003694, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_10) == 0x0036A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_10) == 0x0036AC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_10) == 0x0036B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_10) == 0x0036C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_10) == 0x0036C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_10) == 0x0036D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_10) == 0x0036D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_10) == 0x0036DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_10) == 0x0036E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_10) == 0x0036E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_10) == 0x0036F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetTransform_ReturnValue_2) == 0x003700, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Location_2) == 0x003730, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Rotation_2) == 0x00373C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Scale_2) == 0x003748, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ObjectObject_ReturnValue_7) == 0x003754, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ObjectObject_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_9) == 0x003760, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_InverseTransformLocation_ReturnValue) == 0x003790, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_18) == 0x00379C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_12) == 0x0037AC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_13) == 0x0037B4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_19) == 0x0037BC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_14) == 0x0037CC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_20) == 0x0037D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_51) == 0x0037E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_51' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_21) == 0x003800, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_name_Variable_5) == 0x003810, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_SwitchName_CmpSuccess_2) == 0x003818, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_SwitchName_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_skipGrabRadial_skip) == 0x003819, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_skipGrabRadial_skip' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_LowEntry_LocalVariable_Value__4_Object) == 0x00381A, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_LowEntry_LocalVariable_Value__4_Object' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_49) == 0x00381B, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_49' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanXOR_ReturnValue) == 0x00381C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanXOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_14) == 0x00381D, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_11) == 0x00381E, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_11) == 0x00381F, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_11) == 0x003820, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_11) == 0x003824, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_11) == 0x003828, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_11) == 0x003834, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_11) == 0x003840, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_11) == 0x00384C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_11) == 0x003858, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_11) == 0x003860, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_11) == 0x003868, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_11) == 0x003870, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_11) == 0x003878, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_11) == 0x00387C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_11) == 0x003880, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_11) == 0x003884, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_11) == 0x003890, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_50) == 0x00389C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_50' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_useAction_succ) == 0x00389D, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_useAction_succ' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_51) == 0x00389E, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_51' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_15) == 0x0038A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_52) == 0x0038A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_52' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_22) == 0x0038AC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_27) == 0x0038BC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Ease_ReturnValue_4) == 0x0038C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Ease_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_53) == 0x0038C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_53' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_54) == 0x0038C5, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_54' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_16) == 0x0038C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_arm_start_2) == 0x0038D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_arm_start_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_arm_end_2) == 0x0038DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_arm_end_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_arm_rotation_2) == 0x0038E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_arm_rotation_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Player_7) == 0x0038F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Player_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_24) == 0x003908, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_24' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isDreaming_dreaming_2) == 0x003909, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isDreaming_dreaming_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_collectObject_collected) == 0x00390A, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_collectObject_collected' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_14) == 0x00390B, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_obj_statDynPhys_obj) == 0x003910, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_obj_statDynPhys_obj' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_15) == 0x003920, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_bool_Variable_5) == 0x003921, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerCameraManager_ReturnValue_8) == 0x003928, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerCameraManager_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_14) == 0x003930, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Select_Default_3) == 0x003940, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SphereTraceSingleForObjects_OutHit_2) == 0x003948, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SphereTraceSingleForObjects_OutHit_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SphereTraceSingleForObjects_ReturnValue_2) == 0x0039D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SphereTraceSingleForObjects_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorRightVector_ReturnValue_3) == 0x0039D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorRightVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_12) == 0x0039E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_12) == 0x0039E1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_12) == 0x0039E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_12) == 0x0039E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_12) == 0x0039EC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_12) == 0x0039F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_12) == 0x003A04, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_12) == 0x003A10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_12) == 0x003A20, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_12) == 0x003A28, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_12) == 0x003A30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_12) == 0x003A38, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_12) == 0x003A40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_12) == 0x003A44, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_12) == 0x003A48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_12) == 0x003A4C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_12) == 0x003A58, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_13) == 0x003A64, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorForwardVector_ReturnValue_4) == 0x003A70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorForwardVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_14) == 0x003A7C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_15) == 0x003A88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectVector_ReturnValue_1) == 0x003A94, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectVector_ReturnValue_2) == 0x003AA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectVector_ReturnValue_3) == 0x003AAC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectVector_ReturnValue_4) == 0x003AB8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_dontWakeup) == 0x003AC4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_dontWakeup' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_alt) == 0x003AC5, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_alt' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_dontCollect) == 0x003AC6, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_dontCollect' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_16) == 0x003AC7, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_17) == 0x003AC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_updEquip_return_2) == 0x003AC9, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_updEquip_return_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_updEquip_rebug_2) == 0x003AD0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_updEquip_rebug_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getSaveSlot_saveSlot_8) == 0x003AE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getSaveSlot_saveSlot_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_23) == 0x003AE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_23' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetTransform_ReturnValue_3) == 0x003B00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_checkEquip_empty_1) == 0x003B30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_checkEquip_empty_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_checkEquip_Output_1) == 0x003B40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_checkEquip_Output_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Location_3) == 0x003C40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Rotation_3) == 0x003C4C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Scale_3) == 0x003C58, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_ComposeRotators_ReturnValue) == 0x003C64, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectVector_ReturnValue_5) == 0x003C70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectVector_ReturnValue_6) == 0x003C7C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_17) == 0x003C88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_10) == 0x003C90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3) == 0x003CC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FinishSpawningActor_ReturnValue_3) == 0x003CC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FinishSpawningActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Save_1_2) == 0x003CD0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Save_1_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_25) == 0x003CE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_25' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_loadData_return_1) == 0x003CE1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_loadData_return_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_putObjectInventory2_return_1) == 0x003CE2, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_putObjectInventory2_return_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_10) == 0x003CE4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x003CE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult_5) == 0x003CF4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_11) == 0x003D7C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_11) == 0x003D80, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SetVectorLength_ReturnValue) == 0x003D84, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SetVectorLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult_6) == 0x003D90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_lookAt_return_1) == 0x003E18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_lookAt_return_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_lookAt_text_1) == 0x003E20, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_lookAt_text_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_lookAt_boundObjectReplace_1) == 0x003E30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_lookAt_boundObjectReplace_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_lookAt_number_1) == 0x003E38, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_lookAt_number_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_24) == 0x003E3C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_24' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_55) == 0x003E4C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_55' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_56) == 0x003E4D, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_56' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_13) == 0x003E50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetWorldLocation_SweepHitResult_2) == 0x003E5C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetWorldLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_13) == 0x003EE4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_15) == 0x003EE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_15) == 0x003EF4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x003EF8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_57) == 0x003F04, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_57' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetMass_ReturnValue) == 0x003F08, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentRotation_ReturnValue_4) == 0x003F0C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentRotation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_28) == 0x003F18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_12) == 0x003F1C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_18) == 0x003F20, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x003F28, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_18) == 0x003F29, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectInt_ReturnValue_2) == 0x003F2C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetForwardVector_ReturnValue_2) == 0x003F30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x003F3C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_4dir_return) == 0x003FC4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_4dir_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_VectorToRotator_ReturnValue_1) == 0x003FD0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_VectorToRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentRotation_ReturnValue_5) == 0x003FDC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentRotation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeRotation_SweepHitResult_3) == 0x003FE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeRotation_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_hitResult) == 0x004070, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_hitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_13) == 0x0040F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_13) == 0x0040F9, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_13) == 0x0040FC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_13) == 0x004100, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_13) == 0x004104, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_13) == 0x004110, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_13) == 0x00411C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_13) == 0x004128, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_13) == 0x004138, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_13) == 0x004140, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_13) == 0x004148, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_13) == 0x004150, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_13) == 0x004158, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_13) == 0x00415C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_13) == 0x004160, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_13) == 0x004164, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_13) == 0x004170, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetCenterOfMass_ReturnValue) == 0x00417C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetCenterOfMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetRootComponent_ReturnValue_1) == 0x004188, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetRootComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsPrimitive_Component_1) == 0x004190, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsPrimitive_Component_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_26) == 0x004198, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_26' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x004199, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetClosestPointOnCollision_OutPointOnBody_1) == 0x00419C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetClosestPointOnCollision_OutPointOnBody_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetClosestPointOnCollision_ReturnValue_1) == 0x0041A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetClosestPointOnCollision_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetWorldLocation_SweepHitResult_3) == 0x0041AC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetWorldLocation_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_25) == 0x004234, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_25' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x004244, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Vector_Distance_ReturnValue_4) == 0x004250, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Vector_Distance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetWorldLocation_SweepHitResult_4) == 0x004254, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetWorldLocation_SweepHitResult_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LessEqual_FloatFloat_ReturnValue_6) == 0x0042DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LessEqual_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_19) == 0x0042E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_26) == 0x0042E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_26' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_hasEquipment_return) == 0x0042F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_hasEquipment_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_20) == 0x0042FC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isStrong_return) == 0x004300, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isStrong_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_21) == 0x004304, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_step_OutHit_1) == 0x004308, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_step_OutHit_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_bool_Variable_6) == 0x004390, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Select_Default_4) == 0x004398, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getActionOptions_options) == 0x0043A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getActionOptions_options' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getActionOptions_options_enum) == 0x0043B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getActionOptions_options_enum' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getActionOptions_optionsNamesOverlay) == 0x0043C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getActionOptions_optionsNamesOverlay' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getActionOptions_number) == 0x0043D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getActionOptions_number' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Length_ReturnValue) == 0x0043D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Length_ReturnValue_1) == 0x0043D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Max_ReturnValue) == 0x0043DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ObjectObject_ReturnValue_8) == 0x0043E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ObjectObject_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_16) == 0x0043E1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_17) == 0x0043E2, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_11) == 0x0043E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_X_4) == 0x0043E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Y_4) == 0x0043EC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Z_4) == 0x0043F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_12) == 0x0043F4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Abs_ReturnValue_2) == 0x0043F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Abs_ReturnValue_3) == 0x0043FC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Abs_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Abs_ReturnValue_4) == 0x004400, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Abs_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_FloatFloat_ReturnValue_7) == 0x004404, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_29) == 0x004408, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_FloatFloat_ReturnValue_8) == 0x00440C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_step_OutHit_2) == 0x004410, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_step_OutHit_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_60) == 0x004498, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_60' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_MakeArray_Array_4) == 0x0044A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_61) == 0x0044B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_61' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isDreaming_dreaming_3) == 0x0044B4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isDreaming_dreaming_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_30) == 0x0044B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_31) == 0x0044BC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_7) == 0x0044C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_7) == 0x0044C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_8) == 0x0044C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainSave_save_main_2) == 0x0044D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainSave_save_main_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_IntInt_ReturnValue_5) == 0x0044D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_11) == 0x0044E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeTransform_SweepHitResult_3) == 0x004510, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeTransform_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_58) == 0x004598, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_58' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hit_7) == 0x00459C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hit_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_14) == 0x004624, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_14) == 0x004625, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_14) == 0x004628, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_14) == 0x00462C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_14) == 0x004630, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_14) == 0x00463C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_14) == 0x004648, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_14) == 0x004654, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_14) == 0x004660, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_14) == 0x004668, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_14) == 0x004670, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_14) == 0x004678, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_14) == 0x004680, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_14) == 0x004684, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_14) == 0x004688, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_14) == 0x00468C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_14) == 0x004698, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Player_8) == 0x0046A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Player_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_27) == 0x0046B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_27' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Player_9) == 0x0046C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Player_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_28) == 0x0046D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_28' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_landedOn_ignoreFallDamage) == 0x0046D1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_landedOn_ignoreFallDamage' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_landedOn_ignoreFallDamage_1) == 0x0046D2, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_landedOn_ignoreFallDamage_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DoesImplementInterface_ReturnValue_3) == 0x0046D3, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DoesImplementInterface_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Contains_ReturnValue_1) == 0x0046D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_RemoveItem_ReturnValue) == 0x0046D5, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_hasEquipment_return_1) == 0x0046D6, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_hasEquipment_return_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_AddUnique_ReturnValue) == 0x0046D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_22) == 0x0046DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_hasEquipment_return_2) == 0x0046E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_hasEquipment_return_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_hasEquipment_return_3) == 0x0046E1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_hasEquipment_return_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getSaveSlot_saveSlot_9) == 0x0046E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getSaveSlot_saveSlot_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_12) == 0x0046F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_32) == 0x0046F4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_9) == 0x0046F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_FloatFloat_ReturnValue_9) == 0x0046FC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isUnderwater_ReturnValue) == 0x004700, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isUnderwater_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_10) == 0x004701, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_23) == 0x004704, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_62) == 0x004708, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_62' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_11) == 0x00470C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatMinusEquals_FloatOut_6) == 0x004710, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatMinusEquals_FloatOut_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RandomFloatInRange_ReturnValue) == 0x004714, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x004718, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_5) == 0x004720, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorRightVector_ReturnValue_4) == 0x004728, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorRightVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorForwardVector_ReturnValue_5) == 0x004734, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorForwardVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RotateAngleAxis_ReturnValue) == 0x004740, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x00474C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_VectorToRotator_ReturnValue_2) == 0x004758, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_VectorToRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_fuel) == 0x004764, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_fuel' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_16) == 0x004768, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FMax_ReturnValue_1) == 0x004780, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_59) == 0x004784, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_59' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_60) == 0x004785, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_60' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_56) == 0x004788, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_56' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_6) == 0x0047A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_24) == 0x0047A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_VectorFloat_ReturnValue_4) == 0x0047AC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Select_Default_5) == 0x0047B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isBuoyant__buoyant__1) == 0x0047B9, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isBuoyant__buoyant__1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Select_Default_6) == 0x0047BA, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_14) == 0x0047BB, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_57) == 0x0047C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_57' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsGamePaused_ReturnValue) == 0x0047D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsGamePaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_61) == 0x0047D9, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_61' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isDreaming_dreaming_4) == 0x0047DA, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isDreaming_dreaming_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_7) == 0x0047E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult_7) == 0x0047E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_62) == 0x004870, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_62' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult) == 0x004874, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_8) == 0x004900, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentRotation_ReturnValue_6) == 0x004908, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentRotation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_LowEntry_LocalVariable_Value__5_Object) == 0x004914, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_LowEntry_LocalVariable_Value__5_Object' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_1) == 0x004920, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_AttachToComponent_ReturnValue_4) == 0x0049A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_AttachToComponent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_AttachToComponent_ReturnValue_5) == 0x0049A9, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_AttachToComponent_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_StartingSection) == 0x0049AC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_StartingSection' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_5) == 0x0049B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_NotEqualExactly_VectorVector_ReturnValue) == 0x0049C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_NotEqualExactly_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_63) == 0x0049C1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_63' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_float_Variable) == 0x0049C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getSaveSlot_saveSlot_10) == 0x0049C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getSaveSlot_saveSlot_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatMinusEquals_FloatOut_7) == 0x0049D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatMinusEquals_FloatOut_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_12) == 0x0049D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_LowEntry_LocalVariable_Value__6_Object) == 0x0049D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_LowEntry_LocalVariable_Value__6_Object' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_float_Variable_1) == 0x0049E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_X_5) == 0x0049E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Y_5) == 0x0049EC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Z_5) == 0x0049F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_bool_Has_Been_Initd_Variable) == 0x0049F4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_step_OutHit_3) == 0x0049F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_step_OutHit_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_float_Variable_2) == 0x004A80, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_float_Variable_3) == 0x004A84, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_16) == 0x004A88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_LowEntry_LocalVariable_Value__7_Object) == 0x004A94, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_LowEntry_LocalVariable_Value__7_Object' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_X_6) == 0x004AA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Y_6) == 0x004AA4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Z_6) == 0x004AA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_13) == 0x004AAC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_14) == 0x004AB0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_15) == 0x004AB4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeVector_ReturnValue_6) == 0x004AB8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_16) == 0x004AC4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_12) == 0x004AD0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetAllSocketNames_ReturnValue) == 0x004B00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetAllSocketNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_15) == 0x004B10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Length_ReturnValue_2) == 0x004B14, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_bool_IsClosed_Variable) == 0x004B18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x004B19, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsFalling_ReturnValue_2) == 0x004B1A, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsFalling_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainSave_save_main_3) == 0x004B20, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainSave_save_main_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_IntInt_ReturnValue_6) == 0x004B28, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_64) == 0x004B2C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_64' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_65) == 0x004B2D, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_65' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_HalfHeightAdjust_1) == 0x004B30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_HalfHeightAdjust_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_ScaledHalfHeightAdjust_1) == 0x004B34, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_ScaledHalfHeightAdjust_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_HalfHeightAdjust) == 0x004B38, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_HalfHeightAdjust' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_ScaledHalfHeightAdjust) == 0x004B3C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_ScaledHalfHeightAdjust' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult_8) == 0x004B40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult_9) == 0x004BC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_name_Variable_6) == 0x004C50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_name_Variable_7) == 0x004C58, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetTransform_ReturnValue_4) == 0x004C60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Location_4) == 0x004C90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Rotation_4) == 0x004C9C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Scale_4) == 0x004CA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Roll_3) == 0x004CB4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Roll_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Pitch_3) == 0x004CB8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Pitch_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Yaw_3) == 0x004CBC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Yaw_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetActorRotation_ReturnValue_1) == 0x004CC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotator_ReturnValue_8) == 0x004CC4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotator_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_TransformLocation_ReturnValue_1) == 0x004CD0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_TransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_9) == 0x004CE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetActorLocation_SweepHitResult_1) == 0x004CE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetActorLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetActorLocation_ReturnValue_1) == 0x004D70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_float_Variable_4) == 0x004D74, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeRotation_SweepHitResult_4) == 0x004D78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeRotation_SweepHitResult_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_byte_Variable_8) == 0x004E00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Select_Default_7) == 0x004E04, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_63) == 0x004E08, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_63' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_64) == 0x004E0C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_64' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_float_Variable_5) == 0x004E10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatMinusEquals_FloatOut_8) == 0x004E14, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatMinusEquals_FloatOut_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FMax_ReturnValue_2) == 0x004E18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_DestroyedActor) == 0x004E20, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_DestroyedActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_bool_Variable_7) == 0x004E28, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Select_Default_8) == 0x004E2C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_66) == 0x004E34, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_66' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_67) == 0x004E35, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_67' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Objects_5) == 0x004E38, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Objects_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_29) == 0x004E48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_29' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_name_Variable_8) == 0x004E4C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Objects_6) == 0x004E58, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Objects_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_30) == 0x004E68, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_30' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_68) == 0x004E69, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_68' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_canBeUsedHold_return) == 0x004E6A, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_canBeUsedHold_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_69) == 0x004E6B, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_69' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_20) == 0x004E6C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_70) == 0x004E74, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_70' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_27) == 0x004E78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_27' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_71) == 0x004E88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_71' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_21) == 0x004E8C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Objects_7) == 0x004E98, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Objects_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_31) == 0x004EA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_31' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_72) == 0x004EA9, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_72' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_float_Variable_6) == 0x004EAC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_28) == 0x004EB0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_28' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_picker) == 0x004EC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_picker' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_texture) == 0x004EC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_texture' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_index) == 0x004ED0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_index' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_color) == 0x004ED4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_color' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_22) == 0x004EE4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_key_2) == 0x004EF0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_key_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_pressed_1) == 0x004F08, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_pressed_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_gamemode) == 0x004F10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_gamemode' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hook_1) == 0x004F18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hook_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_clean_1) == 0x004F20, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_clean_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_18) == 0x004F28, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hook) == 0x004F30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hook' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_17) == 0x004F38, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hit_6) == 0x004F40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hit_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_clean) == 0x004FC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_clean' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_location_1) == 0x004FCC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_location_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_damage_5) == 0x004FD8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_damage_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_16) == 0x004FE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_volume) == 0x004FE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_volume' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_15) == 0x004FF0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hit_5) == 0x004FF8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hit_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_name_1) == 0x005080, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_name_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_temperature_1) == 0x005090, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_temperature_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_speed) == 0x005094, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_speed' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_temperature) == 0x005098, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_temperature' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_14) == 0x0050A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_key_1) == 0x0050A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_key_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_pressed) == 0x0050C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_pressed' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_29) == 0x0050C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_29' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_13) == 0x0050D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_mouse) == 0x0050E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_mouse' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_12) == 0x0050E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_wheelDelta) == 0x0050F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_wheelDelta' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_11) == 0x0050F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_10) == 0x005100, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_damage_4) == 0x005108, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_damage_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_location) == 0x00510C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_9) == 0x005118, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_8) == 0x005120, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_7) == 0x005128, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hit_4) == 0x005130, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hit_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_action) == 0x0051B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_action' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_damage_3) == 0x0051BC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_damage_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hot) == 0x0051C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hot' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_damage_2) == 0x005248, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_damage_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_6) == 0x005250, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hit_3) == 0x005258, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hit_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_key) == 0x0052E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_key' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_static) == 0x0052F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_static' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_frozen) == 0x0052F1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_frozen' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_active) == 0x0052F2, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_active' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_activate) == 0x0052F3, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_activate' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_damage_1) == 0x0052F4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_damage_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hit_2) == 0x0052F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hit_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_actor) == 0x005380, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_actor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_impact) == 0x005388, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_impact' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_5) == 0x005398, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_4) == 0x0053A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_3) == 0x0053A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_2) == 0x0053B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hit_1) == 0x0053B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hit_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_damage) == 0x005440, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_damage' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_1) == 0x005448, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_name) == 0x005450, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_name' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_kick) == 0x005458, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_kick' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player) == 0x005460, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hit) == 0x005468, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_23) == 0x0054F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_23' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_24) == 0x0054F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_24' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_30) == 0x005500, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_30' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_name_Variable_9) == 0x005510, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_31) == 0x005518, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_31' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_NameName_ReturnValue) == 0x005528, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_int_Array_Index_Variable) == 0x00552C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_25) == 0x005530, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_25' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Get_Item_2) == 0x005538, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_32) == 0x005540, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_32' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_26) == 0x005550, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_26' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_int_Loop_Counter_Variable) == 0x005558, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_33) == 0x00555C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_33' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Less_IntInt_ReturnValue) == 0x00556C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_IntInt_ReturnValue_7) == 0x005570, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_bool_Variable_8) == 0x005574, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_27) == 0x005578, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_27' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_16) == 0x005580, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_float_Variable_7) == 0x005584, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_34) == 0x005588, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_34' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_28) == 0x005598, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_28' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_float_Variable_8) == 0x0055A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_float_Variable_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_float_Variable_9) == 0x0055A4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_float_Variable_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_35) == 0x0055A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_35' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_int_Variable) == 0x0055B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_29) == 0x0055BC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_29' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_36) == 0x0055C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_36' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_byte_Variable_9) == 0x0055D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_73) == 0x0055D5, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_73' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Select_Default_9) == 0x0055D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_65) == 0x0055DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_65' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_66) == 0x0055E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_66' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatMinusEquals_FloatOut_9) == 0x0055E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatMinusEquals_FloatOut_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_int_Variable_1) == 0x0055E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FMax_ReturnValue_3) == 0x0055EC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FMax_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_object_Variable_4) == 0x0055F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_58) == 0x005600, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_58' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LineTraceSingleForObjects_OutHit_1) == 0x005618, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LineTraceSingleForObjects_OutHit_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LineTraceSingleForObjects_ReturnValue_1) == 0x0056A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LineTraceSingleForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_15) == 0x0056A1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_15) == 0x0056A2, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_15) == 0x0056A4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_15) == 0x0056A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_15) == 0x0056AC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_15) == 0x0056B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_15) == 0x0056C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_15) == 0x0056D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_15) == 0x0056E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_15) == 0x0056E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_15) == 0x0056F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_15) == 0x0056F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_15) == 0x005700, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_15) == 0x005704, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_15) == 0x005708, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_15) == 0x00570C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_15) == 0x005718, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsWater_Volume) == 0x005728, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsWater_Volume' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_32) == 0x005730, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_32' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x005738, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isBuoyant__buoyant__2) == 0x005740, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isBuoyant__buoyant__2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_10) == 0x005748, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_59) == 0x005750, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_59' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_74) == 0x005768, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_74' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_75) == 0x005769, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_75' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_76) == 0x00576A, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_76' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeVector_ReturnValue_7) == 0x00576C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_77) == 0x005778, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_77' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult_10) == 0x00577C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_int_Variable_2) == 0x005804, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_78) == 0x005808, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_78' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_79) == 0x005809, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_79' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_80) == 0x00580A, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_80' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeVector_ReturnValue_8) == 0x00580C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult_11) == 0x005818, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_81) == 0x0058A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_81' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_82) == 0x0058A1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_82' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorVector_ReturnValue_4) == 0x0058A4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerCameraManager_ReturnValue_9) == 0x0058B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerCameraManager_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Normal_ReturnValue_1) == 0x0058B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_17) == 0x0058C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_17) == 0x0058D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsPointInBox_ReturnValue) == 0x0058DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsPointInBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_17) == 0x0058DD, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getEvent_isEventActive) == 0x0058DE, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getEvent_isEventActive' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isDreaming_dreaming_5) == 0x0058DF, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isDreaming_dreaming_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_int_Variable_3) == 0x0058E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_19) == 0x0058E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_20) == 0x0058E5, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_21) == 0x0058E6, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SetGamePaused_ReturnValue) == 0x0058E7, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SetGamePaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_22) == 0x0058E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_11) == 0x0058F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_83) == 0x0058F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_83' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_52) == 0x005900, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_52' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_53) == 0x005918, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_53' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isDreaming_dreaming_6) == 0x005930, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isDreaming_dreaming_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isExhausted_exhausted) == 0x005931, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isExhausted_exhausted' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_23) == 0x005932, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Player_10) == 0x005938, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Player_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_33) == 0x005948, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_33' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_asProp_return_3) == 0x005950, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_asProp_return_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_84) == 0x005958, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_84' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isDreaming_dreaming_7) == 0x005959, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isDreaming_dreaming_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Save_1_3) == 0x005960, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Save_1_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_34) == 0x005970, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_34' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_putObjectInventory2_return_2) == 0x005971, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_putObjectInventory2_return_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_ignoreSave_ignoreSave_1) == 0x005972, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_ignoreSave_ignoreSave_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_85) == 0x005973, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_85' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_object_Variable_5) == 0x005978, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LineTraceSingleForObjects_OutHit_2) == 0x005988, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LineTraceSingleForObjects_OutHit_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LineTraceSingleForObjects_ReturnValue_2) == 0x005A10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LineTraceSingleForObjects_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_18) == 0x005A11, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_16) == 0x005A12, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_16) == 0x005A13, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_16) == 0x005A14, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_16) == 0x005A18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_16) == 0x005A1C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_16) == 0x005A28, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_16) == 0x005A34, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_16) == 0x005A40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_16) == 0x005A50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_16) == 0x005A58, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_16) == 0x005A60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_16) == 0x005A68, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_16) == 0x005A70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_16) == 0x005A74, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_16) == 0x005A78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_16) == 0x005A7C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_16) == 0x005A88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x005A94, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isBuoyant__buoyant__3) == 0x005A95, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isBuoyant__buoyant__3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_19) == 0x005A96, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_20) == 0x005A97, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isBuoyant__buoyant__4) == 0x005A98, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isBuoyant__buoyant__4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_12) == 0x005AA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_name_Variable_10) == 0x005AA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_name_Variable_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_water_3) == 0x005AB0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_water_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_water_2) == 0x005AB8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_water_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x005AC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_water_1) == 0x005AC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_water_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Add_ReturnValue) == 0x005AD0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Contains_ReturnValue_2) == 0x005AD4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_water) == 0x005AD8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_water' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_RemoveItem_ReturnValue_2) == 0x005AE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_RemoveItem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_5) == 0x005AE4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Add_ReturnValue_1) == 0x005AEC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Contains_ReturnValue_3) == 0x005AF0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Contains_ReturnValue_3' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.enterWaterOrigin
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_EnterWaterOrigin final
{
public:
	class AWaterVolume_C*                         Water;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_EnterWaterOrigin) == 0x000008, "Wrong alignment on MainPlayer_C_EnterWaterOrigin");
static_assert(sizeof(MainPlayer_C_EnterWaterOrigin) == 0x000008, "Wrong size on MainPlayer_C_EnterWaterOrigin");
static_assert(offsetof(MainPlayer_C_EnterWaterOrigin, Water) == 0x000000, "Member 'MainPlayer_C_EnterWaterOrigin::Water' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.leaveWaterOrigin
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_LeaveWaterOrigin final
{
public:
	class AWaterVolume_C*                         Water;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_LeaveWaterOrigin) == 0x000008, "Wrong alignment on MainPlayer_C_LeaveWaterOrigin");
static_assert(sizeof(MainPlayer_C_LeaveWaterOrigin) == 0x000008, "Wrong size on MainPlayer_C_LeaveWaterOrigin");
static_assert(offsetof(MainPlayer_C_LeaveWaterOrigin, Water) == 0x000000, "Member 'MainPlayer_C_LeaveWaterOrigin::Water' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.enterWater
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_EnterWater final
{
public:
	class AWaterVolume_C*                         Water;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_EnterWater) == 0x000008, "Wrong alignment on MainPlayer_C_EnterWater");
static_assert(sizeof(MainPlayer_C_EnterWater) == 0x000008, "Wrong size on MainPlayer_C_EnterWater");
static_assert(offsetof(MainPlayer_C_EnterWater, Water) == 0x000000, "Member 'MainPlayer_C_EnterWater::Water' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.leaveWater
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_LeaveWater final
{
public:
	class AWaterVolume_C*                         Water;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_LeaveWater) == 0x000008, "Wrong alignment on MainPlayer_C_LeaveWater");
static_assert(sizeof(MainPlayer_C_LeaveWater) == 0x000008, "Wrong size on MainPlayer_C_LeaveWater");
static_assert(offsetof(MainPlayer_C_LeaveWater, Water) == 0x000000, "Member 'MainPlayer_C_LeaveWater::Water' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.player_use
// 0x0090 (0x0090 - 0x0000)
struct MainPlayer_C_Player_use final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MainPlayer_C_Player_use) == 0x000008, "Wrong alignment on MainPlayer_C_Player_use");
static_assert(sizeof(MainPlayer_C_Player_use) == 0x000090, "Wrong size on MainPlayer_C_Player_use");
static_assert(offsetof(MainPlayer_C_Player_use, Player) == 0x000000, "Member 'MainPlayer_C_Player_use::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Player_use, Hit) == 0x000008, "Member 'MainPlayer_C_Player_use::Hit' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.kicked
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_Kicked final
{
public:
	bool                                          Kick_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Kicked) == 0x000001, "Wrong alignment on MainPlayer_C_Kicked");
static_assert(sizeof(MainPlayer_C_Kicked) == 0x000001, "Wrong size on MainPlayer_C_Kicked");
static_assert(offsetof(MainPlayer_C_Kicked, Kick_0) == 0x000000, "Member 'MainPlayer_C_Kicked::Kick_0' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.sendName
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_SendName final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_SendName) == 0x000004, "Wrong alignment on MainPlayer_C_SendName");
static_assert(sizeof(MainPlayer_C_SendName) == 0x000008, "Wrong size on MainPlayer_C_SendName");
static_assert(offsetof(MainPlayer_C_SendName, Name_0) == 0x000000, "Member 'MainPlayer_C_SendName::Name_0' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.thrown
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_Thrown final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_Thrown) == 0x000008, "Wrong alignment on MainPlayer_C_Thrown");
static_assert(sizeof(MainPlayer_C_Thrown) == 0x000008, "Wrong size on MainPlayer_C_Thrown");
static_assert(offsetof(MainPlayer_C_Thrown, Player) == 0x000000, "Member 'MainPlayer_C_Thrown::Player' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.damageByPlayer
// 0x0098 (0x0098 - 0x0000)
struct MainPlayer_C_DamageByPlayer final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         Damage;                                            // 0x0090(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_DamageByPlayer) == 0x000008, "Wrong alignment on MainPlayer_C_DamageByPlayer");
static_assert(sizeof(MainPlayer_C_DamageByPlayer) == 0x000098, "Wrong size on MainPlayer_C_DamageByPlayer");
static_assert(offsetof(MainPlayer_C_DamageByPlayer, Player) == 0x000000, "Member 'MainPlayer_C_DamageByPlayer::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_DamageByPlayer, Hit) == 0x000008, "Member 'MainPlayer_C_DamageByPlayer::Hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_DamageByPlayer, Damage) == 0x000090, "Member 'MainPlayer_C_DamageByPlayer::Damage' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerUnequip
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_PlayerUnequip final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayerUnequip) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerUnequip");
static_assert(sizeof(MainPlayer_C_PlayerUnequip) == 0x000008, "Wrong size on MainPlayer_C_PlayerUnequip");
static_assert(offsetof(MainPlayer_C_PlayerUnequip, Player) == 0x000000, "Member 'MainPlayer_C_PlayerUnequip::Player' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerHold
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_PlayerHold final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayerHold) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerHold");
static_assert(sizeof(MainPlayer_C_PlayerHold) == 0x000008, "Wrong size on MainPlayer_C_PlayerHold");
static_assert(offsetof(MainPlayer_C_PlayerHold, Player) == 0x000000, "Member 'MainPlayer_C_PlayerHold::Player' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerR
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_PlayerR final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayerR) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerR");
static_assert(sizeof(MainPlayer_C_PlayerR) == 0x000008, "Wrong size on MainPlayer_C_PlayerR");
static_assert(offsetof(MainPlayer_C_PlayerR, Player) == 0x000000, "Member 'MainPlayer_C_PlayerR::Player' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.ImpactDamage
// 0x00A8 (0x00A8 - 0x0000)
struct MainPlayer_C_ImpactDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0004(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Impact;                                            // 0x0098(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_ImpactDamage) == 0x000008, "Wrong alignment on MainPlayer_C_ImpactDamage");
static_assert(sizeof(MainPlayer_C_ImpactDamage) == 0x0000A8, "Wrong size on MainPlayer_C_ImpactDamage");
static_assert(offsetof(MainPlayer_C_ImpactDamage, Damage) == 0x000000, "Member 'MainPlayer_C_ImpactDamage::Damage' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ImpactDamage, Hit) == 0x000004, "Member 'MainPlayer_C_ImpactDamage::Hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ImpactDamage, Actor) == 0x000090, "Member 'MainPlayer_C_ImpactDamage::Actor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ImpactDamage, Impact) == 0x000098, "Member 'MainPlayer_C_ImpactDamage::Impact' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.virus
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_Virus final
{
public:
	bool                                          Activate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Virus) == 0x000001, "Wrong alignment on MainPlayer_C_Virus");
static_assert(sizeof(MainPlayer_C_Virus) == 0x000001, "Wrong size on MainPlayer_C_Virus");
static_assert(offsetof(MainPlayer_C_Virus, Activate) == 0x000000, "Member 'MainPlayer_C_Virus::Activate' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.setPropProps
// 0x0003 (0x0003 - 0x0000)
struct MainPlayer_C_SetPropProps final
{
public:
	bool                                          Static;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Frozen;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Active;                                            // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_SetPropProps) == 0x000001, "Wrong alignment on MainPlayer_C_SetPropProps");
static_assert(sizeof(MainPlayer_C_SetPropProps) == 0x000003, "Wrong size on MainPlayer_C_SetPropProps");
static_assert(offsetof(MainPlayer_C_SetPropProps, Static) == 0x000000, "Member 'MainPlayer_C_SetPropProps::Static' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetPropProps, Frozen) == 0x000001, "Member 'MainPlayer_C_SetPropProps::Frozen' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetPropProps, Active) == 0x000002, "Member 'MainPlayer_C_SetPropProps::Active' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.setKey
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_SetKey final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_SetKey) == 0x000008, "Wrong alignment on MainPlayer_C_SetKey");
static_assert(sizeof(MainPlayer_C_SetKey) == 0x000010, "Wrong size on MainPlayer_C_SetKey");
static_assert(offsetof(MainPlayer_C_SetKey, Key) == 0x000000, "Member 'MainPlayer_C_SetKey::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.steppedOn
// 0x0090 (0x0090 - 0x0000)
struct MainPlayer_C_SteppedOn final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MainPlayer_C_SteppedOn) == 0x000008, "Wrong alignment on MainPlayer_C_SteppedOn");
static_assert(sizeof(MainPlayer_C_SteppedOn) == 0x000090, "Wrong size on MainPlayer_C_SteppedOn");
static_assert(offsetof(MainPlayer_C_SteppedOn, Player) == 0x000000, "Member 'MainPlayer_C_SteppedOn::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SteppedOn, Hit) == 0x000008, "Member 'MainPlayer_C_SteppedOn::Hit' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.fireDamage
// 0x0004 (0x0004 - 0x0000)
struct MainPlayer_C_FireDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_FireDamage) == 0x000004, "Wrong alignment on MainPlayer_C_FireDamage");
static_assert(sizeof(MainPlayer_C_FireDamage) == 0x000004, "Wrong size on MainPlayer_C_FireDamage");
static_assert(offsetof(MainPlayer_C_FireDamage, Damage) == 0x000000, "Member 'MainPlayer_C_FireDamage::Damage' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.receivedPhyiscsDamage
// 0x008C (0x008C - 0x0000)
struct MainPlayer_C_ReceivedPhyiscsDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hot;                                               // 0x0004(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MainPlayer_C_ReceivedPhyiscsDamage) == 0x000004, "Wrong alignment on MainPlayer_C_ReceivedPhyiscsDamage");
static_assert(sizeof(MainPlayer_C_ReceivedPhyiscsDamage) == 0x00008C, "Wrong size on MainPlayer_C_ReceivedPhyiscsDamage");
static_assert(offsetof(MainPlayer_C_ReceivedPhyiscsDamage, Damage) == 0x000000, "Member 'MainPlayer_C_ReceivedPhyiscsDamage::Damage' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ReceivedPhyiscsDamage, Hot) == 0x000004, "Member 'MainPlayer_C_ReceivedPhyiscsDamage::Hot' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.actionOptionIndex
// 0x0098 (0x0098 - 0x0000)
struct MainPlayer_C_ActionOptionIndex final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       Action;                                            // 0x0090(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_ActionOptionIndex) == 0x000008, "Wrong alignment on MainPlayer_C_ActionOptionIndex");
static_assert(sizeof(MainPlayer_C_ActionOptionIndex) == 0x000098, "Wrong size on MainPlayer_C_ActionOptionIndex");
static_assert(offsetof(MainPlayer_C_ActionOptionIndex, Player) == 0x000000, "Member 'MainPlayer_C_ActionOptionIndex::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ActionOptionIndex, Hit) == 0x000008, "Member 'MainPlayer_C_ActionOptionIndex::Hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ActionOptionIndex, Action) == 0x000090, "Member 'MainPlayer_C_ActionOptionIndex::Action' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerHandUse_RMB
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_PlayerHandUse_RMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayerHandUse_RMB) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerHandUse_RMB");
static_assert(sizeof(MainPlayer_C_PlayerHandUse_RMB) == 0x000008, "Wrong size on MainPlayer_C_PlayerHandUse_RMB");
static_assert(offsetof(MainPlayer_C_PlayerHandUse_RMB, Player) == 0x000000, "Member 'MainPlayer_C_PlayerHandUse_RMB::Player' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerHandUse_LMB
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_PlayerHandUse_LMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayerHandUse_LMB) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerHandUse_LMB");
static_assert(sizeof(MainPlayer_C_PlayerHandUse_LMB) == 0x000008, "Wrong size on MainPlayer_C_PlayerHandUse_LMB");
static_assert(offsetof(MainPlayer_C_PlayerHandUse_LMB, Player) == 0x000000, "Member 'MainPlayer_C_PlayerHandUse_LMB::Player' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.exploded
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_Exploded final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_Exploded) == 0x000004, "Wrong alignment on MainPlayer_C_Exploded");
static_assert(sizeof(MainPlayer_C_Exploded) == 0x000010, "Wrong size on MainPlayer_C_Exploded");
static_assert(offsetof(MainPlayer_C_Exploded, Damage) == 0x000000, "Member 'MainPlayer_C_Exploded::Damage' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Exploded, Location) == 0x000004, "Member 'MainPlayer_C_Exploded::Location' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerHandRelease_RMB
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_PlayerHandRelease_RMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayerHandRelease_RMB) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerHandRelease_RMB");
static_assert(sizeof(MainPlayer_C_PlayerHandRelease_RMB) == 0x000008, "Wrong size on MainPlayer_C_PlayerHandRelease_RMB");
static_assert(offsetof(MainPlayer_C_PlayerHandRelease_RMB, Player) == 0x000000, "Member 'MainPlayer_C_PlayerHandRelease_RMB::Player' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerHandRelease_LMB
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_PlayerHandRelease_LMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayerHandRelease_LMB) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerHandRelease_LMB");
static_assert(sizeof(MainPlayer_C_PlayerHandRelease_LMB) == 0x000008, "Wrong size on MainPlayer_C_PlayerHandRelease_LMB");
static_assert(offsetof(MainPlayer_C_PlayerHandRelease_LMB, Player) == 0x000000, "Member 'MainPlayer_C_PlayerHandRelease_LMB::Player' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerHandMouseWheel
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_PlayerHandMouseWheel final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WheelDelta;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayerHandMouseWheel) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerHandMouseWheel");
static_assert(sizeof(MainPlayer_C_PlayerHandMouseWheel) == 0x000010, "Wrong size on MainPlayer_C_PlayerHandMouseWheel");
static_assert(offsetof(MainPlayer_C_PlayerHandMouseWheel, Player) == 0x000000, "Member 'MainPlayer_C_PlayerHandMouseWheel::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PlayerHandMouseWheel, WheelDelta) == 0x000008, "Member 'MainPlayer_C_PlayerHandMouseWheel::WheelDelta' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerHandMouse
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_PlayerHandMouse final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Mouse;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayerHandMouse) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerHandMouse");
static_assert(sizeof(MainPlayer_C_PlayerHandMouse) == 0x000010, "Wrong size on MainPlayer_C_PlayerHandMouse");
static_assert(offsetof(MainPlayer_C_PlayerHandMouse, Player) == 0x000000, "Member 'MainPlayer_C_PlayerHandMouse::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PlayerHandMouse, Mouse) == 0x000008, "Member 'MainPlayer_C_PlayerHandMouse::Mouse' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerHandAnyKey
// 0x0028 (0x0028 - 0x0000)
struct MainPlayer_C_PlayerHandAnyKey final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Key;                                               // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Pressed;                                           // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_PlayerHandAnyKey) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerHandAnyKey");
static_assert(sizeof(MainPlayer_C_PlayerHandAnyKey) == 0x000028, "Wrong size on MainPlayer_C_PlayerHandAnyKey");
static_assert(offsetof(MainPlayer_C_PlayerHandAnyKey, Player) == 0x000000, "Member 'MainPlayer_C_PlayerHandAnyKey::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PlayerHandAnyKey, Key) == 0x000008, "Member 'MainPlayer_C_PlayerHandAnyKey::Key' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PlayerHandAnyKey, Pressed) == 0x000020, "Member 'MainPlayer_C_PlayerHandAnyKey::Pressed' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.addTemperature
// 0x0004 (0x0004 - 0x0000)
struct MainPlayer_C_AddTemperature final
{
public:
	float                                         Temperature;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_AddTemperature) == 0x000004, "Wrong alignment on MainPlayer_C_AddTemperature");
static_assert(sizeof(MainPlayer_C_AddTemperature) == 0x000004, "Wrong size on MainPlayer_C_AddTemperature");
static_assert(offsetof(MainPlayer_C_AddTemperature, Temperature) == 0x000000, "Member 'MainPlayer_C_AddTemperature::Temperature' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.accumulateTemperature
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_AccumulateTemperature final
{
public:
	float                                         Temperature;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_AccumulateTemperature) == 0x000004, "Wrong alignment on MainPlayer_C_AccumulateTemperature");
static_assert(sizeof(MainPlayer_C_AccumulateTemperature) == 0x000008, "Wrong size on MainPlayer_C_AccumulateTemperature");
static_assert(offsetof(MainPlayer_C_AccumulateTemperature, Temperature) == 0x000000, "Member 'MainPlayer_C_AccumulateTemperature::Temperature' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AccumulateTemperature, Speed) == 0x000004, "Member 'MainPlayer_C_AccumulateTemperature::Speed' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.ActionName
// 0x00A0 (0x00A0 - 0x0000)
struct MainPlayer_C_ActionName final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 Name_0;                                            // 0x0090(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_ActionName) == 0x000008, "Wrong alignment on MainPlayer_C_ActionName");
static_assert(sizeof(MainPlayer_C_ActionName) == 0x0000A0, "Wrong size on MainPlayer_C_ActionName");
static_assert(offsetof(MainPlayer_C_ActionName, Player) == 0x000000, "Member 'MainPlayer_C_ActionName::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ActionName, Hit) == 0x000008, "Member 'MainPlayer_C_ActionName::Hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ActionName, Name_0) == 0x000090, "Member 'MainPlayer_C_ActionName::Name_0' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.stepped
// 0x0004 (0x0004 - 0x0000)
struct MainPlayer_C_Stepped final
{
public:
	float                                         Volume;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_Stepped) == 0x000004, "Wrong alignment on MainPlayer_C_Stepped");
static_assert(sizeof(MainPlayer_C_Stepped) == 0x000004, "Wrong size on MainPlayer_C_Stepped");
static_assert(offsetof(MainPlayer_C_Stepped, Volume) == 0x000000, "Member 'MainPlayer_C_Stepped::Volume' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerLookAway
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_PlayerLookAway final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayerLookAway) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerLookAway");
static_assert(sizeof(MainPlayer_C_PlayerLookAway) == 0x000008, "Wrong size on MainPlayer_C_PlayerLookAway");
static_assert(offsetof(MainPlayer_C_PlayerLookAway, Player) == 0x000000, "Member 'MainPlayer_C_PlayerLookAway::Player' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.reachedByExplosion
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_ReachedByExplosion final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_ReachedByExplosion) == 0x000004, "Wrong alignment on MainPlayer_C_ReachedByExplosion");
static_assert(sizeof(MainPlayer_C_ReachedByExplosion) == 0x000010, "Wrong size on MainPlayer_C_ReachedByExplosion");
static_assert(offsetof(MainPlayer_C_ReachedByExplosion, Location) == 0x000000, "Member 'MainPlayer_C_ReachedByExplosion::Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ReachedByExplosion, Damage) == 0x00000C, "Member 'MainPlayer_C_ReachedByExplosion::Damage' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.slice
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_Slice final
{
public:
	bool                                          Clean;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Slice) == 0x000001, "Wrong alignment on MainPlayer_C_Slice");
static_assert(sizeof(MainPlayer_C_Slice) == 0x000001, "Wrong size on MainPlayer_C_Slice");
static_assert(offsetof(MainPlayer_C_Slice, Clean) == 0x000000, "Member 'MainPlayer_C_Slice::Clean' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerUsedOn
// 0x0090 (0x0090 - 0x0000)
struct MainPlayer_C_PlayerUsedOn final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MainPlayer_C_PlayerUsedOn) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerUsedOn");
static_assert(sizeof(MainPlayer_C_PlayerUsedOn) == 0x000090, "Wrong size on MainPlayer_C_PlayerUsedOn");
static_assert(offsetof(MainPlayer_C_PlayerUsedOn, Player) == 0x000000, "Member 'MainPlayer_C_PlayerUsedOn::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PlayerUsedOn, Hit) == 0x000008, "Member 'MainPlayer_C_PlayerUsedOn::Hit' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.hooked
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_Hooked final
{
public:
	class AHook_C*                                Hook;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_Hooked) == 0x000008, "Wrong alignment on MainPlayer_C_Hooked");
static_assert(sizeof(MainPlayer_C_Hooked) == 0x000008, "Wrong size on MainPlayer_C_Hooked");
static_assert(offsetof(MainPlayer_C_Hooked, Hook) == 0x000000, "Member 'MainPlayer_C_Hooked::Hook' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.cleanSponge
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_CleanSponge final
{
public:
	float                                         Clean;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_CleanSponge) == 0x000008, "Wrong alignment on MainPlayer_C_CleanSponge");
static_assert(sizeof(MainPlayer_C_CleanSponge) == 0x000010, "Wrong size on MainPlayer_C_CleanSponge");
static_assert(offsetof(MainPlayer_C_CleanSponge, Clean) == 0x000000, "Member 'MainPlayer_C_CleanSponge::Clean' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CleanSponge, Player) == 0x000008, "Member 'MainPlayer_C_CleanSponge::Player' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.hookTension
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_HookTension final
{
public:
	class AHook_C*                                Hook;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_HookTension) == 0x000008, "Wrong alignment on MainPlayer_C_HookTension");
static_assert(sizeof(MainPlayer_C_HookTension) == 0x000008, "Wrong size on MainPlayer_C_HookTension");
static_assert(offsetof(MainPlayer_C_HookTension, Hook) == 0x000000, "Member 'MainPlayer_C_HookTension::Hook' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.stuffUpgraded
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_StuffUpgraded final
{
public:
	class AMainGamemode_C*                        GameMode_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_StuffUpgraded) == 0x000008, "Wrong alignment on MainPlayer_C_StuffUpgraded");
static_assert(sizeof(MainPlayer_C_StuffUpgraded) == 0x000008, "Wrong size on MainPlayer_C_StuffUpgraded");
static_assert(offsetof(MainPlayer_C_StuffUpgraded, GameMode_0) == 0x000000, "Member 'MainPlayer_C_StuffUpgraded::GameMode_0' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.AnyKey
// 0x0020 (0x0020 - 0x0000)
struct MainPlayer_C_AnyKey final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Pressed;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_AnyKey) == 0x000008, "Wrong alignment on MainPlayer_C_AnyKey");
static_assert(sizeof(MainPlayer_C_AnyKey) == 0x000020, "Wrong size on MainPlayer_C_AnyKey");
static_assert(offsetof(MainPlayer_C_AnyKey, Key) == 0x000000, "Member 'MainPlayer_C_AnyKey::Key' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AnyKey, Pressed) == 0x000018, "Member 'MainPlayer_C_AnyKey::Pressed' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.applyColor
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_ApplyColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_ApplyColor) == 0x000004, "Wrong alignment on MainPlayer_C_ApplyColor");
static_assert(sizeof(MainPlayer_C_ApplyColor) == 0x000010, "Wrong size on MainPlayer_C_ApplyColor");
static_assert(offsetof(MainPlayer_C_ApplyColor, Color) == 0x000000, "Member 'MainPlayer_C_ApplyColor::Color' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.texturePickerApply
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_TexturePickerApply final
{
public:
	class UUmg_texturePicker_C*                   Picker;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Texture;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_TexturePickerApply) == 0x000008, "Wrong alignment on MainPlayer_C_TexturePickerApply");
static_assert(sizeof(MainPlayer_C_TexturePickerApply) == 0x000018, "Wrong size on MainPlayer_C_TexturePickerApply");
static_assert(offsetof(MainPlayer_C_TexturePickerApply, Picker) == 0x000000, "Member 'MainPlayer_C_TexturePickerApply::Picker' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TexturePickerApply, Texture) == 0x000008, "Member 'MainPlayer_C_TexturePickerApply::Texture' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TexturePickerApply, Index_0) == 0x000010, "Member 'MainPlayer_C_TexturePickerApply::Index_0' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.sitDestroyed
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_SitDestroyed final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_SitDestroyed) == 0x000008, "Wrong alignment on MainPlayer_C_SitDestroyed");
static_assert(sizeof(MainPlayer_C_SitDestroyed) == 0x000008, "Wrong size on MainPlayer_C_SitDestroyed");
static_assert(offsetof(MainPlayer_C_SitDestroyed, DestroyedActor) == 0x000000, "Member 'MainPlayer_C_SitDestroyed::DestroyedActor' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.K2_OnEndCrouch
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_K2_OnEndCrouch final
{
public:
	float                                         HalfHeightAdjust;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaledHalfHeightAdjust;                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_K2_OnEndCrouch) == 0x000004, "Wrong alignment on MainPlayer_C_K2_OnEndCrouch");
static_assert(sizeof(MainPlayer_C_K2_OnEndCrouch) == 0x000008, "Wrong size on MainPlayer_C_K2_OnEndCrouch");
static_assert(offsetof(MainPlayer_C_K2_OnEndCrouch, HalfHeightAdjust) == 0x000000, "Member 'MainPlayer_C_K2_OnEndCrouch::HalfHeightAdjust' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_K2_OnEndCrouch, ScaledHalfHeightAdjust) == 0x000004, "Member 'MainPlayer_C_K2_OnEndCrouch::ScaledHalfHeightAdjust' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.K2_OnStartCrouch
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_K2_OnStartCrouch final
{
public:
	float                                         HalfHeightAdjust;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaledHalfHeightAdjust;                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_K2_OnStartCrouch) == 0x000004, "Wrong alignment on MainPlayer_C_K2_OnStartCrouch");
static_assert(sizeof(MainPlayer_C_K2_OnStartCrouch) == 0x000008, "Wrong size on MainPlayer_C_K2_OnStartCrouch");
static_assert(offsetof(MainPlayer_C_K2_OnStartCrouch, HalfHeightAdjust) == 0x000000, "Member 'MainPlayer_C_K2_OnStartCrouch::HalfHeightAdjust' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_K2_OnStartCrouch, ScaledHalfHeightAdjust) == 0x000004, "Member 'MainPlayer_C_K2_OnStartCrouch::ScaledHalfHeightAdjust' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.firstPersonBodyAnimation
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_FirstPersonBodyAnimation final
{
public:
	class FName                                   StartingSection;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_FirstPersonBodyAnimation) == 0x000004, "Wrong alignment on MainPlayer_C_FirstPersonBodyAnimation");
static_assert(sizeof(MainPlayer_C_FirstPersonBodyAnimation) == 0x000008, "Wrong size on MainPlayer_C_FirstPersonBodyAnimation");
static_assert(offsetof(MainPlayer_C_FirstPersonBodyAnimation, StartingSection) == 0x000000, "Member 'MainPlayer_C_FirstPersonBodyAnimation::StartingSection' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.ignite
// 0x0004 (0x0004 - 0x0000)
struct MainPlayer_C_Ignite final
{
public:
	float                                         Fuel;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_Ignite) == 0x000004, "Wrong alignment on MainPlayer_C_Ignite");
static_assert(sizeof(MainPlayer_C_Ignite) == 0x000004, "Wrong size on MainPlayer_C_Ignite");
static_assert(offsetof(MainPlayer_C_Ignite, Fuel) == 0x000000, "Member 'MainPlayer_C_Ignite::Fuel' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnLanded
// 0x0088 (0x0088 - 0x0000)
struct MainPlayer_C_OnLanded final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MainPlayer_C_OnLanded) == 0x000004, "Wrong alignment on MainPlayer_C_OnLanded");
static_assert(sizeof(MainPlayer_C_OnLanded) == 0x000088, "Wrong size on MainPlayer_C_OnLanded");
static_assert(offsetof(MainPlayer_C_OnLanded, Hit) == 0x000000, "Member 'MainPlayer_C_OnLanded::Hit' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.pickupObject
// 0x0088 (0x0088 - 0x0000)
struct MainPlayer_C_PickupObject final
{
public:
	struct FHitResult                             HitResult_0;                                       // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MainPlayer_C_PickupObject) == 0x000004, "Wrong alignment on MainPlayer_C_PickupObject");
static_assert(sizeof(MainPlayer_C_PickupObject) == 0x000088, "Wrong size on MainPlayer_C_PickupObject");
static_assert(offsetof(MainPlayer_C_PickupObject, HitResult_0) == 0x000000, "Member 'MainPlayer_C_PickupObject::HitResult_0' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.simulateDrop
// 0x0003 (0x0003 - 0x0000)
struct MainPlayer_C_SimulateDrop final
{
public:
	bool                                          DontWakeup;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Alt;                                               // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DontCollect_0;                                     // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_SimulateDrop) == 0x000001, "Wrong alignment on MainPlayer_C_SimulateDrop");
static_assert(sizeof(MainPlayer_C_SimulateDrop) == 0x000003, "Wrong size on MainPlayer_C_SimulateDrop");
static_assert(offsetof(MainPlayer_C_SimulateDrop, DontWakeup) == 0x000000, "Member 'MainPlayer_C_SimulateDrop::DontWakeup' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SimulateDrop, Alt) == 0x000001, "Member 'MainPlayer_C_SimulateDrop::Alt' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SimulateDrop, DontCollect_0) == 0x000002, "Member 'MainPlayer_C_SimulateDrop::DontCollect_0' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.beginArmAnim
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_beginArmAnim final
{
public:
	class UAnimMontage*                           MontageToPlay;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_beginArmAnim) == 0x000008, "Wrong alignment on MainPlayer_C_beginArmAnim");
static_assert(sizeof(MainPlayer_C_beginArmAnim) == 0x000008, "Wrong size on MainPlayer_C_beginArmAnim");
static_assert(offsetof(MainPlayer_C_beginArmAnim, MontageToPlay) == 0x000000, "Member 'MainPlayer_C_beginArmAnim::MontageToPlay' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.equipDestroyed
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_EquipDestroyed final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_EquipDestroyed) == 0x000008, "Wrong alignment on MainPlayer_C_EquipDestroyed");
static_assert(sizeof(MainPlayer_C_EquipDestroyed) == 0x000008, "Wrong size on MainPlayer_C_EquipDestroyed");
static_assert(offsetof(MainPlayer_C_EquipDestroyed, DestroyedActor) == 0x000000, "Member 'MainPlayer_C_EquipDestroyed::DestroyedActor' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct MainPlayer_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_ReceiveTick) == 0x000004, "Wrong alignment on MainPlayer_C_ReceiveTick");
static_assert(sizeof(MainPlayer_C_ReceiveTick) == 0x000004, "Wrong size on MainPlayer_C_ReceiveTick");
static_assert(offsetof(MainPlayer_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'MainPlayer_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.addDamage
// 0x00A8 (0x00A8 - 0x0000)
struct MainPlayer_C_AddDamage final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x000C(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                Impact;                                            // 0x0094(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipSetting;                                       // 0x00A0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_AddDamage) == 0x000008, "Wrong alignment on MainPlayer_C_AddDamage");
static_assert(sizeof(MainPlayer_C_AddDamage) == 0x0000A8, "Wrong size on MainPlayer_C_AddDamage");
static_assert(offsetof(MainPlayer_C_AddDamage, Actor) == 0x000000, "Member 'MainPlayer_C_AddDamage::Actor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddDamage, Damage) == 0x000008, "Member 'MainPlayer_C_AddDamage::Damage' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddDamage, Hit) == 0x00000C, "Member 'MainPlayer_C_AddDamage::Hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddDamage, Impact) == 0x000094, "Member 'MainPlayer_C_AddDamage::Impact' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddDamage, SkipSetting) == 0x0000A0, "Member 'MainPlayer_C_AddDamage::SkipSetting' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.settingsApplied
// 0x0100 (0x0100 - 0x0000)
struct MainPlayer_C_SettingsApplied final
{
public:
	struct FStruct_settings                       Settings;                                          // 0x0000(0x0100)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_SettingsApplied) == 0x000008, "Wrong alignment on MainPlayer_C_SettingsApplied");
static_assert(sizeof(MainPlayer_C_SettingsApplied) == 0x000100, "Wrong size on MainPlayer_C_SettingsApplied");
static_assert(offsetof(MainPlayer_C_SettingsApplied, Settings) == 0x000000, "Member 'MainPlayer_C_SettingsApplied::Settings' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpAxisEvt_mouseX_K2Node_InputAxisEvent_0
// 0x0004 (0x0004 - 0x0000)
struct MainPlayer_C_InpAxisEvt_mouseX_K2Node_InputAxisEvent_0 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpAxisEvt_mouseX_K2Node_InputAxisEvent_0) == 0x000004, "Wrong alignment on MainPlayer_C_InpAxisEvt_mouseX_K2Node_InputAxisEvent_0");
static_assert(sizeof(MainPlayer_C_InpAxisEvt_mouseX_K2Node_InputAxisEvent_0) == 0x000004, "Wrong size on MainPlayer_C_InpAxisEvt_mouseX_K2Node_InputAxisEvent_0");
static_assert(offsetof(MainPlayer_C_InpAxisEvt_mouseX_K2Node_InputAxisEvent_0, AxisValue) == 0x000000, "Member 'MainPlayer_C_InpAxisEvt_mouseX_K2Node_InputAxisEvent_0::AxisValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpAxisEvt_mouseY_K2Node_InputAxisEvent_1
// 0x0004 (0x0004 - 0x0000)
struct MainPlayer_C_InpAxisEvt_mouseY_K2Node_InputAxisEvent_1 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpAxisEvt_mouseY_K2Node_InputAxisEvent_1) == 0x000004, "Wrong alignment on MainPlayer_C_InpAxisEvt_mouseY_K2Node_InputAxisEvent_1");
static_assert(sizeof(MainPlayer_C_InpAxisEvt_mouseY_K2Node_InputAxisEvent_1) == 0x000004, "Wrong size on MainPlayer_C_InpAxisEvt_mouseY_K2Node_InputAxisEvent_1");
static_assert(offsetof(MainPlayer_C_InpAxisEvt_mouseY_K2Node_InputAxisEvent_1, AxisValue) == 0x000000, "Member 'MainPlayer_C_InpAxisEvt_mouseY_K2Node_InputAxisEvent_1::AxisValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.fallen
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_Fallen final
{
public:
	bool                                          Death;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Fallen) == 0x000001, "Wrong alignment on MainPlayer_C_Fallen");
static_assert(sizeof(MainPlayer_C_Fallen) == 0x000001, "Wrong size on MainPlayer_C_Fallen");
static_assert(offsetof(MainPlayer_C_Fallen, Death) == 0x000000, "Member 'MainPlayer_C_Fallen::Death' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.hitt
// 0x00B0 (0x00B0 - 0x0000)
struct MainPlayer_C_Hitt final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MainPlayer_C_Hitt) == 0x000008, "Wrong alignment on MainPlayer_C_Hitt");
static_assert(sizeof(MainPlayer_C_Hitt) == 0x0000B0, "Wrong size on MainPlayer_C_Hitt");
static_assert(offsetof(MainPlayer_C_Hitt, HitComponent) == 0x000000, "Member 'MainPlayer_C_Hitt::HitComponent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Hitt, OtherActor) == 0x000008, "Member 'MainPlayer_C_Hitt::OtherActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Hitt, OtherComp) == 0x000010, "Member 'MainPlayer_C_Hitt::OtherComp' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Hitt, NormalImpulse) == 0x000018, "Member 'MainPlayer_C_Hitt::NormalImpulse' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Hitt, Hit) == 0x000024, "Member 'MainPlayer_C_Hitt::Hit' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.wakeup
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_Wakeup final
{
public:
	bool                                          PassOut;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Wakeup) == 0x000001, "Wrong alignment on MainPlayer_C_Wakeup");
static_assert(sizeof(MainPlayer_C_Wakeup) == 0x000001, "Wrong size on MainPlayer_C_Wakeup");
static_assert(offsetof(MainPlayer_C_Wakeup, PassOut) == 0x000000, "Member 'MainPlayer_C_Wakeup::PassOut' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.ateShit
// 0x0004 (0x0004 - 0x0000)
struct MainPlayer_C_AteShit final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_AteShit) == 0x000004, "Wrong alignment on MainPlayer_C_AteShit");
static_assert(sizeof(MainPlayer_C_AteShit) == 0x000004, "Wrong size on MainPlayer_C_AteShit");
static_assert(offsetof(MainPlayer_C_AteShit, Damage) == 0x000000, "Member 'MainPlayer_C_AteShit::Damage' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playFPAnim
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_PlayFPAnim final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           MontageToPlay;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Reload_0;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayFPAnim) == 0x000008, "Wrong alignment on MainPlayer_C_PlayFPAnim");
static_assert(sizeof(MainPlayer_C_PlayFPAnim) == 0x000018, "Wrong size on MainPlayer_C_PlayFPAnim");
static_assert(offsetof(MainPlayer_C_PlayFPAnim, Name_0) == 0x000000, "Member 'MainPlayer_C_PlayFPAnim::Name_0' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PlayFPAnim, MontageToPlay) == 0x000008, "Member 'MainPlayer_C_PlayFPAnim::MontageToPlay' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PlayFPAnim, Reload_0) == 0x000010, "Member 'MainPlayer_C_PlayFPAnim::Reload_0' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playFPAnimScripted
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_PlayFPAnimScripted final
{
public:
	class UAnimMontage*                           MontageToPlay;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   StartingSection;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Call;                                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayFPAnimScripted) == 0x000008, "Wrong alignment on MainPlayer_C_PlayFPAnimScripted");
static_assert(sizeof(MainPlayer_C_PlayFPAnimScripted) == 0x000018, "Wrong size on MainPlayer_C_PlayFPAnimScripted");
static_assert(offsetof(MainPlayer_C_PlayFPAnimScripted, MontageToPlay) == 0x000000, "Member 'MainPlayer_C_PlayFPAnimScripted::MontageToPlay' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PlayFPAnimScripted, StartingSection) == 0x000008, "Member 'MainPlayer_C_PlayFPAnimScripted::StartingSection' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PlayFPAnimScripted, Call) == 0x000010, "Member 'MainPlayer_C_PlayFPAnimScripted::Call' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0
// 0x0004 (0x0004 - 0x0000)
struct MainPlayer_C_InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0) == 0x000004, "Wrong alignment on MainPlayer_C_InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0");
static_assert(sizeof(MainPlayer_C_InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0) == 0x000004, "Wrong size on MainPlayer_C_InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0");
static_assert(offsetof(MainPlayer_C_InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0, AxisValue) == 0x000000, "Member 'MainPlayer_C_InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0::AxisValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_spawnmenu_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_0");
static_assert(sizeof(MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_0");
static_assert(offsetof(MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_spawnmenu_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_1");
static_assert(sizeof(MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_1");
static_assert(offsetof(MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_alt_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_2");
static_assert(sizeof(MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_2");
static_assert(offsetof(MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_alt_K2Node_InputActionEvent_3
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_3) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_3");
static_assert(sizeof(MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_3) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_3");
static_assert(offsetof(MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_3, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_3::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_run_K2Node_InputActionEvent_4
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_4) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_4");
static_assert(sizeof(MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_4) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_4");
static_assert(offsetof(MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_4, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_4::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_run_K2Node_InputActionEvent_5
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_5) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_5");
static_assert(sizeof(MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_5) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_5");
static_assert(offsetof(MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_5, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_5::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_Escape_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_Escape_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_Escape_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_Escape_K2Node_InputKeyEvent_0");
static_assert(sizeof(MainPlayer_C_InpActEvt_Escape_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_Escape_K2Node_InputKeyEvent_0");
static_assert(offsetof(MainPlayer_C_InpActEvt_Escape_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_Escape_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_dismount_K2Node_InputActionEvent_6
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_dismount_K2Node_InputActionEvent_6 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_dismount_K2Node_InputActionEvent_6) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_dismount_K2Node_InputActionEvent_6");
static_assert(sizeof(MainPlayer_C_InpActEvt_dismount_K2Node_InputActionEvent_6) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_dismount_K2Node_InputActionEvent_6");
static_assert(offsetof(MainPlayer_C_InpActEvt_dismount_K2Node_InputActionEvent_6, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_dismount_K2Node_InputActionEvent_6::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_dismount_K2Node_InputActionEvent_7
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_dismount_K2Node_InputActionEvent_7 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_dismount_K2Node_InputActionEvent_7) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_dismount_K2Node_InputActionEvent_7");
static_assert(sizeof(MainPlayer_C_InpActEvt_dismount_K2Node_InputActionEvent_7) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_dismount_K2Node_InputActionEvent_7");
static_assert(offsetof(MainPlayer_C_InpActEvt_dismount_K2Node_InputActionEvent_7, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_dismount_K2Node_InputActionEvent_7::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_cheatmenu_K2Node_InputActionEvent_8
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_cheatmenu_K2Node_InputActionEvent_8 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_cheatmenu_K2Node_InputActionEvent_8) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_cheatmenu_K2Node_InputActionEvent_8");
static_assert(sizeof(MainPlayer_C_InpActEvt_cheatmenu_K2Node_InputActionEvent_8) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_cheatmenu_K2Node_InputActionEvent_8");
static_assert(offsetof(MainPlayer_C_InpActEvt_cheatmenu_K2Node_InputActionEvent_8, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_cheatmenu_K2Node_InputActionEvent_8::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_flashlight_K2Node_InputActionEvent_9
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_flashlight_K2Node_InputActionEvent_9 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_flashlight_K2Node_InputActionEvent_9) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_flashlight_K2Node_InputActionEvent_9");
static_assert(sizeof(MainPlayer_C_InpActEvt_flashlight_K2Node_InputActionEvent_9) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_flashlight_K2Node_InputActionEvent_9");
static_assert(offsetof(MainPlayer_C_InpActEvt_flashlight_K2Node_InputActionEvent_9, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_flashlight_K2Node_InputActionEvent_9::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1");
static_assert(sizeof(MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1");
static_assert(offsetof(MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2");
static_assert(sizeof(MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2");
static_assert(offsetof(MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_AnyKey_K2Node_InputKeyEvent_3
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_3) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_3");
static_assert(sizeof(MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_3) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_3");
static_assert(offsetof(MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_3, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_3::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_AnyKey_K2Node_InputKeyEvent_4
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_4) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_4");
static_assert(sizeof(MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_4) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_4");
static_assert(offsetof(MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_4, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_4::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_quicksave_K2Node_InputActionEvent_10
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_quicksave_K2Node_InputActionEvent_10 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_quicksave_K2Node_InputActionEvent_10) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_quicksave_K2Node_InputActionEvent_10");
static_assert(sizeof(MainPlayer_C_InpActEvt_quicksave_K2Node_InputActionEvent_10) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_quicksave_K2Node_InputActionEvent_10");
static_assert(offsetof(MainPlayer_C_InpActEvt_quicksave_K2Node_InputActionEvent_10, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_quicksave_K2Node_InputActionEvent_10::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_rotate_K2Node_InputActionEvent_11
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_11 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_11) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_11");
static_assert(sizeof(MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_11) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_11");
static_assert(offsetof(MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_11, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_11::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_rotate_K2Node_InputActionEvent_12
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_12 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_12) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_12");
static_assert(sizeof(MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_12) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_12");
static_assert(offsetof(MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_12, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_12::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_crouch_K2Node_InputActionEvent_13
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_13 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_13) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_13");
static_assert(sizeof(MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_13) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_13");
static_assert(offsetof(MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_13, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_13::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_crouch_K2Node_InputActionEvent_14
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_14 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_14) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_14");
static_assert(sizeof(MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_14) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_14");
static_assert(offsetof(MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_14, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_14::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_jump_K2Node_InputActionEvent_15
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_15 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_15) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_15");
static_assert(sizeof(MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_15) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_15");
static_assert(offsetof(MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_15, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_15::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_jump_K2Node_InputActionEvent_16
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_16 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_16) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_16");
static_assert(sizeof(MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_16) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_16");
static_assert(offsetof(MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_16, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_16::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnCompleted_C9A4A46A4C8E87AD113F5FBDA6247247
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnCompleted_C9A4A46A4C8E87AD113F5FBDA6247247 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnCompleted_C9A4A46A4C8E87AD113F5FBDA6247247) == 0x000004, "Wrong alignment on MainPlayer_C_OnCompleted_C9A4A46A4C8E87AD113F5FBDA6247247");
static_assert(sizeof(MainPlayer_C_OnCompleted_C9A4A46A4C8E87AD113F5FBDA6247247) == 0x000008, "Wrong size on MainPlayer_C_OnCompleted_C9A4A46A4C8E87AD113F5FBDA6247247");
static_assert(offsetof(MainPlayer_C_OnCompleted_C9A4A46A4C8E87AD113F5FBDA6247247, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnCompleted_C9A4A46A4C8E87AD113F5FBDA6247247::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnBlendOut_C9A4A46A4C8E87AD113F5FBDA6247247
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnBlendOut_C9A4A46A4C8E87AD113F5FBDA6247247 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnBlendOut_C9A4A46A4C8E87AD113F5FBDA6247247) == 0x000004, "Wrong alignment on MainPlayer_C_OnBlendOut_C9A4A46A4C8E87AD113F5FBDA6247247");
static_assert(sizeof(MainPlayer_C_OnBlendOut_C9A4A46A4C8E87AD113F5FBDA6247247) == 0x000008, "Wrong size on MainPlayer_C_OnBlendOut_C9A4A46A4C8E87AD113F5FBDA6247247");
static_assert(offsetof(MainPlayer_C_OnBlendOut_C9A4A46A4C8E87AD113F5FBDA6247247, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnBlendOut_C9A4A46A4C8E87AD113F5FBDA6247247::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnInterrupted_C9A4A46A4C8E87AD113F5FBDA6247247
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnInterrupted_C9A4A46A4C8E87AD113F5FBDA6247247 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnInterrupted_C9A4A46A4C8E87AD113F5FBDA6247247) == 0x000004, "Wrong alignment on MainPlayer_C_OnInterrupted_C9A4A46A4C8E87AD113F5FBDA6247247");
static_assert(sizeof(MainPlayer_C_OnInterrupted_C9A4A46A4C8E87AD113F5FBDA6247247) == 0x000008, "Wrong size on MainPlayer_C_OnInterrupted_C9A4A46A4C8E87AD113F5FBDA6247247");
static_assert(offsetof(MainPlayer_C_OnInterrupted_C9A4A46A4C8E87AD113F5FBDA6247247, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnInterrupted_C9A4A46A4C8E87AD113F5FBDA6247247::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyBegin_C9A4A46A4C8E87AD113F5FBDA6247247
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyBegin_C9A4A46A4C8E87AD113F5FBDA6247247 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyBegin_C9A4A46A4C8E87AD113F5FBDA6247247) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyBegin_C9A4A46A4C8E87AD113F5FBDA6247247");
static_assert(sizeof(MainPlayer_C_OnNotifyBegin_C9A4A46A4C8E87AD113F5FBDA6247247) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyBegin_C9A4A46A4C8E87AD113F5FBDA6247247");
static_assert(offsetof(MainPlayer_C_OnNotifyBegin_C9A4A46A4C8E87AD113F5FBDA6247247, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyBegin_C9A4A46A4C8E87AD113F5FBDA6247247::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyEnd_C9A4A46A4C8E87AD113F5FBDA6247247
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyEnd_C9A4A46A4C8E87AD113F5FBDA6247247 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyEnd_C9A4A46A4C8E87AD113F5FBDA6247247) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyEnd_C9A4A46A4C8E87AD113F5FBDA6247247");
static_assert(sizeof(MainPlayer_C_OnNotifyEnd_C9A4A46A4C8E87AD113F5FBDA6247247) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyEnd_C9A4A46A4C8E87AD113F5FBDA6247247");
static_assert(offsetof(MainPlayer_C_OnNotifyEnd_C9A4A46A4C8E87AD113F5FBDA6247247, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyEnd_C9A4A46A4C8E87AD113F5FBDA6247247::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_inventory_K2Node_InputActionEvent_17
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_inventory_K2Node_InputActionEvent_17 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_inventory_K2Node_InputActionEvent_17) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_inventory_K2Node_InputActionEvent_17");
static_assert(sizeof(MainPlayer_C_InpActEvt_inventory_K2Node_InputActionEvent_17) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_inventory_K2Node_InputActionEvent_17");
static_assert(offsetof(MainPlayer_C_InpActEvt_inventory_K2Node_InputActionEvent_17, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_inventory_K2Node_InputActionEvent_17::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_noclip_K2Node_InputActionEvent_18
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_noclip_K2Node_InputActionEvent_18 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_noclip_K2Node_InputActionEvent_18) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_noclip_K2Node_InputActionEvent_18");
static_assert(sizeof(MainPlayer_C_InpActEvt_noclip_K2Node_InputActionEvent_18) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_noclip_K2Node_InputActionEvent_18");
static_assert(offsetof(MainPlayer_C_InpActEvt_noclip_K2Node_InputActionEvent_18, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_noclip_K2Node_InputActionEvent_18::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_forward_K2Node_InputActionEvent_19
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_19 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_19) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_19");
static_assert(sizeof(MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_19) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_19");
static_assert(offsetof(MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_19, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_19::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_forward_K2Node_InputActionEvent_20
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_20 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_20) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_20");
static_assert(sizeof(MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_20) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_20");
static_assert(offsetof(MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_20, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_20::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_back_K2Node_InputActionEvent_21
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_21 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_21) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_21");
static_assert(sizeof(MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_21) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_21");
static_assert(offsetof(MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_21, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_21::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_back_K2Node_InputActionEvent_22
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_22 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_22) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_22");
static_assert(sizeof(MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_22) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_22");
static_assert(offsetof(MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_22, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_22::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_right_K2Node_InputActionEvent_23
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_23 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_23) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_23");
static_assert(sizeof(MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_23) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_23");
static_assert(offsetof(MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_23, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_23::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_right_K2Node_InputActionEvent_24
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_24 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_24) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_24");
static_assert(sizeof(MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_24) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_24");
static_assert(offsetof(MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_24, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_24::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_left_K2Node_InputActionEvent_25
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_25 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_25) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_25");
static_assert(sizeof(MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_25) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_25");
static_assert(offsetof(MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_25, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_25::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_left_K2Node_InputActionEvent_26
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_26 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_26) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_26");
static_assert(sizeof(MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_26) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_26");
static_assert(offsetof(MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_26, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_26::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_drop_K2Node_InputActionEvent_27
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_27 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_27) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_27");
static_assert(sizeof(MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_27) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_27");
static_assert(offsetof(MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_27, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_27::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_drop_K2Node_InputActionEvent_28
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_28 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_28) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_28");
static_assert(sizeof(MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_28) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_28");
static_assert(offsetof(MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_28, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_28::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_zoom_K2Node_InputActionEvent_29
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_29 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_29) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_29");
static_assert(sizeof(MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_29) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_29");
static_assert(offsetof(MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_29, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_29::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_zoom_K2Node_InputActionEvent_30
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_30 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_30) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_30");
static_assert(sizeof(MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_30) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_30");
static_assert(offsetof(MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_30, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_30::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_use_K2Node_InputActionEvent_31
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_31 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_31) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_31");
static_assert(sizeof(MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_31) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_31");
static_assert(offsetof(MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_31, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_31::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_use_K2Node_InputActionEvent_32
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_32 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_32) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_32");
static_assert(sizeof(MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_32) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_32");
static_assert(offsetof(MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_32, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_32::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_1_K2Node_InputActionEvent_33
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_33 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_33) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_33");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_33) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_33");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_33, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_33::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_2_K2Node_InputActionEvent_34
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_34 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_34) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_34");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_34) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_34");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_34, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_34::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_3_K2Node_InputActionEvent_35
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_35 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_35) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_35");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_35) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_35");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_35, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_35::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_4_K2Node_InputActionEvent_36
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_36 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_36) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_36");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_36) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_36");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_36, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_36::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_5_K2Node_InputActionEvent_37
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_37 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_37) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_37");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_37) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_37");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_37, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_37::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_6_K2Node_InputActionEvent_38
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_38 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_38) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_38");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_38) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_38");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_38, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_38::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_7_K2Node_InputActionEvent_39
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_39 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_39) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_39");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_39) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_39");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_39, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_39::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_8_K2Node_InputActionEvent_40
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_40 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_40) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_40");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_40) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_40");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_40, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_40::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_9_K2Node_InputActionEvent_41
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_41 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_41) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_41");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_41) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_41");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_41, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_41::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_1_K2Node_InputActionEvent_42
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_42 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_42) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_42");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_42) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_42");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_42, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_42::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_2_K2Node_InputActionEvent_43
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_43 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_43) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_43");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_43) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_43");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_43, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_43::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_3_K2Node_InputActionEvent_44
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_44 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_44) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_44");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_44) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_44");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_44, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_44::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_4_K2Node_InputActionEvent_45
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_45 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_45) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_45");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_45) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_45");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_45, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_45::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_5_K2Node_InputActionEvent_46
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_46 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_46) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_46");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_46) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_46");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_46, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_46::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_6_K2Node_InputActionEvent_47
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_47 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_47) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_47");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_47) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_47");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_47, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_47::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_7_K2Node_InputActionEvent_48
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_48 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_48) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_48");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_48) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_48");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_48, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_48::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_8_K2Node_InputActionEvent_49
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_49 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_49) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_49");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_49) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_49");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_49, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_49::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_9_K2Node_InputActionEvent_50
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_50 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_50) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_50");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_50) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_50");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_50, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_50::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_10_K2Node_InputActionEvent_51
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_10_K2Node_InputActionEvent_51 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_10_K2Node_InputActionEvent_51) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_10_K2Node_InputActionEvent_51");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_10_K2Node_InputActionEvent_51) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_10_K2Node_InputActionEvent_51");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_10_K2Node_InputActionEvent_51, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_10_K2Node_InputActionEvent_51::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_undo_K2Node_InputActionEvent_52
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_undo_K2Node_InputActionEvent_52 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_undo_K2Node_InputActionEvent_52) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_undo_K2Node_InputActionEvent_52");
static_assert(sizeof(MainPlayer_C_InpActEvt_undo_K2Node_InputActionEvent_52) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_undo_K2Node_InputActionEvent_52");
static_assert(offsetof(MainPlayer_C_InpActEvt_undo_K2Node_InputActionEvent_52, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_undo_K2Node_InputActionEvent_52::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_ragdoll_K2Node_InputActionEvent_53
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_ragdoll_K2Node_InputActionEvent_53 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_ragdoll_K2Node_InputActionEvent_53) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_ragdoll_K2Node_InputActionEvent_53");
static_assert(sizeof(MainPlayer_C_InpActEvt_ragdoll_K2Node_InputActionEvent_53) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_ragdoll_K2Node_InputActionEvent_53");
static_assert(offsetof(MainPlayer_C_InpActEvt_ragdoll_K2Node_InputActionEvent_53, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_ragdoll_K2Node_InputActionEvent_53::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnCompleted_7B6F74A042FAB16562D2EAA1EFBF689C
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnCompleted_7B6F74A042FAB16562D2EAA1EFBF689C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnCompleted_7B6F74A042FAB16562D2EAA1EFBF689C) == 0x000004, "Wrong alignment on MainPlayer_C_OnCompleted_7B6F74A042FAB16562D2EAA1EFBF689C");
static_assert(sizeof(MainPlayer_C_OnCompleted_7B6F74A042FAB16562D2EAA1EFBF689C) == 0x000008, "Wrong size on MainPlayer_C_OnCompleted_7B6F74A042FAB16562D2EAA1EFBF689C");
static_assert(offsetof(MainPlayer_C_OnCompleted_7B6F74A042FAB16562D2EAA1EFBF689C, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnCompleted_7B6F74A042FAB16562D2EAA1EFBF689C::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnBlendOut_7B6F74A042FAB16562D2EAA1EFBF689C
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnBlendOut_7B6F74A042FAB16562D2EAA1EFBF689C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnBlendOut_7B6F74A042FAB16562D2EAA1EFBF689C) == 0x000004, "Wrong alignment on MainPlayer_C_OnBlendOut_7B6F74A042FAB16562D2EAA1EFBF689C");
static_assert(sizeof(MainPlayer_C_OnBlendOut_7B6F74A042FAB16562D2EAA1EFBF689C) == 0x000008, "Wrong size on MainPlayer_C_OnBlendOut_7B6F74A042FAB16562D2EAA1EFBF689C");
static_assert(offsetof(MainPlayer_C_OnBlendOut_7B6F74A042FAB16562D2EAA1EFBF689C, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnBlendOut_7B6F74A042FAB16562D2EAA1EFBF689C::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnInterrupted_7B6F74A042FAB16562D2EAA1EFBF689C
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnInterrupted_7B6F74A042FAB16562D2EAA1EFBF689C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnInterrupted_7B6F74A042FAB16562D2EAA1EFBF689C) == 0x000004, "Wrong alignment on MainPlayer_C_OnInterrupted_7B6F74A042FAB16562D2EAA1EFBF689C");
static_assert(sizeof(MainPlayer_C_OnInterrupted_7B6F74A042FAB16562D2EAA1EFBF689C) == 0x000008, "Wrong size on MainPlayer_C_OnInterrupted_7B6F74A042FAB16562D2EAA1EFBF689C");
static_assert(offsetof(MainPlayer_C_OnInterrupted_7B6F74A042FAB16562D2EAA1EFBF689C, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnInterrupted_7B6F74A042FAB16562D2EAA1EFBF689C::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyBegin_7B6F74A042FAB16562D2EAA1EFBF689C
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyBegin_7B6F74A042FAB16562D2EAA1EFBF689C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyBegin_7B6F74A042FAB16562D2EAA1EFBF689C) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyBegin_7B6F74A042FAB16562D2EAA1EFBF689C");
static_assert(sizeof(MainPlayer_C_OnNotifyBegin_7B6F74A042FAB16562D2EAA1EFBF689C) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyBegin_7B6F74A042FAB16562D2EAA1EFBF689C");
static_assert(offsetof(MainPlayer_C_OnNotifyBegin_7B6F74A042FAB16562D2EAA1EFBF689C, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyBegin_7B6F74A042FAB16562D2EAA1EFBF689C::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyEnd_7B6F74A042FAB16562D2EAA1EFBF689C
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyEnd_7B6F74A042FAB16562D2EAA1EFBF689C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyEnd_7B6F74A042FAB16562D2EAA1EFBF689C) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyEnd_7B6F74A042FAB16562D2EAA1EFBF689C");
static_assert(sizeof(MainPlayer_C_OnNotifyEnd_7B6F74A042FAB16562D2EAA1EFBF689C) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyEnd_7B6F74A042FAB16562D2EAA1EFBF689C");
static_assert(offsetof(MainPlayer_C_OnNotifyEnd_7B6F74A042FAB16562D2EAA1EFBF689C, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyEnd_7B6F74A042FAB16562D2EAA1EFBF689C::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_scrollUp_K2Node_InputActionEvent_54
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_scrollUp_K2Node_InputActionEvent_54 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_scrollUp_K2Node_InputActionEvent_54) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_scrollUp_K2Node_InputActionEvent_54");
static_assert(sizeof(MainPlayer_C_InpActEvt_scrollUp_K2Node_InputActionEvent_54) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_scrollUp_K2Node_InputActionEvent_54");
static_assert(offsetof(MainPlayer_C_InpActEvt_scrollUp_K2Node_InputActionEvent_54, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_scrollUp_K2Node_InputActionEvent_54::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_scrollDown_K2Node_InputActionEvent_55
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_scrollDown_K2Node_InputActionEvent_55 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_scrollDown_K2Node_InputActionEvent_55) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_scrollDown_K2Node_InputActionEvent_55");
static_assert(sizeof(MainPlayer_C_InpActEvt_scrollDown_K2Node_InputActionEvent_55) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_scrollDown_K2Node_InputActionEvent_55");
static_assert(offsetof(MainPlayer_C_InpActEvt_scrollDown_K2Node_InputActionEvent_55, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_scrollDown_K2Node_InputActionEvent_55::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnCompleted_810D1C624C726801D77BDDB22791052F
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnCompleted_810D1C624C726801D77BDDB22791052F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnCompleted_810D1C624C726801D77BDDB22791052F) == 0x000004, "Wrong alignment on MainPlayer_C_OnCompleted_810D1C624C726801D77BDDB22791052F");
static_assert(sizeof(MainPlayer_C_OnCompleted_810D1C624C726801D77BDDB22791052F) == 0x000008, "Wrong size on MainPlayer_C_OnCompleted_810D1C624C726801D77BDDB22791052F");
static_assert(offsetof(MainPlayer_C_OnCompleted_810D1C624C726801D77BDDB22791052F, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnCompleted_810D1C624C726801D77BDDB22791052F::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnBlendOut_810D1C624C726801D77BDDB22791052F
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnBlendOut_810D1C624C726801D77BDDB22791052F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnBlendOut_810D1C624C726801D77BDDB22791052F) == 0x000004, "Wrong alignment on MainPlayer_C_OnBlendOut_810D1C624C726801D77BDDB22791052F");
static_assert(sizeof(MainPlayer_C_OnBlendOut_810D1C624C726801D77BDDB22791052F) == 0x000008, "Wrong size on MainPlayer_C_OnBlendOut_810D1C624C726801D77BDDB22791052F");
static_assert(offsetof(MainPlayer_C_OnBlendOut_810D1C624C726801D77BDDB22791052F, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnBlendOut_810D1C624C726801D77BDDB22791052F::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnInterrupted_810D1C624C726801D77BDDB22791052F
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnInterrupted_810D1C624C726801D77BDDB22791052F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnInterrupted_810D1C624C726801D77BDDB22791052F) == 0x000004, "Wrong alignment on MainPlayer_C_OnInterrupted_810D1C624C726801D77BDDB22791052F");
static_assert(sizeof(MainPlayer_C_OnInterrupted_810D1C624C726801D77BDDB22791052F) == 0x000008, "Wrong size on MainPlayer_C_OnInterrupted_810D1C624C726801D77BDDB22791052F");
static_assert(offsetof(MainPlayer_C_OnInterrupted_810D1C624C726801D77BDDB22791052F, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnInterrupted_810D1C624C726801D77BDDB22791052F::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyBegin_810D1C624C726801D77BDDB22791052F
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyBegin_810D1C624C726801D77BDDB22791052F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyBegin_810D1C624C726801D77BDDB22791052F) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyBegin_810D1C624C726801D77BDDB22791052F");
static_assert(sizeof(MainPlayer_C_OnNotifyBegin_810D1C624C726801D77BDDB22791052F) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyBegin_810D1C624C726801D77BDDB22791052F");
static_assert(offsetof(MainPlayer_C_OnNotifyBegin_810D1C624C726801D77BDDB22791052F, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyBegin_810D1C624C726801D77BDDB22791052F::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyEnd_810D1C624C726801D77BDDB22791052F
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyEnd_810D1C624C726801D77BDDB22791052F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyEnd_810D1C624C726801D77BDDB22791052F) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyEnd_810D1C624C726801D77BDDB22791052F");
static_assert(sizeof(MainPlayer_C_OnNotifyEnd_810D1C624C726801D77BDDB22791052F) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyEnd_810D1C624C726801D77BDDB22791052F");
static_assert(offsetof(MainPlayer_C_OnNotifyEnd_810D1C624C726801D77BDDB22791052F, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyEnd_810D1C624C726801D77BDDB22791052F::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnCompleted_4DBBC1B940FF6B1540C30484950F25EA
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnCompleted_4DBBC1B940FF6B1540C30484950F25EA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnCompleted_4DBBC1B940FF6B1540C30484950F25EA) == 0x000004, "Wrong alignment on MainPlayer_C_OnCompleted_4DBBC1B940FF6B1540C30484950F25EA");
static_assert(sizeof(MainPlayer_C_OnCompleted_4DBBC1B940FF6B1540C30484950F25EA) == 0x000008, "Wrong size on MainPlayer_C_OnCompleted_4DBBC1B940FF6B1540C30484950F25EA");
static_assert(offsetof(MainPlayer_C_OnCompleted_4DBBC1B940FF6B1540C30484950F25EA, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnCompleted_4DBBC1B940FF6B1540C30484950F25EA::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnBlendOut_4DBBC1B940FF6B1540C30484950F25EA
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnBlendOut_4DBBC1B940FF6B1540C30484950F25EA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnBlendOut_4DBBC1B940FF6B1540C30484950F25EA) == 0x000004, "Wrong alignment on MainPlayer_C_OnBlendOut_4DBBC1B940FF6B1540C30484950F25EA");
static_assert(sizeof(MainPlayer_C_OnBlendOut_4DBBC1B940FF6B1540C30484950F25EA) == 0x000008, "Wrong size on MainPlayer_C_OnBlendOut_4DBBC1B940FF6B1540C30484950F25EA");
static_assert(offsetof(MainPlayer_C_OnBlendOut_4DBBC1B940FF6B1540C30484950F25EA, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnBlendOut_4DBBC1B940FF6B1540C30484950F25EA::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnInterrupted_4DBBC1B940FF6B1540C30484950F25EA
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnInterrupted_4DBBC1B940FF6B1540C30484950F25EA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnInterrupted_4DBBC1B940FF6B1540C30484950F25EA) == 0x000004, "Wrong alignment on MainPlayer_C_OnInterrupted_4DBBC1B940FF6B1540C30484950F25EA");
static_assert(sizeof(MainPlayer_C_OnInterrupted_4DBBC1B940FF6B1540C30484950F25EA) == 0x000008, "Wrong size on MainPlayer_C_OnInterrupted_4DBBC1B940FF6B1540C30484950F25EA");
static_assert(offsetof(MainPlayer_C_OnInterrupted_4DBBC1B940FF6B1540C30484950F25EA, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnInterrupted_4DBBC1B940FF6B1540C30484950F25EA::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyBegin_4DBBC1B940FF6B1540C30484950F25EA
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyBegin_4DBBC1B940FF6B1540C30484950F25EA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyBegin_4DBBC1B940FF6B1540C30484950F25EA) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyBegin_4DBBC1B940FF6B1540C30484950F25EA");
static_assert(sizeof(MainPlayer_C_OnNotifyBegin_4DBBC1B940FF6B1540C30484950F25EA) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyBegin_4DBBC1B940FF6B1540C30484950F25EA");
static_assert(offsetof(MainPlayer_C_OnNotifyBegin_4DBBC1B940FF6B1540C30484950F25EA, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyBegin_4DBBC1B940FF6B1540C30484950F25EA::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyEnd_4DBBC1B940FF6B1540C30484950F25EA
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyEnd_4DBBC1B940FF6B1540C30484950F25EA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyEnd_4DBBC1B940FF6B1540C30484950F25EA) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyEnd_4DBBC1B940FF6B1540C30484950F25EA");
static_assert(sizeof(MainPlayer_C_OnNotifyEnd_4DBBC1B940FF6B1540C30484950F25EA) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyEnd_4DBBC1B940FF6B1540C30484950F25EA");
static_assert(offsetof(MainPlayer_C_OnNotifyEnd_4DBBC1B940FF6B1540C30484950F25EA, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyEnd_4DBBC1B940FF6B1540C30484950F25EA::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_fire_K2Node_InputActionEvent_56
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_56 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_56) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_56");
static_assert(sizeof(MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_56) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_56");
static_assert(offsetof(MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_56, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_56::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_fire_K2Node_InputActionEvent_57
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_57 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_57) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_57");
static_assert(sizeof(MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_57) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_57");
static_assert(offsetof(MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_57, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_57::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnCompleted_6FC60C6C4AA754F0D22D9FB355E91395
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnCompleted_6FC60C6C4AA754F0D22D9FB355E91395 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnCompleted_6FC60C6C4AA754F0D22D9FB355E91395) == 0x000004, "Wrong alignment on MainPlayer_C_OnCompleted_6FC60C6C4AA754F0D22D9FB355E91395");
static_assert(sizeof(MainPlayer_C_OnCompleted_6FC60C6C4AA754F0D22D9FB355E91395) == 0x000008, "Wrong size on MainPlayer_C_OnCompleted_6FC60C6C4AA754F0D22D9FB355E91395");
static_assert(offsetof(MainPlayer_C_OnCompleted_6FC60C6C4AA754F0D22D9FB355E91395, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnCompleted_6FC60C6C4AA754F0D22D9FB355E91395::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnBlendOut_6FC60C6C4AA754F0D22D9FB355E91395
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnBlendOut_6FC60C6C4AA754F0D22D9FB355E91395 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnBlendOut_6FC60C6C4AA754F0D22D9FB355E91395) == 0x000004, "Wrong alignment on MainPlayer_C_OnBlendOut_6FC60C6C4AA754F0D22D9FB355E91395");
static_assert(sizeof(MainPlayer_C_OnBlendOut_6FC60C6C4AA754F0D22D9FB355E91395) == 0x000008, "Wrong size on MainPlayer_C_OnBlendOut_6FC60C6C4AA754F0D22D9FB355E91395");
static_assert(offsetof(MainPlayer_C_OnBlendOut_6FC60C6C4AA754F0D22D9FB355E91395, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnBlendOut_6FC60C6C4AA754F0D22D9FB355E91395::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnInterrupted_6FC60C6C4AA754F0D22D9FB355E91395
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnInterrupted_6FC60C6C4AA754F0D22D9FB355E91395 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnInterrupted_6FC60C6C4AA754F0D22D9FB355E91395) == 0x000004, "Wrong alignment on MainPlayer_C_OnInterrupted_6FC60C6C4AA754F0D22D9FB355E91395");
static_assert(sizeof(MainPlayer_C_OnInterrupted_6FC60C6C4AA754F0D22D9FB355E91395) == 0x000008, "Wrong size on MainPlayer_C_OnInterrupted_6FC60C6C4AA754F0D22D9FB355E91395");
static_assert(offsetof(MainPlayer_C_OnInterrupted_6FC60C6C4AA754F0D22D9FB355E91395, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnInterrupted_6FC60C6C4AA754F0D22D9FB355E91395::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyBegin_6FC60C6C4AA754F0D22D9FB355E91395
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyBegin_6FC60C6C4AA754F0D22D9FB355E91395 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyBegin_6FC60C6C4AA754F0D22D9FB355E91395) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyBegin_6FC60C6C4AA754F0D22D9FB355E91395");
static_assert(sizeof(MainPlayer_C_OnNotifyBegin_6FC60C6C4AA754F0D22D9FB355E91395) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyBegin_6FC60C6C4AA754F0D22D9FB355E91395");
static_assert(offsetof(MainPlayer_C_OnNotifyBegin_6FC60C6C4AA754F0D22D9FB355E91395, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyBegin_6FC60C6C4AA754F0D22D9FB355E91395::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyEnd_6FC60C6C4AA754F0D22D9FB355E91395
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyEnd_6FC60C6C4AA754F0D22D9FB355E91395 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyEnd_6FC60C6C4AA754F0D22D9FB355E91395) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyEnd_6FC60C6C4AA754F0D22D9FB355E91395");
static_assert(sizeof(MainPlayer_C_OnNotifyEnd_6FC60C6C4AA754F0D22D9FB355E91395) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyEnd_6FC60C6C4AA754F0D22D9FB355E91395");
static_assert(offsetof(MainPlayer_C_OnNotifyEnd_6FC60C6C4AA754F0D22D9FB355E91395, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyEnd_6FC60C6C4AA754F0D22D9FB355E91395::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnCompleted_5D8C5DEB45CD068AED6A49A9D34D2E25
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnCompleted_5D8C5DEB45CD068AED6A49A9D34D2E25 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnCompleted_5D8C5DEB45CD068AED6A49A9D34D2E25) == 0x000004, "Wrong alignment on MainPlayer_C_OnCompleted_5D8C5DEB45CD068AED6A49A9D34D2E25");
static_assert(sizeof(MainPlayer_C_OnCompleted_5D8C5DEB45CD068AED6A49A9D34D2E25) == 0x000008, "Wrong size on MainPlayer_C_OnCompleted_5D8C5DEB45CD068AED6A49A9D34D2E25");
static_assert(offsetof(MainPlayer_C_OnCompleted_5D8C5DEB45CD068AED6A49A9D34D2E25, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnCompleted_5D8C5DEB45CD068AED6A49A9D34D2E25::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnBlendOut_5D8C5DEB45CD068AED6A49A9D34D2E25
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnBlendOut_5D8C5DEB45CD068AED6A49A9D34D2E25 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnBlendOut_5D8C5DEB45CD068AED6A49A9D34D2E25) == 0x000004, "Wrong alignment on MainPlayer_C_OnBlendOut_5D8C5DEB45CD068AED6A49A9D34D2E25");
static_assert(sizeof(MainPlayer_C_OnBlendOut_5D8C5DEB45CD068AED6A49A9D34D2E25) == 0x000008, "Wrong size on MainPlayer_C_OnBlendOut_5D8C5DEB45CD068AED6A49A9D34D2E25");
static_assert(offsetof(MainPlayer_C_OnBlendOut_5D8C5DEB45CD068AED6A49A9D34D2E25, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnBlendOut_5D8C5DEB45CD068AED6A49A9D34D2E25::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnInterrupted_5D8C5DEB45CD068AED6A49A9D34D2E25
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnInterrupted_5D8C5DEB45CD068AED6A49A9D34D2E25 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnInterrupted_5D8C5DEB45CD068AED6A49A9D34D2E25) == 0x000004, "Wrong alignment on MainPlayer_C_OnInterrupted_5D8C5DEB45CD068AED6A49A9D34D2E25");
static_assert(sizeof(MainPlayer_C_OnInterrupted_5D8C5DEB45CD068AED6A49A9D34D2E25) == 0x000008, "Wrong size on MainPlayer_C_OnInterrupted_5D8C5DEB45CD068AED6A49A9D34D2E25");
static_assert(offsetof(MainPlayer_C_OnInterrupted_5D8C5DEB45CD068AED6A49A9D34D2E25, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnInterrupted_5D8C5DEB45CD068AED6A49A9D34D2E25::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyBegin_5D8C5DEB45CD068AED6A49A9D34D2E25
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyBegin_5D8C5DEB45CD068AED6A49A9D34D2E25 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyBegin_5D8C5DEB45CD068AED6A49A9D34D2E25) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyBegin_5D8C5DEB45CD068AED6A49A9D34D2E25");
static_assert(sizeof(MainPlayer_C_OnNotifyBegin_5D8C5DEB45CD068AED6A49A9D34D2E25) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyBegin_5D8C5DEB45CD068AED6A49A9D34D2E25");
static_assert(offsetof(MainPlayer_C_OnNotifyBegin_5D8C5DEB45CD068AED6A49A9D34D2E25, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyBegin_5D8C5DEB45CD068AED6A49A9D34D2E25::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyEnd_5D8C5DEB45CD068AED6A49A9D34D2E25
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyEnd_5D8C5DEB45CD068AED6A49A9D34D2E25 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyEnd_5D8C5DEB45CD068AED6A49A9D34D2E25) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyEnd_5D8C5DEB45CD068AED6A49A9D34D2E25");
static_assert(sizeof(MainPlayer_C_OnNotifyEnd_5D8C5DEB45CD068AED6A49A9D34D2E25) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyEnd_5D8C5DEB45CD068AED6A49A9D34D2E25");
static_assert(offsetof(MainPlayer_C_OnNotifyEnd_5D8C5DEB45CD068AED6A49A9D34D2E25, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyEnd_5D8C5DEB45CD068AED6A49A9D34D2E25::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_lockObject_K2Node_InputActionEvent_58
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_lockObject_K2Node_InputActionEvent_58 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_lockObject_K2Node_InputActionEvent_58) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_lockObject_K2Node_InputActionEvent_58");
static_assert(sizeof(MainPlayer_C_InpActEvt_lockObject_K2Node_InputActionEvent_58) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_lockObject_K2Node_InputActionEvent_58");
static_assert(offsetof(MainPlayer_C_InpActEvt_lockObject_K2Node_InputActionEvent_58, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_lockObject_K2Node_InputActionEvent_58::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_debugtp_K2Node_InputActionEvent_59
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_debugtp_K2Node_InputActionEvent_59 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_debugtp_K2Node_InputActionEvent_59) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_debugtp_K2Node_InputActionEvent_59");
static_assert(sizeof(MainPlayer_C_InpActEvt_debugtp_K2Node_InputActionEvent_59) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_debugtp_K2Node_InputActionEvent_59");
static_assert(offsetof(MainPlayer_C_InpActEvt_debugtp_K2Node_InputActionEvent_59, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_debugtp_K2Node_InputActionEvent_59::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.stepOn
// 0x01F0 (0x01F0 - 0x0000)
struct MainPlayer_C_StepOn final
{
public:
	float                                         A1;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      A;                                                 // 0x0008(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USave_main_C*                           CallFunc_getMainSave_save_main;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0048(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x008C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_117[0x1];                                      // 0x0117(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects;                  // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_physSound_return;                         // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AB[0x5];                                      // 0x01AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_physSound                      CallFunc_physSound_data;                           // 0x01B0(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_StepOn) == 0x000008, "Wrong alignment on MainPlayer_C_StepOn");
static_assert(sizeof(MainPlayer_C_StepOn) == 0x0001F0, "Wrong size on MainPlayer_C_StepOn");
static_assert(offsetof(MainPlayer_C_StepOn, A1) == 0x000000, "Member 'MainPlayer_C_StepOn::A1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, A) == 0x000008, "Member 'MainPlayer_C_StepOn::A' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000018, "Member 'MainPlayer_C_StepOn::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'MainPlayer_C_StepOn::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_getMainSave_save_main) == 0x000020, "Member 'MainPlayer_C_StepOn::CallFunc_getMainSave_save_main' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'MainPlayer_C_StepOn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, K2Node_MakeArray_Array) == 0x000030, "Member 'MainPlayer_C_StepOn::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000040, "Member 'MainPlayer_C_StepOn::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, Temp_object_Variable) == 0x000048, "Member 'MainPlayer_C_StepOn::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_MakeVector_ReturnValue) == 0x000058, "Member 'MainPlayer_C_StepOn::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, Temp_int_Variable) == 0x000064, "Member 'MainPlayer_C_StepOn::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000068, "Member 'MainPlayer_C_StepOn::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_FClamp_ReturnValue) == 0x00006C, "Member 'MainPlayer_C_StepOn::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000070, "Member 'MainPlayer_C_StepOn::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_SelectFloat_ReturnValue) == 0x00007C, "Member 'MainPlayer_C_StepOn::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000080, "Member 'MainPlayer_C_StepOn::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x00008C, "Member 'MainPlayer_C_StepOn::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x000114, "Member 'MainPlayer_C_StepOn::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_bBlockingHit) == 0x000115, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_bInitialOverlap) == 0x000116, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_Time) == 0x000118, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_Distance) == 0x00011C, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_Location) == 0x000120, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_ImpactPoint) == 0x00012C, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_Normal) == 0x000138, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_ImpactNormal) == 0x000144, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_PhysMat) == 0x000150, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_HitActor) == 0x000158, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_HitComponent) == 0x000160, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_HitBoneName) == 0x000168, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_HitItem) == 0x000170, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_ElementIndex) == 0x000174, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_FaceIndex) == 0x000178, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_TraceStart) == 0x00017C, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_TraceEnd) == 0x000188, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, K2Node_DynamicCast_AsInt_Objects) == 0x000198, "Member 'MainPlayer_C_StepOn::K2Node_DynamicCast_AsInt_Objects' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, K2Node_DynamicCast_bSuccess) == 0x0001A8, "Member 'MainPlayer_C_StepOn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_DoesImplementInterface_ReturnValue) == 0x0001A9, "Member 'MainPlayer_C_StepOn::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_physSound_return) == 0x0001AA, "Member 'MainPlayer_C_StepOn::CallFunc_physSound_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_physSound_data) == 0x0001B0, "Member 'MainPlayer_C_StepOn::CallFunc_physSound_data' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.arm
// 0x0078 (0x0078 - 0x0000)
struct MainPlayer_C_Arm final
{
public:
	float                                         CustomLength;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x001C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_Arm) == 0x000008, "Wrong alignment on MainPlayer_C_Arm");
static_assert(sizeof(MainPlayer_C_Arm) == 0x000078, "Wrong size on MainPlayer_C_Arm");
static_assert(offsetof(MainPlayer_C_Arm, CustomLength) == 0x000000, "Member 'MainPlayer_C_Arm::CustomLength' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Arm, Start) == 0x000004, "Member 'MainPlayer_C_Arm::Start' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Arm, End) == 0x000010, "Member 'MainPlayer_C_Arm::End' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Arm, Rotation) == 0x00001C, "Member 'MainPlayer_C_Arm::Rotation' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Arm, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000028, "Member 'MainPlayer_C_Arm::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Arm, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000030, "Member 'MainPlayer_C_Arm::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Arm, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000034, "Member 'MainPlayer_C_Arm::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Arm, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000040, "Member 'MainPlayer_C_Arm::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Arm, CallFunc_GetActorForwardVector_ReturnValue) == 0x00004C, "Member 'MainPlayer_C_Arm::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Arm, CallFunc_SelectFloat_ReturnValue) == 0x000058, "Member 'MainPlayer_C_Arm::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Arm, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00005C, "Member 'MainPlayer_C_Arm::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Arm, CallFunc_Add_VectorVector_ReturnValue) == 0x000068, "Member 'MainPlayer_C_Arm::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.Enter Interface
// 0x0110 (0x0110 - 0x0000)
struct MainPlayer_C_Enter_Interface final
{
public:
	class UWidget*                                ActiveInterface_0;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookAtLocation_0;                                  // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CamLocation_0;                                     // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFrom;                                          // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_setActiveInterface_return;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0040(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TScriptInterface<class IInt_coms_C>           K2Node_DynamicCast_AsInt_Coms;                     // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Enter_Interface) == 0x000010, "Wrong alignment on MainPlayer_C_Enter_Interface");
static_assert(sizeof(MainPlayer_C_Enter_Interface) == 0x000110, "Wrong size on MainPlayer_C_Enter_Interface");
static_assert(offsetof(MainPlayer_C_Enter_Interface, ActiveInterface_0) == 0x000000, "Member 'MainPlayer_C_Enter_Interface::ActiveInterface_0' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Enter_Interface, LookAtLocation_0) == 0x000008, "Member 'MainPlayer_C_Enter_Interface::LookAtLocation_0' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Enter_Interface, CamLocation_0) == 0x000014, "Member 'MainPlayer_C_Enter_Interface::CamLocation_0' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Enter_Interface, CallFrom) == 0x000020, "Member 'MainPlayer_C_Enter_Interface::CallFrom' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Enter_Interface, CallFunc_setActiveInterface_return) == 0x000030, "Member 'MainPlayer_C_Enter_Interface::CallFunc_setActiveInterface_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Enter_Interface, CallFunc_MakeVector_ReturnValue) == 0x000034, "Member 'MainPlayer_C_Enter_Interface::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Enter_Interface, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000040, "Member 'MainPlayer_C_Enter_Interface::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Enter_Interface, K2Node_DynamicCast_AsInt_Coms) == 0x0000C8, "Member 'MainPlayer_C_Enter_Interface::K2Node_DynamicCast_AsInt_Coms' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Enter_Interface, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'MainPlayer_C_Enter_Interface::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Enter_Interface, CallFunc_IsValid_ReturnValue) == 0x0000D9, "Member 'MainPlayer_C_Enter_Interface::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Enter_Interface, CallFunc_MakeTransform_ReturnValue) == 0x0000E0, "Member 'MainPlayer_C_Enter_Interface::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.makeLookAt
// 0x0208 (0x0208 - 0x0000)
struct MainPlayer_C_MakeLookAt final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Att;                                               // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0024(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue;                // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x00D4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15D[0x3];                                      // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0178(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_MakeLookAt) == 0x000008, "Wrong alignment on MainPlayer_C_MakeLookAt");
static_assert(sizeof(MainPlayer_C_MakeLookAt) == 0x000208, "Wrong size on MainPlayer_C_MakeLookAt");
static_assert(offsetof(MainPlayer_C_MakeLookAt, Location) == 0x000000, "Member 'MainPlayer_C_MakeLookAt::Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, Att) == 0x00000C, "Member 'MainPlayer_C_MakeLookAt::Att' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, CallFunc_Add_VectorVector_ReturnValue) == 0x000018, "Member 'MainPlayer_C_MakeLookAt::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000024, "Member 'MainPlayer_C_MakeLookAt::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0000AC, "Member 'MainPlayer_C_MakeLookAt::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000B0, "Member 'MainPlayer_C_MakeLookAt::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, CallFunc_GetActorUpVector_ReturnValue) == 0x0000BC, "Member 'MainPlayer_C_MakeLookAt::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, CallFunc_MakeRotFromXZ_ReturnValue) == 0x0000C8, "Member 'MainPlayer_C_MakeLookAt::CallFunc_MakeRotFromXZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x0000D4, "Member 'MainPlayer_C_MakeLookAt::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, CallFunc_IsValid_ReturnValue) == 0x00015C, "Member 'MainPlayer_C_MakeLookAt::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000160, "Member 'MainPlayer_C_MakeLookAt::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, CallFunc_FindLookAtRotation_ReturnValue) == 0x00016C, "Member 'MainPlayer_C_MakeLookAt::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000178, "Member 'MainPlayer_C_MakeLookAt::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, CallFunc_GetPlayerController_ReturnValue) == 0x000200, "Member 'MainPlayer_C_MakeLookAt::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.useAction
// 0x0478 (0x0478 - 0x0000)
struct MainPlayer_C_UseAction final
{
public:
	bool                                          Sec;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Radius;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DirectUse;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Succ;                                              // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    Component;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Issec;                                             // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x00AC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isDreaming_dreaming;                      // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0136(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0137(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_collectObject_collected;                  // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	Enum_interactionActions                       CallFunc_selectedAction_Output1;                   // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_selectedAction_asName;                    // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E2[0x2];                                      // 0x01E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_useAction_succ;                           // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_useAction_succ_1;                         // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x01F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x0240(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x025C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player;                   // 0x0278(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_3;            // 0x028A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_3;         // 0x028B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time_3;                    // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_3;                // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_3;                // 0x0294(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_3;             // 0x02A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_3;                  // 0x02AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_3;            // 0x02B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_3;                 // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_3;                // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_3;            // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_3;             // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_3;                 // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_3;            // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_3;               // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_3;              // 0x02F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_3;                // 0x0300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_1;                 // 0x0310(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue_1;     // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_4;            // 0x0322(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_4;         // 0x0323(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time_4;                    // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_4;                // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_4;                // 0x032C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_4;             // 0x0338(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_4;                  // 0x0344(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_4;            // 0x0350(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_4;                 // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_4;                // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_4;            // 0x0370(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_4;             // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_4;                 // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_4;            // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_4;               // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_4;              // 0x038C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_4;                // 0x0398(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x03A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A5[0x3];                                      // 0x03A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects;                  // 0x03A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B9[0x7];                                      // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x03C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects_1;                // 0x03C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue_1;        // 0x03D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DA[0x6];                                      // 0x03DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_2;                 // 0x03E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_3;                 // 0x03F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_C*                                CallFunc_asProp_return;                            // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_lookAt_return;                            // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_lookAt_text;                              // 0x0420(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_lookAt_boundObjectReplace;                // 0x0430(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_lookAt_number;                            // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0439(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x043A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43B[0x5];                                      // 0x043B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0440(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x0450(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x045C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue_2;     // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_469[0x3];                                      // 0x0469(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_UseAction) == 0x000008, "Wrong alignment on MainPlayer_C_UseAction");
static_assert(sizeof(MainPlayer_C_UseAction) == 0x000478, "Wrong size on MainPlayer_C_UseAction");
static_assert(offsetof(MainPlayer_C_UseAction, Sec) == 0x000000, "Member 'MainPlayer_C_UseAction::Sec' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, Radius) == 0x000004, "Member 'MainPlayer_C_UseAction::Radius' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, DirectUse) == 0x000008, "Member 'MainPlayer_C_UseAction::DirectUse' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, Succ) == 0x000010, "Member 'MainPlayer_C_UseAction::Succ' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, Component) == 0x000018, "Member 'MainPlayer_C_UseAction::Component' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, Actor) == 0x000020, "Member 'MainPlayer_C_UseAction::Actor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, Issec) == 0x000028, "Member 'MainPlayer_C_UseAction::Issec' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_bBlockingHit) == 0x000029, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_bInitialOverlap) == 0x00002A, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Time) == 0x00002C, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Distance) == 0x000030, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Location) == 0x000034, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ImpactPoint) == 0x000040, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Normal) == 0x00004C, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ImpactNormal) == 0x000058, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_PhysMat) == 0x000068, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitActor) == 0x000070, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitComponent) == 0x000078, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitBoneName) == 0x000080, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitItem) == 0x000088, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ElementIndex) == 0x00008C, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_FaceIndex) == 0x000090, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_TraceStart) == 0x000094, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_TraceEnd) == 0x0000A0, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_MakeHitResult_ReturnValue) == 0x0000AC, "Member 'MainPlayer_C_UseAction::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000134, "Member 'MainPlayer_C_UseAction::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_isDreaming_dreaming) == 0x000135, "Member 'MainPlayer_C_UseAction::CallFunc_isDreaming_dreaming' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000136, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000137, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Time_1) == 0x000138, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Distance_1) == 0x00013C, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Location_1) == 0x000140, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ImpactPoint_1) == 0x00014C, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Normal_1) == 0x000158, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000164, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_PhysMat_1) == 0x000170, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitActor_1) == 0x000178, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitComponent_1) == 0x000180, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitBoneName_1) == 0x000188, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitItem_1) == 0x000190, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ElementIndex_1) == 0x000194, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_FaceIndex_1) == 0x000198, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_TraceStart_1) == 0x00019C, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_TraceEnd_1) == 0x0001A8, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_collectObject_collected) == 0x0001B4, "Member 'MainPlayer_C_UseAction::CallFunc_collectObject_collected' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_Array_Get_Item) == 0x0001B8, "Member 'MainPlayer_C_UseAction::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_selectedAction_Output1) == 0x0001C8, "Member 'MainPlayer_C_UseAction::CallFunc_selectedAction_Output1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_selectedAction_asName) == 0x0001D0, "Member 'MainPlayer_C_UseAction::CallFunc_selectedAction_asName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_SwitchString_CmpSuccess) == 0x0001E0, "Member 'MainPlayer_C_UseAction::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_SwitchEnum_CmpSuccess) == 0x0001E1, "Member 'MainPlayer_C_UseAction::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0001E4, "Member 'MainPlayer_C_UseAction::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_useAction_succ) == 0x0001F0, "Member 'MainPlayer_C_UseAction::CallFunc_useAction_succ' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_useAction_succ_1) == 0x0001F1, "Member 'MainPlayer_C_UseAction::CallFunc_useAction_succ_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_bBlockingHit_2) == 0x0001F2, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x0001F3, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Time_2) == 0x0001F4, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Distance_2) == 0x0001F8, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Location_2) == 0x0001FC, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ImpactPoint_2) == 0x000208, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Normal_2) == 0x000214, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ImpactNormal_2) == 0x000220, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_PhysMat_2) == 0x000230, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitActor_2) == 0x000238, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitComponent_2) == 0x000240, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitBoneName_2) == 0x000248, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitItem_2) == 0x000250, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ElementIndex_2) == 0x000254, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_FaceIndex_2) == 0x000258, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_TraceStart_2) == 0x00025C, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_TraceEnd_2) == 0x000268, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_AsInt_Player) == 0x000278, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_AsInt_Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_bSuccess) == 0x000288, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_DoesImplementInterface_ReturnValue) == 0x000289, "Member 'MainPlayer_C_UseAction::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_bBlockingHit_3) == 0x00028A, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_bBlockingHit_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_bInitialOverlap_3) == 0x00028B, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_bInitialOverlap_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Time_3) == 0x00028C, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Time_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Distance_3) == 0x000290, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Distance_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Location_3) == 0x000294, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Location_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ImpactPoint_3) == 0x0002A0, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ImpactPoint_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Normal_3) == 0x0002AC, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Normal_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ImpactNormal_3) == 0x0002B8, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ImpactNormal_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_PhysMat_3) == 0x0002C8, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_PhysMat_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitActor_3) == 0x0002D0, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitActor_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitComponent_3) == 0x0002D8, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitComponent_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitBoneName_3) == 0x0002E0, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitBoneName_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitItem_3) == 0x0002E8, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitItem_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ElementIndex_3) == 0x0002EC, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ElementIndex_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_FaceIndex_3) == 0x0002F0, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_FaceIndex_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_TraceStart_3) == 0x0002F4, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_TraceStart_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_TraceEnd_3) == 0x000300, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_TraceEnd_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_AsInt_Player_1) == 0x000310, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_AsInt_Player_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_bSuccess_1) == 0x000320, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_DoesImplementInterface_ReturnValue_1) == 0x000321, "Member 'MainPlayer_C_UseAction::CallFunc_DoesImplementInterface_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_bBlockingHit_4) == 0x000322, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_bBlockingHit_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_bInitialOverlap_4) == 0x000323, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_bInitialOverlap_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Time_4) == 0x000324, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Time_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Distance_4) == 0x000328, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Distance_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Location_4) == 0x00032C, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Location_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ImpactPoint_4) == 0x000338, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ImpactPoint_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Normal_4) == 0x000344, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Normal_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ImpactNormal_4) == 0x000350, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ImpactNormal_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_PhysMat_4) == 0x000360, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_PhysMat_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitActor_4) == 0x000368, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitActor_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitComponent_4) == 0x000370, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitComponent_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitBoneName_4) == 0x000378, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitBoneName_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitItem_4) == 0x000380, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitItem_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ElementIndex_4) == 0x000384, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ElementIndex_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_FaceIndex_4) == 0x000388, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_FaceIndex_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_TraceStart_4) == 0x00038C, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_TraceStart_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_TraceEnd_4) == 0x000398, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_TraceEnd_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x0003A4, "Member 'MainPlayer_C_UseAction::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_AsInt_Objects) == 0x0003A8, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_AsInt_Objects' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_bSuccess_2) == 0x0003B8, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0003C0, "Member 'MainPlayer_C_UseAction::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_AsInt_Objects_1) == 0x0003C8, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_AsInt_Objects_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_bSuccess_3) == 0x0003D8, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_IsSimulatingPhysics_ReturnValue_1) == 0x0003D9, "Member 'MainPlayer_C_UseAction::CallFunc_IsSimulatingPhysics_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_AsInt_Player_2) == 0x0003E0, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_AsInt_Player_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_bSuccess_4) == 0x0003F0, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_AsInt_Player_3) == 0x0003F8, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_AsInt_Player_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_bSuccess_5) == 0x000408, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_asProp_return) == 0x000410, "Member 'MainPlayer_C_UseAction::CallFunc_asProp_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_lookAt_return) == 0x000418, "Member 'MainPlayer_C_UseAction::CallFunc_lookAt_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_lookAt_text) == 0x000420, "Member 'MainPlayer_C_UseAction::CallFunc_lookAt_text' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_lookAt_boundObjectReplace) == 0x000430, "Member 'MainPlayer_C_UseAction::CallFunc_lookAt_boundObjectReplace' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_lookAt_number) == 0x000438, "Member 'MainPlayer_C_UseAction::CallFunc_lookAt_number' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_IsValid_ReturnValue) == 0x000439, "Member 'MainPlayer_C_UseAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_IsValid_ReturnValue_1) == 0x00043A, "Member 'MainPlayer_C_UseAction::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_GetDisplayName_ReturnValue) == 0x000440, "Member 'MainPlayer_C_UseAction::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_GetActorBounds_Origin) == 0x000450, "Member 'MainPlayer_C_UseAction::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_GetActorBounds_BoxExtent) == 0x00045C, "Member 'MainPlayer_C_UseAction::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_DoesImplementInterface_ReturnValue_2) == 0x000468, "Member 'MainPlayer_C_UseAction::CallFunc_DoesImplementInterface_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_Vector_Distance_ReturnValue) == 0x00046C, "Member 'MainPlayer_C_UseAction::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_FClamp_ReturnValue) == 0x000470, "Member 'MainPlayer_C_UseAction::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.addFood
// 0x0118 (0x0118 - 0x0000)
struct MainPlayer_C_AddFood final
{
public:
	float                                         Food;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Sleep;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Health;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_food_C*                           AsFood;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bypassNoHunger;                                    // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_foodType                                 FailType;                                          // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Full;                                              // 0x001A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_foodType                                 T;                                                 // 0x001B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Ind;                                               // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Mult;                                              // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_foodType                                 Temp_byte_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isStrong_return;                          // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E[0x2];                                       // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0070(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0080(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0090(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable;                              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_1;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot;                     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut;         // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_1;        // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot_1;                   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_2;        // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_2;                            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_3;                            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default;                             // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_AddFood) == 0x000008, "Wrong alignment on MainPlayer_C_AddFood");
static_assert(sizeof(MainPlayer_C_AddFood) == 0x000118, "Wrong size on MainPlayer_C_AddFood");
static_assert(offsetof(MainPlayer_C_AddFood, Food) == 0x000000, "Member 'MainPlayer_C_AddFood::Food' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Sleep) == 0x000004, "Member 'MainPlayer_C_AddFood::Sleep' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Health) == 0x000008, "Member 'MainPlayer_C_AddFood::Health' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, AsFood) == 0x000010, "Member 'MainPlayer_C_AddFood::AsFood' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, bypassNoHunger) == 0x000018, "Member 'MainPlayer_C_AddFood::bypassNoHunger' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, FailType) == 0x000019, "Member 'MainPlayer_C_AddFood::FailType' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Full) == 0x00001A, "Member 'MainPlayer_C_AddFood::Full' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, T) == 0x00001B, "Member 'MainPlayer_C_AddFood::T' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Ind) == 0x00001C, "Member 'MainPlayer_C_AddFood::Ind' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Mult) == 0x000020, "Member 'MainPlayer_C_AddFood::Mult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Temp_byte_Variable) == 0x000024, "Member 'MainPlayer_C_AddFood::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_IsValid_ReturnValue) == 0x000025, "Member 'MainPlayer_C_AddFood::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Conv_NameToString_ReturnValue) == 0x000028, "Member 'MainPlayer_C_AddFood::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000038, "Member 'MainPlayer_C_AddFood::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Conv_FloatToString_ReturnValue) == 0x000040, "Member 'MainPlayer_C_AddFood::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000050, "Member 'MainPlayer_C_AddFood::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Abs_ReturnValue) == 0x000054, "Member 'MainPlayer_C_AddFood::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Less_FloatFloat_ReturnValue) == 0x000058, "Member 'MainPlayer_C_AddFood::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_isStrong_return) == 0x000059, "Member 'MainPlayer_C_AddFood::CallFunc_isStrong_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_SelectFloat_ReturnValue) == 0x00005C, "Member 'MainPlayer_C_AddFood::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000060, "Member 'MainPlayer_C_AddFood::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000064, "Member 'MainPlayer_C_AddFood::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Temp_int_Array_Index_Variable) == 0x000068, "Member 'MainPlayer_C_AddFood::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x00006C, "Member 'MainPlayer_C_AddFood::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00006D, "Member 'MainPlayer_C_AddFood::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Temp_float_Variable) == 0x000070, "Member 'MainPlayer_C_AddFood::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000074, "Member 'MainPlayer_C_AddFood::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'MainPlayer_C_AddFood::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'MainPlayer_C_AddFood::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Temp_string_Variable) == 0x000080, "Member 'MainPlayer_C_AddFood::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Temp_float_Variable_1) == 0x000090, "Member 'MainPlayer_C_AddFood::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Temp_object_Variable) == 0x000098, "Member 'MainPlayer_C_AddFood::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Temp_object_Variable_1) == 0x0000A0, "Member 'MainPlayer_C_AddFood::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_getSaveSlot_saveSlot) == 0x0000A8, "Member 'MainPlayer_C_AddFood::CallFunc_getSaveSlot_saveSlot' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Lerp_ReturnValue) == 0x0000B0, "Member 'MainPlayer_C_AddFood::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x0000B4, "Member 'MainPlayer_C_AddFood::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000B8, "Member 'MainPlayer_C_AddFood::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_FClamp_ReturnValue) == 0x0000BC, "Member 'MainPlayer_C_AddFood::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000C0, "Member 'MainPlayer_C_AddFood::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x0000C1, "Member 'MainPlayer_C_AddFood::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_BooleanOR_ReturnValue) == 0x0000C2, "Member 'MainPlayer_C_AddFood::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_BooleanAND_ReturnValue) == 0x0000C3, "Member 'MainPlayer_C_AddFood::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Array_Length_ReturnValue) == 0x0000C4, "Member 'MainPlayer_C_AddFood::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000C8, "Member 'MainPlayer_C_AddFood::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Less_IntInt_ReturnValue) == 0x0000C9, "Member 'MainPlayer_C_AddFood::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Array_Add_ReturnValue) == 0x0000CC, "Member 'MainPlayer_C_AddFood::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Array_Find_ReturnValue) == 0x0000D0, "Member 'MainPlayer_C_AddFood::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x0000D4, "Member 'MainPlayer_C_AddFood::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Array_Add_ReturnValue_1) == 0x0000D8, "Member 'MainPlayer_C_AddFood::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_VictoryFloatMinusEquals_FloatOut) == 0x0000DC, "Member 'MainPlayer_C_AddFood::CallFunc_VictoryFloatMinusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x0000E0, "Member 'MainPlayer_C_AddFood::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_VictoryFloatPlusEquals_FloatOut_1) == 0x0000E4, "Member 'MainPlayer_C_AddFood::CallFunc_VictoryFloatPlusEquals_FloatOut_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_getSaveSlot_saveSlot_1) == 0x0000E8, "Member 'MainPlayer_C_AddFood::CallFunc_getSaveSlot_saveSlot_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_FClamp_ReturnValue_1) == 0x0000F0, "Member 'MainPlayer_C_AddFood::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Lerp_ReturnValue_1) == 0x0000F4, "Member 'MainPlayer_C_AddFood::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000F8, "Member 'MainPlayer_C_AddFood::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_VictoryFloatPlusEquals_FloatOut_2) == 0x0000FC, "Member 'MainPlayer_C_AddFood::CallFunc_VictoryFloatPlusEquals_FloatOut_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Temp_object_Variable_2) == 0x000100, "Member 'MainPlayer_C_AddFood::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Temp_object_Variable_3) == 0x000108, "Member 'MainPlayer_C_AddFood::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, K2Node_Select_Default) == 0x000110, "Member 'MainPlayer_C_AddFood::K2Node_Select_Default' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.isExhausted
// 0x0098 (0x0098 - 0x0000)
struct MainPlayer_C_IsExhausted final
{
public:
	bool                                          Exhausted;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0040(0x0018)()
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0060(0x0018)()
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0080(0x0018)()
};
static_assert(alignof(MainPlayer_C_IsExhausted) == 0x000008, "Wrong alignment on MainPlayer_C_IsExhausted");
static_assert(sizeof(MainPlayer_C_IsExhausted) == 0x000098, "Wrong size on MainPlayer_C_IsExhausted");
static_assert(offsetof(MainPlayer_C_IsExhausted, Exhausted) == 0x000000, "Member 'MainPlayer_C_IsExhausted::Exhausted' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsExhausted, Temp_bool_Variable) == 0x000001, "Member 'MainPlayer_C_IsExhausted::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsExhausted, Temp_text_Variable) == 0x000008, "Member 'MainPlayer_C_IsExhausted::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsExhausted, Temp_text_Variable_1) == 0x000020, "Member 'MainPlayer_C_IsExhausted::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsExhausted, Temp_bool_Variable_1) == 0x000038, "Member 'MainPlayer_C_IsExhausted::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsExhausted, Temp_text_Variable_2) == 0x000040, "Member 'MainPlayer_C_IsExhausted::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsExhausted, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000058, "Member 'MainPlayer_C_IsExhausted::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsExhausted, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000059, "Member 'MainPlayer_C_IsExhausted::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsExhausted, K2Node_Select_Default) == 0x000060, "Member 'MainPlayer_C_IsExhausted::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsExhausted, CallFunc_BooleanOR_ReturnValue) == 0x000078, "Member 'MainPlayer_C_IsExhausted::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsExhausted, K2Node_Select_Default_1) == 0x000080, "Member 'MainPlayer_C_IsExhausted::K2Node_Select_Default_1' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.setActiveInterface
// 0x0088 (0x0088 - 0x0000)
struct MainPlayer_C_SetActiveInterface final
{
public:
	class UWidget*                                ActiveInterface_0;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 InString;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Zoom_0;                                            // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                SentBy;                                            // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreZoom;                                        // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Return;                                            // 0x0029(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_DynamicCast_AsUser_Widget;                  // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_coms_C>           K2Node_DynamicCast_AsInt_Coms;                     // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_DynamicCast_AsUser_Widget_1;                // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_DynamicCast_AsUser_Widget_2;                // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_SetActiveInterface) == 0x000008, "Wrong alignment on MainPlayer_C_SetActiveInterface");
static_assert(sizeof(MainPlayer_C_SetActiveInterface) == 0x000088, "Wrong size on MainPlayer_C_SetActiveInterface");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, ActiveInterface_0) == 0x000000, "Member 'MainPlayer_C_SetActiveInterface::ActiveInterface_0' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, InString) == 0x000008, "Member 'MainPlayer_C_SetActiveInterface::InString' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, Zoom_0) == 0x000018, "Member 'MainPlayer_C_SetActiveInterface::Zoom_0' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, SentBy) == 0x000020, "Member 'MainPlayer_C_SetActiveInterface::SentBy' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, IgnoreZoom) == 0x000028, "Member 'MainPlayer_C_SetActiveInterface::IgnoreZoom' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, Return) == 0x000029, "Member 'MainPlayer_C_SetActiveInterface::Return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, CallFunc_IsValid_ReturnValue) == 0x00002A, "Member 'MainPlayer_C_SetActiveInterface::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, K2Node_DynamicCast_AsUser_Widget) == 0x000030, "Member 'MainPlayer_C_SetActiveInterface::K2Node_DynamicCast_AsUser_Widget' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'MainPlayer_C_SetActiveInterface::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, K2Node_DynamicCast_AsInt_Coms) == 0x000040, "Member 'MainPlayer_C_SetActiveInterface::K2Node_DynamicCast_AsInt_Coms' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'MainPlayer_C_SetActiveInterface::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, K2Node_DynamicCast_AsUser_Widget_1) == 0x000058, "Member 'MainPlayer_C_SetActiveInterface::K2Node_DynamicCast_AsUser_Widget_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'MainPlayer_C_SetActiveInterface::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, CallFunc_GetPlayerController_ReturnValue) == 0x000068, "Member 'MainPlayer_C_SetActiveInterface::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, CallFunc_IsValid_ReturnValue_1) == 0x000070, "Member 'MainPlayer_C_SetActiveInterface::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, K2Node_DynamicCast_AsUser_Widget_2) == 0x000078, "Member 'MainPlayer_C_SetActiveInterface::K2Node_DynamicCast_AsUser_Widget_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, K2Node_DynamicCast_bSuccess_3) == 0x000080, "Member 'MainPlayer_C_SetActiveInterface::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.flashlightUse
// 0x0030 (0x0030 - 0x0000)
struct MainPlayer_C_FlashlightUse final
{
public:
	uint8                                         Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureLightProfile*                   Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureLightProfile*                   Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureLightProfile*                   Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureLightProfile*                   K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Percent_ByteByte_ReturnValue;             // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_FlashlightUse) == 0x000008, "Wrong alignment on MainPlayer_C_FlashlightUse");
static_assert(sizeof(MainPlayer_C_FlashlightUse) == 0x000030, "Wrong size on MainPlayer_C_FlashlightUse");
static_assert(offsetof(MainPlayer_C_FlashlightUse, Temp_byte_Variable) == 0x000000, "Member 'MainPlayer_C_FlashlightUse::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FlashlightUse, Temp_object_Variable) == 0x000008, "Member 'MainPlayer_C_FlashlightUse::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FlashlightUse, Temp_object_Variable_1) == 0x000010, "Member 'MainPlayer_C_FlashlightUse::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FlashlightUse, Temp_object_Variable_2) == 0x000018, "Member 'MainPlayer_C_FlashlightUse::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FlashlightUse, K2Node_Select_Default) == 0x000020, "Member 'MainPlayer_C_FlashlightUse::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FlashlightUse, CallFunc_Less_FloatFloat_ReturnValue) == 0x000028, "Member 'MainPlayer_C_FlashlightUse::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FlashlightUse, CallFunc_IsVisible_ReturnValue) == 0x000029, "Member 'MainPlayer_C_FlashlightUse::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FlashlightUse, CallFunc_Add_ByteByte_ReturnValue) == 0x00002A, "Member 'MainPlayer_C_FlashlightUse::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FlashlightUse, CallFunc_Percent_ByteByte_ReturnValue) == 0x00002B, "Member 'MainPlayer_C_FlashlightUse::CallFunc_Percent_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FlashlightUse, CallFunc_IsVisible_ReturnValue_1) == 0x00002C, "Member 'MainPlayer_C_FlashlightUse::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.setMouseSmooth
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_SetMouseSmooth final
{
public:
	float                                         CameraLagSpeed;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MouseSens_0;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SafeDivide_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_SetMouseSmooth) == 0x000004, "Wrong alignment on MainPlayer_C_SetMouseSmooth");
static_assert(sizeof(MainPlayer_C_SetMouseSmooth) == 0x000010, "Wrong size on MainPlayer_C_SetMouseSmooth");
static_assert(offsetof(MainPlayer_C_SetMouseSmooth, CameraLagSpeed) == 0x000000, "Member 'MainPlayer_C_SetMouseSmooth::CameraLagSpeed' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetMouseSmooth, MouseSens_0) == 0x000004, "Member 'MainPlayer_C_SetMouseSmooth::MouseSens_0' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetMouseSmooth, CallFunc_SafeDivide_ReturnValue) == 0x000008, "Member 'MainPlayer_C_SetMouseSmooth::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetMouseSmooth, CallFunc_Lerp_ReturnValue) == 0x00000C, "Member 'MainPlayer_C_SetMouseSmooth::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.kick
// 0x02A8 (0x02A8 - 0x0000)
struct MainPlayer_C_Kick final
{
public:
	TArray<EObjectTypeQuery>                      A;                                                 // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x0038(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x0084(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_116[0x2];                                      // 0x0116(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMassScale_ReturnValue;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMass_ReturnValue;                      // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player;                   // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_physSound_return;                         // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20B[0x5];                                      // 0x020B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_physSound                      CallFunc_physSound_data;                           // 0x0210(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SetVectorLength_ReturnValue;              // 0x0258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x3];                                      // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0284(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_2;                      // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue_1;         // 0x0294(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Kick) == 0x000008, "Wrong alignment on MainPlayer_C_Kick");
static_assert(sizeof(MainPlayer_C_Kick) == 0x0002A8, "Wrong size on MainPlayer_C_Kick");
static_assert(offsetof(MainPlayer_C_Kick, A) == 0x000000, "Member 'MainPlayer_C_Kick::A' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, K2Node_MakeArray_Array) == 0x000010, "Member 'MainPlayer_C_Kick::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000020, "Member 'MainPlayer_C_Kick::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_VSize_ReturnValue) == 0x00002C, "Member 'MainPlayer_C_Kick::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000030, "Member 'MainPlayer_C_Kick::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, K2Node_MakeArray_Array_1) == 0x000038, "Member 'MainPlayer_C_Kick::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'MainPlayer_C_Kick::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000054, "Member 'MainPlayer_C_Kick::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_VSize_ReturnValue_1) == 0x000060, "Member 'MainPlayer_C_Kick::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000064, "Member 'MainPlayer_C_Kick::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000070, "Member 'MainPlayer_C_Kick::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000074, "Member 'MainPlayer_C_Kick::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000080, "Member 'MainPlayer_C_Kick::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x000084, "Member 'MainPlayer_C_Kick::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x00010C, "Member 'MainPlayer_C_Kick::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000110, "Member 'MainPlayer_C_Kick::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_bBlockingHit) == 0x000114, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_bInitialOverlap) == 0x000115, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_Time) == 0x000118, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_Distance) == 0x00011C, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_Location) == 0x000120, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_ImpactPoint) == 0x00012C, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_Normal) == 0x000138, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_ImpactNormal) == 0x000144, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_PhysMat) == 0x000150, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_HitActor) == 0x000158, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_HitComponent) == 0x000160, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_HitBoneName) == 0x000168, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_HitItem) == 0x000170, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_ElementIndex) == 0x000174, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_FaceIndex) == 0x000178, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_TraceStart) == 0x00017C, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_TraceEnd) == 0x000188, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000194, "Member 'MainPlayer_C_Kick::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_GetMassScale_ReturnValue) == 0x000198, "Member 'MainPlayer_C_Kick::CallFunc_GetMassScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_MakeVector_ReturnValue) == 0x00019C, "Member 'MainPlayer_C_Kick::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_GetMass_ReturnValue) == 0x0001A8, "Member 'MainPlayer_C_Kick::CallFunc_GetMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_GetComponentBounds_Origin) == 0x0001AC, "Member 'MainPlayer_C_Kick::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_GetComponentBounds_BoxExtent) == 0x0001B8, "Member 'MainPlayer_C_Kick::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_GetComponentBounds_SphereRadius) == 0x0001C4, "Member 'MainPlayer_C_Kick::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0001C8, "Member 'MainPlayer_C_Kick::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0001CC, "Member 'MainPlayer_C_Kick::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0001D8, "Member 'MainPlayer_C_Kick::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0001E4, "Member 'MainPlayer_C_Kick::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x0001F0, "Member 'MainPlayer_C_Kick::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, K2Node_DynamicCast_AsInt_Player) == 0x0001F8, "Member 'MainPlayer_C_Kick::K2Node_DynamicCast_AsInt_Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, K2Node_DynamicCast_bSuccess) == 0x000208, "Member 'MainPlayer_C_Kick::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000209, "Member 'MainPlayer_C_Kick::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_physSound_return) == 0x00020A, "Member 'MainPlayer_C_Kick::CallFunc_physSound_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_physSound_data) == 0x000210, "Member 'MainPlayer_C_Kick::CallFunc_physSound_data' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000250, "Member 'MainPlayer_C_Kick::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000254, "Member 'MainPlayer_C_Kick::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_SetVectorLength_ReturnValue) == 0x000258, "Member 'MainPlayer_C_Kick::CallFunc_SetVectorLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000264, "Member 'MainPlayer_C_Kick::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Add_VectorVector_ReturnValue) == 0x000268, "Member 'MainPlayer_C_Kick::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000274, "Member 'MainPlayer_C_Kick::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000280, "Member 'MainPlayer_C_Kick::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000284, "Member 'MainPlayer_C_Kick::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_VSize_ReturnValue_2) == 0x000290, "Member 'MainPlayer_C_Kick::CallFunc_VSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Divide_VectorFloat_ReturnValue_1) == 0x000294, "Member 'MainPlayer_C_Kick::CallFunc_Divide_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Less_FloatFloat_ReturnValue) == 0x0002A0, "Member 'MainPlayer_C_Kick::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BooleanAND_ReturnValue) == 0x0002A1, "Member 'MainPlayer_C_Kick::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.ragdollMode
// 0x01C0 (0x01C0 - 0x0000)
struct MainPlayer_C_RagdollMode final
{
public:
	bool                                          Ragdoll;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          PassOut;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Death;                                             // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0xD];                                        // 0x0003(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerRagdoll_C*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isDreaming_dreaming;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0xB];                                       // 0x0055(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0060(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0094(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0120(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SetVectorLength_ReturnValue;              // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_RagdollMode) == 0x000010, "Wrong alignment on MainPlayer_C_RagdollMode");
static_assert(sizeof(MainPlayer_C_RagdollMode) == 0x0001C0, "Wrong size on MainPlayer_C_RagdollMode");
static_assert(offsetof(MainPlayer_C_RagdollMode, Ragdoll) == 0x000000, "Member 'MainPlayer_C_RagdollMode::Ragdoll' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, PassOut) == 0x000001, "Member 'MainPlayer_C_RagdollMode::PassOut' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, Death) == 0x000002, "Member 'MainPlayer_C_RagdollMode::Death' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000010, "Member 'MainPlayer_C_RagdollMode::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000040, "Member 'MainPlayer_C_RagdollMode::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_FinishSpawningActor_ReturnValue) == 0x000048, "Member 'MainPlayer_C_RagdollMode::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000050, "Member 'MainPlayer_C_RagdollMode::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'MainPlayer_C_RagdollMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_IsValid_ReturnValue_1) == 0x000052, "Member 'MainPlayer_C_RagdollMode::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_IsValid_ReturnValue_2) == 0x000053, "Member 'MainPlayer_C_RagdollMode::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_isDreaming_dreaming) == 0x000054, "Member 'MainPlayer_C_RagdollMode::CallFunc_isDreaming_dreaming' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_GetTransform_ReturnValue) == 0x000060, "Member 'MainPlayer_C_RagdollMode::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_BooleanOR_ReturnValue) == 0x000090, "Member 'MainPlayer_C_RagdollMode::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_BooleanOR_ReturnValue_1) == 0x000091, "Member 'MainPlayer_C_RagdollMode::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000094, "Member 'MainPlayer_C_RagdollMode::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_K2_AttachToComponent_ReturnValue) == 0x00011C, "Member 'MainPlayer_C_RagdollMode::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000120, "Member 'MainPlayer_C_RagdollMode::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_GetActorForwardVector_ReturnValue) == 0x0001A8, "Member 'MainPlayer_C_RagdollMode::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_SetVectorLength_ReturnValue) == 0x0001B4, "Member 'MainPlayer_C_RagdollMode::CallFunc_SetVectorLength_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.StopMovement
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_StopMovement final
{
public:
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_StopMovement) == 0x000008, "Wrong alignment on MainPlayer_C_StopMovement");
static_assert(sizeof(MainPlayer_C_StopMovement) == 0x000018, "Wrong size on MainPlayer_C_StopMovement");
static_assert(offsetof(MainPlayer_C_StopMovement, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000000, "Member 'MainPlayer_C_StopMovement::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StopMovement, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'MainPlayer_C_StopMovement::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.punch
// 0x0080 (0x0080 - 0x0000)
struct MainPlayer_C_Punch final
{
public:
	struct FVector                                FullBody;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                boneImp;                                           // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   bn1;                                               // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DamageLocation;                                    // 0x0024(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bypassSettings;                                    // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   bn;                                                // 0x0034(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                bimp;                                              // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Imp1;                                              // 0x0048(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetAllSocketNames_ReturnValue;            // 0x0060(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Punch) == 0x000008, "Wrong alignment on MainPlayer_C_Punch");
static_assert(sizeof(MainPlayer_C_Punch) == 0x000080, "Wrong size on MainPlayer_C_Punch");
static_assert(offsetof(MainPlayer_C_Punch, FullBody) == 0x000000, "Member 'MainPlayer_C_Punch::FullBody' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, boneImp) == 0x00000C, "Member 'MainPlayer_C_Punch::boneImp' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, bn1) == 0x000018, "Member 'MainPlayer_C_Punch::bn1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, Damage) == 0x000020, "Member 'MainPlayer_C_Punch::Damage' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, DamageLocation) == 0x000024, "Member 'MainPlayer_C_Punch::DamageLocation' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, bypassSettings) == 0x000030, "Member 'MainPlayer_C_Punch::bypassSettings' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, bn) == 0x000034, "Member 'MainPlayer_C_Punch::bn' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, bimp) == 0x00003C, "Member 'MainPlayer_C_Punch::bimp' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, Imp1) == 0x000048, "Member 'MainPlayer_C_Punch::Imp1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, Temp_int_Array_Index_Variable) == 0x000054, "Member 'MainPlayer_C_Punch::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'MainPlayer_C_Punch::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'MainPlayer_C_Punch::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, CallFunc_GetAllSocketNames_ReturnValue) == 0x000060, "Member 'MainPlayer_C_Punch::CallFunc_GetAllSocketNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'MainPlayer_C_Punch::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, CallFunc_Array_Get_Item) == 0x000074, "Member 'MainPlayer_C_Punch::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'MainPlayer_C_Punch::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.useLadder
// 0x0038 (0x0038 - 0x0000)
struct MainPlayer_C_UseLadder final
{
public:
	class ALadder_C*                              Ladder_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALadder_C*                              Ladder1;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_UseLadder) == 0x000008, "Wrong alignment on MainPlayer_C_UseLadder");
static_assert(sizeof(MainPlayer_C_UseLadder) == 0x000038, "Wrong size on MainPlayer_C_UseLadder");
static_assert(offsetof(MainPlayer_C_UseLadder, Ladder_0) == 0x000000, "Member 'MainPlayer_C_UseLadder::Ladder_0' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseLadder, Ladder1) == 0x000008, "Member 'MainPlayer_C_UseLadder::Ladder1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseLadder, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'MainPlayer_C_UseLadder::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseLadder, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'MainPlayer_C_UseLadder::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseLadder, CallFunc_GetVelocity_ReturnValue) == 0x000014, "Member 'MainPlayer_C_UseLadder::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseLadder, CallFunc_BreakVector_X) == 0x000020, "Member 'MainPlayer_C_UseLadder::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseLadder, CallFunc_BreakVector_Y) == 0x000024, "Member 'MainPlayer_C_UseLadder::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseLadder, CallFunc_BreakVector_Z) == 0x000028, "Member 'MainPlayer_C_UseLadder::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseLadder, CallFunc_Abs_ReturnValue) == 0x00002C, "Member 'MainPlayer_C_UseLadder::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseLadder, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000030, "Member 'MainPlayer_C_UseLadder::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseLadder, CallFunc_IsValid_ReturnValue_2) == 0x000031, "Member 'MainPlayer_C_UseLadder::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.updWater
// 0x0002 (0x0002 - 0x0000)
struct MainPlayer_C_UpdWater final
{
public:
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_UpdWater) == 0x000001, "Wrong alignment on MainPlayer_C_UpdWater");
static_assert(sizeof(MainPlayer_C_UpdWater) == 0x000002, "Wrong size on MainPlayer_C_UpdWater");
static_assert(offsetof(MainPlayer_C_UpdWater, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000000, "Member 'MainPlayer_C_UpdWater::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdWater, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000001, "Member 'MainPlayer_C_UpdWater::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.muffleUnderwater
// 0x0090 (0x0090 - 0x0000)
struct MainPlayer_C_MuffleUnderwater final
{
public:
	bool                                          A;                                                 // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWaterVolume_C*                         CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0050(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPointInBoxWithTransform_ReturnValue;    // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_MuffleUnderwater) == 0x000010, "Wrong alignment on MainPlayer_C_MuffleUnderwater");
static_assert(sizeof(MainPlayer_C_MuffleUnderwater) == 0x000090, "Wrong size on MainPlayer_C_MuffleUnderwater");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, A) == 0x000000, "Member 'MainPlayer_C_MuffleUnderwater::A' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, Temp_int_Array_Index_Variable) == 0x000004, "Member 'MainPlayer_C_MuffleUnderwater::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'MainPlayer_C_MuffleUnderwater::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000010, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000018, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_BreakVector_X) == 0x000028, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_BreakVector_Y) == 0x00002C, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_BreakVector_Z) == 0x000030, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_Array_Get_Item) == 0x000038, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000044, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_GetTransform_ReturnValue) == 0x000050, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_FMax_ReturnValue) == 0x000080, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_IsPointInBoxWithTransform_ReturnValue) == 0x000084, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_IsPointInBoxWithTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_BooleanOR_ReturnValue) == 0x000085, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.setUnderwater
// 0x0002 (0x0002 - 0x0000)
struct MainPlayer_C_SetUnderwater final
{
public:
	bool                                          InputPin;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_SetUnderwater) == 0x000001, "Wrong alignment on MainPlayer_C_SetUnderwater");
static_assert(sizeof(MainPlayer_C_SetUnderwater) == 0x000002, "Wrong size on MainPlayer_C_SetUnderwater");
static_assert(offsetof(MainPlayer_C_SetUnderwater, InputPin) == 0x000000, "Member 'MainPlayer_C_SetUnderwater::InputPin' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetUnderwater, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000001, "Member 'MainPlayer_C_SetUnderwater::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.putObjectInventory2
// 0x0038 (0x0038 - 0x0000)
struct MainPlayer_C_PutObjectInventory2 final
{
public:
	class AActor*                                 InputPin;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsChildActor_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_getInd_ReturnValue;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_addObject_return;                         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_addObject_err;                            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PutObjectInventory2) == 0x000008, "Wrong alignment on MainPlayer_C_PutObjectInventory2");
static_assert(sizeof(MainPlayer_C_PutObjectInventory2) == 0x000038, "Wrong size on MainPlayer_C_PutObjectInventory2");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, InputPin) == 0x000000, "Member 'MainPlayer_C_PutObjectInventory2::InputPin' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, Return) == 0x000008, "Member 'MainPlayer_C_PutObjectInventory2::Return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000010, "Member 'MainPlayer_C_PutObjectInventory2::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000018, "Member 'MainPlayer_C_PutObjectInventory2::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, CallFunc_IsChildActor_ReturnValue) == 0x000019, "Member 'MainPlayer_C_PutObjectInventory2::CallFunc_IsChildActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'MainPlayer_C_PutObjectInventory2::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'MainPlayer_C_PutObjectInventory2::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, CallFunc_getInd_ReturnValue) == 0x00001C, "Member 'MainPlayer_C_PutObjectInventory2::CallFunc_getInd_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, CallFunc_addObject_return) == 0x000020, "Member 'MainPlayer_C_PutObjectInventory2::CallFunc_addObject_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, CallFunc_addObject_err) == 0x000028, "Member 'MainPlayer_C_PutObjectInventory2::CallFunc_addObject_err' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.addEquip
// 0x0220 (0x0220 - 0x0000)
struct MainPlayer_C_AddEquip final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Rebug;                                             // 0x00C8(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	struct FStruct_propDynamic                    CallFunc_propToDynamic_equip;                      // 0x00D8(0x0028)(HasGetValueTypeHash)
	struct FStruct_equipment                      K2Node_MakeStruct_struct_equipment;                // 0x0100(0x0100)(HasGetValueTypeHash)
	bool                                          CallFunc_updEquip_return;                          // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_updEquip_rebug;                           // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot;                     // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_AddEquip) == 0x000010, "Wrong alignment on MainPlayer_C_AddEquip");
static_assert(sizeof(MainPlayer_C_AddEquip) == 0x000220, "Wrong size on MainPlayer_C_AddEquip");
static_assert(offsetof(MainPlayer_C_AddEquip, Data) == 0x000000, "Member 'MainPlayer_C_AddEquip::Data' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddEquip, Return) == 0x0000C0, "Member 'MainPlayer_C_AddEquip::Return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddEquip, Rebug) == 0x0000C8, "Member 'MainPlayer_C_AddEquip::Rebug' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddEquip, CallFunc_propToDynamic_equip) == 0x0000D8, "Member 'MainPlayer_C_AddEquip::CallFunc_propToDynamic_equip' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddEquip, K2Node_MakeStruct_struct_equipment) == 0x000100, "Member 'MainPlayer_C_AddEquip::K2Node_MakeStruct_struct_equipment' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddEquip, CallFunc_updEquip_return) == 0x000200, "Member 'MainPlayer_C_AddEquip::CallFunc_updEquip_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddEquip, CallFunc_updEquip_rebug) == 0x000208, "Member 'MainPlayer_C_AddEquip::CallFunc_updEquip_rebug' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddEquip, CallFunc_getSaveSlot_saveSlot) == 0x000218, "Member 'MainPlayer_C_AddEquip::CallFunc_getSaveSlot_saveSlot' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.updEquip
// 0x03C0 (0x03C0 - 0x0000)
struct MainPlayer_C_UpdEquip final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Rebug;                                             // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 D;                                                 // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_equipment                      Data;                                              // 0x0030(0x0100)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0130(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   N;                                                 // 0x0134(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player;                   // 0x0148(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1;                   // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0178(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_195[0xB];                                      // 0x0195(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01A0(0x0030)(IsPlainOldData, NoDestructor)
	class UClass*                                 K2Node_ClassDynamicCast_AsPrinted_Object;          // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DA[0x6];                                      // 0x01DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_1;                 // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadData_return;                          // 0x01F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mString                        CallFunc_Array_Get_Item_1;                         // 0x01F8(0x0010)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_2;                         // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1_1;                 // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects;                  // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_prop3                          CallFunc_GetDataTableRowFromName_OutRow;           // 0x0260(0x0080)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E2[0x6];                                      // 0x02E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_prop3                          CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x02E8(0x0080)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_weapon                         CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x0370(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_2;              // 0x03B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B2[0x6];                                      // 0x03B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot;                     // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_UpdEquip) == 0x000010, "Wrong alignment on MainPlayer_C_UpdEquip");
static_assert(sizeof(MainPlayer_C_UpdEquip) == 0x0003C0, "Wrong size on MainPlayer_C_UpdEquip");
static_assert(offsetof(MainPlayer_C_UpdEquip, Return) == 0x000000, "Member 'MainPlayer_C_UpdEquip::Return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, Rebug) == 0x000008, "Member 'MainPlayer_C_UpdEquip::Rebug' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, D) == 0x000018, "Member 'MainPlayer_C_UpdEquip::D' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, Data) == 0x000030, "Member 'MainPlayer_C_UpdEquip::Data' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, Ret) == 0x000130, "Member 'MainPlayer_C_UpdEquip::Ret' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, N) == 0x000134, "Member 'MainPlayer_C_UpdEquip::N' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, Temp_int_Variable) == 0x00013C, "Member 'MainPlayer_C_UpdEquip::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_Add_IntInt_ReturnValue) == 0x000140, "Member 'MainPlayer_C_UpdEquip::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, K2Node_DynamicCast_AsInt_Player) == 0x000148, "Member 'MainPlayer_C_UpdEquip::K2Node_DynamicCast_AsInt_Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, K2Node_DynamicCast_bSuccess) == 0x000158, "Member 'MainPlayer_C_UpdEquip::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, K2Node_DynamicCast_AsInt_Save_1) == 0x000160, "Member 'MainPlayer_C_UpdEquip::K2Node_DynamicCast_AsInt_Save_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, K2Node_DynamicCast_bSuccess_1) == 0x000170, "Member 'MainPlayer_C_UpdEquip::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000178, "Member 'MainPlayer_C_UpdEquip::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_Array_Get_Item) == 0x000188, "Member 'MainPlayer_C_UpdEquip::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_Array_Length_ReturnValue) == 0x000190, "Member 'MainPlayer_C_UpdEquip::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_Less_IntInt_ReturnValue) == 0x000194, "Member 'MainPlayer_C_UpdEquip::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_MakeTransform_ReturnValue) == 0x0001A0, "Member 'MainPlayer_C_UpdEquip::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, K2Node_ClassDynamicCast_AsPrinted_Object) == 0x0001D0, "Member 'MainPlayer_C_UpdEquip::K2Node_ClassDynamicCast_AsPrinted_Object' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, K2Node_ClassDynamicCast_bSuccess) == 0x0001D8, "Member 'MainPlayer_C_UpdEquip::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_NotEqual_NameName_ReturnValue) == 0x0001D9, "Member 'MainPlayer_C_UpdEquip::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, K2Node_DynamicCast_AsInt_Player_1) == 0x0001E0, "Member 'MainPlayer_C_UpdEquip::K2Node_DynamicCast_AsInt_Player_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, K2Node_DynamicCast_bSuccess_2) == 0x0001F0, "Member 'MainPlayer_C_UpdEquip::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_IsValid_ReturnValue) == 0x0001F1, "Member 'MainPlayer_C_UpdEquip::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_SetStaticMesh_ReturnValue) == 0x0001F2, "Member 'MainPlayer_C_UpdEquip::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_loadData_return) == 0x0001F3, "Member 'MainPlayer_C_UpdEquip::CallFunc_loadData_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_Array_Get_Item_1) == 0x0001F8, "Member 'MainPlayer_C_UpdEquip::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000208, "Member 'MainPlayer_C_UpdEquip::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_Array_Get_Item_2) == 0x000210, "Member 'MainPlayer_C_UpdEquip::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_FinishSpawningActor_ReturnValue) == 0x000220, "Member 'MainPlayer_C_UpdEquip::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_Conv_StringToName_ReturnValue) == 0x000228, "Member 'MainPlayer_C_UpdEquip::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, K2Node_DynamicCast_AsInt_Save_1_1) == 0x000230, "Member 'MainPlayer_C_UpdEquip::K2Node_DynamicCast_AsInt_Save_1_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, K2Node_DynamicCast_bSuccess_3) == 0x000240, "Member 'MainPlayer_C_UpdEquip::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, K2Node_DynamicCast_AsInt_Objects) == 0x000248, "Member 'MainPlayer_C_UpdEquip::K2Node_DynamicCast_AsInt_Objects' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, K2Node_DynamicCast_bSuccess_4) == 0x000258, "Member 'MainPlayer_C_UpdEquip::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_GetDataTableRowFromName_OutRow) == 0x000260, "Member 'MainPlayer_C_UpdEquip::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0002E0, "Member 'MainPlayer_C_UpdEquip::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_SetStaticMesh_ReturnValue_1) == 0x0002E1, "Member 'MainPlayer_C_UpdEquip::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0002E8, "Member 'MainPlayer_C_UpdEquip::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000368, "Member 'MainPlayer_C_UpdEquip::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x000370, "Member 'MainPlayer_C_UpdEquip::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x0003B0, "Member 'MainPlayer_C_UpdEquip::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_SetStaticMesh_ReturnValue_2) == 0x0003B1, "Member 'MainPlayer_C_UpdEquip::CallFunc_SetStaticMesh_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_getSaveSlot_saveSlot) == 0x0003B8, "Member 'MainPlayer_C_UpdEquip::CallFunc_getSaveSlot_saveSlot' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.attack
// 0x02D0 (0x02D0 - 0x0000)
struct MainPlayer_C_Attack final
{
public:
	bool                                          Hit;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             OutputPin;                                         // 0x0004(0x0088)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ReturnValue;                                       // 0x0090(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FinalDamage;                                       // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Cl;                                                // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_arm_start;                                // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_arm_end;                                  // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_arm_rotation;                             // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00D0(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00E0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17A[0x2];                                      // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x01FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FE[0x2];                                      // 0x01FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMass_ReturnValue;                      // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player;                   // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMin_ReturnValue;                         // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects;                  // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_physSound_return;                         // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_physSound                      CallFunc_physSound_data;                           // 0x0248(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0294(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x02B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x02C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_Attack) == 0x000008, "Wrong alignment on MainPlayer_C_Attack");
static_assert(sizeof(MainPlayer_C_Attack) == 0x0002D0, "Wrong size on MainPlayer_C_Attack");
static_assert(offsetof(MainPlayer_C_Attack, Hit) == 0x000000, "Member 'MainPlayer_C_Attack::Hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, OutputPin) == 0x000004, "Member 'MainPlayer_C_Attack::OutputPin' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, ReturnValue) == 0x000090, "Member 'MainPlayer_C_Attack::ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, FinalDamage) == 0x000098, "Member 'MainPlayer_C_Attack::FinalDamage' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, Cl) == 0x0000A0, "Member 'MainPlayer_C_Attack::Cl' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_Lerp_ReturnValue) == 0x0000A8, "Member 'MainPlayer_C_Attack::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_arm_start) == 0x0000AC, "Member 'MainPlayer_C_Attack::CallFunc_arm_start' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_arm_end) == 0x0000B8, "Member 'MainPlayer_C_Attack::CallFunc_arm_end' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_arm_rotation) == 0x0000C4, "Member 'MainPlayer_C_Attack::CallFunc_arm_rotation' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, Temp_object_Variable) == 0x0000D0, "Member 'MainPlayer_C_Attack::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_LineTraceSingle_OutHit) == 0x0000E0, "Member 'MainPlayer_C_Attack::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_LineTraceSingle_ReturnValue) == 0x000168, "Member 'MainPlayer_C_Attack::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_GetForwardVector_ReturnValue) == 0x00016C, "Member 'MainPlayer_C_Attack::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_bBlockingHit) == 0x000178, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_bInitialOverlap) == 0x000179, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_Time) == 0x00017C, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_Distance) == 0x000180, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_Location) == 0x000184, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_ImpactPoint) == 0x000190, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_Normal) == 0x00019C, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_ImpactNormal) == 0x0001A8, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_PhysMat) == 0x0001B8, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_HitActor) == 0x0001C0, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_HitComponent) == 0x0001C8, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_HitBoneName) == 0x0001D0, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_HitItem) == 0x0001D8, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_ElementIndex) == 0x0001DC, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_FaceIndex) == 0x0001E0, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_TraceStart) == 0x0001E4, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_TraceEnd) == 0x0001F0, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_IsValid_ReturnValue) == 0x0001FC, "Member 'MainPlayer_C_Attack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x0001FD, "Member 'MainPlayer_C_Attack::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_GetMass_ReturnValue) == 0x000200, "Member 'MainPlayer_C_Attack::CallFunc_GetMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, K2Node_DynamicCast_AsInt_Player) == 0x000208, "Member 'MainPlayer_C_Attack::K2Node_DynamicCast_AsInt_Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, K2Node_DynamicCast_bSuccess) == 0x000218, "Member 'MainPlayer_C_Attack::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_FMin_ReturnValue) == 0x00021C, "Member 'MainPlayer_C_Attack::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, K2Node_DynamicCast_AsInt_Objects) == 0x000220, "Member 'MainPlayer_C_Attack::K2Node_DynamicCast_AsInt_Objects' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, K2Node_DynamicCast_bSuccess_1) == 0x000230, "Member 'MainPlayer_C_Attack::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_GetObjectClass_ReturnValue) == 0x000238, "Member 'MainPlayer_C_Attack::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_physSound_return) == 0x000240, "Member 'MainPlayer_C_Attack::CallFunc_physSound_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_physSound_data) == 0x000248, "Member 'MainPlayer_C_Attack::CallFunc_physSound_data' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_Add_VectorVector_ReturnValue) == 0x000288, "Member 'MainPlayer_C_Attack::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_GetForwardVector_ReturnValue_1) == 0x000294, "Member 'MainPlayer_C_Attack::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_Array_Contains_ReturnValue) == 0x0002A0, "Member 'MainPlayer_C_Attack::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_Array_Find_ReturnValue) == 0x0002A4, "Member 'MainPlayer_C_Attack::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_Array_Get_Item) == 0x0002A8, "Member 'MainPlayer_C_Attack::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0002AC, "Member 'MainPlayer_C_Attack::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0002B0, "Member 'MainPlayer_C_Attack::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0002B4, "Member 'MainPlayer_C_Attack::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0002B8, "Member 'MainPlayer_C_Attack::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0002C4, "Member 'MainPlayer_C_Attack::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.checkEquip
// 0x0300 (0x0300 - 0x0000)
struct MainPlayer_C_CheckEquip final
{
public:
	bool                                          Empty;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0xF];                                        // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_equipment                      Output;                                            // 0x0010(0x0100)(Parm, OutParm, HasGetValueTypeHash)
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot;                     // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1;                   // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_save                           CallFunc_getData_data;                             // 0x0130(0x00C0)(HasGetValueTypeHash)
	struct FStruct_equipment                      K2Node_MakeStruct_struct_equipment;                // 0x01F0(0x0100)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_CheckEquip) == 0x000010, "Wrong alignment on MainPlayer_C_CheckEquip");
static_assert(sizeof(MainPlayer_C_CheckEquip) == 0x000300, "Wrong size on MainPlayer_C_CheckEquip");
static_assert(offsetof(MainPlayer_C_CheckEquip, Empty) == 0x000000, "Member 'MainPlayer_C_CheckEquip::Empty' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CheckEquip, Output) == 0x000010, "Member 'MainPlayer_C_CheckEquip::Output' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CheckEquip, CallFunc_getSaveSlot_saveSlot) == 0x000110, "Member 'MainPlayer_C_CheckEquip::CallFunc_getSaveSlot_saveSlot' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CheckEquip, K2Node_DynamicCast_AsInt_Save_1) == 0x000118, "Member 'MainPlayer_C_CheckEquip::K2Node_DynamicCast_AsInt_Save_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CheckEquip, K2Node_DynamicCast_bSuccess) == 0x000128, "Member 'MainPlayer_C_CheckEquip::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CheckEquip, CallFunc_getData_data) == 0x000130, "Member 'MainPlayer_C_CheckEquip::CallFunc_getData_data' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CheckEquip, K2Node_MakeStruct_struct_equipment) == 0x0001F0, "Member 'MainPlayer_C_CheckEquip::K2Node_MakeStruct_struct_equipment' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CheckEquip, CallFunc_IsValidClass_ReturnValue) == 0x0002F0, "Member 'MainPlayer_C_CheckEquip::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CheckEquip, CallFunc_Not_PreBool_ReturnValue) == 0x0002F1, "Member 'MainPlayer_C_CheckEquip::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.movOut
// 0x0278 (0x0278 - 0x0000)
struct MainPlayer_C_MovOut final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                InputPin;                                          // 0x0088(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             H;                                                 // 0x0094(0x0088)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                L;                                                 // 0x011C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0136(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0137(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddActorWorldOffset_SweepHitResult;    // 0x01F0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MainPlayer_C_MovOut) == 0x000008, "Wrong alignment on MainPlayer_C_MovOut");
static_assert(sizeof(MainPlayer_C_MovOut) == 0x000278, "Wrong size on MainPlayer_C_MovOut");
static_assert(offsetof(MainPlayer_C_MovOut, Hit) == 0x000000, "Member 'MainPlayer_C_MovOut::Hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, InputPin) == 0x000088, "Member 'MainPlayer_C_MovOut::InputPin' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, H) == 0x000094, "Member 'MainPlayer_C_MovOut::H' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, L) == 0x00011C, "Member 'MainPlayer_C_MovOut::L' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, Temp_bool_Has_Been_Initd_Variable) == 0x000128, "Member 'MainPlayer_C_MovOut::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, Temp_int_Variable) == 0x00012C, "Member 'MainPlayer_C_MovOut::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_Add_IntInt_ReturnValue) == 0x000130, "Member 'MainPlayer_C_MovOut::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_Less_IntInt_ReturnValue) == 0x000134, "Member 'MainPlayer_C_MovOut::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, Temp_bool_IsClosed_Variable) == 0x000135, "Member 'MainPlayer_C_MovOut::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_bBlockingHit) == 0x000136, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_bInitialOverlap) == 0x000137, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_Time) == 0x000138, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_Distance) == 0x00013C, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_Location) == 0x000140, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_ImpactPoint) == 0x00014C, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_Normal) == 0x000158, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_ImpactNormal) == 0x000164, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_PhysMat) == 0x000170, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_HitActor) == 0x000178, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_HitComponent) == 0x000180, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_HitBoneName) == 0x000188, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_HitItem) == 0x000190, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_ElementIndex) == 0x000194, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_FaceIndex) == 0x000198, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_TraceStart) == 0x00019C, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_TraceEnd) == 0x0001A8, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001B4, "Member 'MainPlayer_C_MovOut::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_Cross_VectorVector_ReturnValue) == 0x0001C0, "Member 'MainPlayer_C_MovOut::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x0001CC, "Member 'MainPlayer_C_MovOut::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_Add_VectorVector_ReturnValue) == 0x0001D8, "Member 'MainPlayer_C_MovOut::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0001E4, "Member 'MainPlayer_C_MovOut::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_K2_AddActorWorldOffset_SweepHitResult) == 0x0001F0, "Member 'MainPlayer_C_MovOut::CallFunc_K2_AddActorWorldOffset_SweepHitResult' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.teleportWObackrooms
// 0x0130 (0x0130 - 0x0000)
struct MainPlayer_C_TeleportWObackrooms final
{
public:
	struct FTransform                             NewTransform;                                      // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x00A0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_TeleportWObackrooms) == 0x000010, "Wrong alignment on MainPlayer_C_TeleportWObackrooms");
static_assert(sizeof(MainPlayer_C_TeleportWObackrooms) == 0x000130, "Wrong size on MainPlayer_C_TeleportWObackrooms");
static_assert(offsetof(MainPlayer_C_TeleportWObackrooms, NewTransform) == 0x000000, "Member 'MainPlayer_C_TeleportWObackrooms::NewTransform' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TeleportWObackrooms, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000030, "Member 'MainPlayer_C_TeleportWObackrooms::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TeleportWObackrooms, CallFunc_BreakTransform_Location) == 0x00003C, "Member 'MainPlayer_C_TeleportWObackrooms::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TeleportWObackrooms, CallFunc_BreakTransform_Rotation) == 0x000048, "Member 'MainPlayer_C_TeleportWObackrooms::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TeleportWObackrooms, CallFunc_BreakTransform_Scale) == 0x000054, "Member 'MainPlayer_C_TeleportWObackrooms::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TeleportWObackrooms, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'MainPlayer_C_TeleportWObackrooms::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TeleportWObackrooms, CallFunc_MakeTransform_ReturnValue) == 0x000070, "Member 'MainPlayer_C_TeleportWObackrooms::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TeleportWObackrooms, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x0000A0, "Member 'MainPlayer_C_TeleportWObackrooms::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TeleportWObackrooms, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000128, "Member 'MainPlayer_C_TeleportWObackrooms::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.throwShit
// 0x0078 (0x0078 - 0x0000)
struct MainPlayer_C_ThrowShit final
{
public:
	class UPrimitiveComponent*                    InputPin;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMass_ReturnValue;                      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue_1;         // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_ThrowShit) == 0x000008, "Wrong alignment on MainPlayer_C_ThrowShit");
static_assert(sizeof(MainPlayer_C_ThrowShit) == 0x000078, "Wrong size on MainPlayer_C_ThrowShit");
static_assert(offsetof(MainPlayer_C_ThrowShit, InputPin) == 0x000000, "Member 'MainPlayer_C_ThrowShit::InputPin' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_RandomFloatInRange_ReturnValue) == 0x000008, "Member 'MainPlayer_C_ThrowShit::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_RandomUnitVector_ReturnValue) == 0x00000C, "Member 'MainPlayer_C_ThrowShit::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000018, "Member 'MainPlayer_C_ThrowShit::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_GetForwardVector_ReturnValue) == 0x000024, "Member 'MainPlayer_C_ThrowShit::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000030, "Member 'MainPlayer_C_ThrowShit::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_GetMass_ReturnValue) == 0x00003C, "Member 'MainPlayer_C_ThrowShit::CallFunc_GetMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_GetVelocity_ReturnValue) == 0x000040, "Member 'MainPlayer_C_ThrowShit::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_FMax_ReturnValue) == 0x00004C, "Member 'MainPlayer_C_ThrowShit::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000050, "Member 'MainPlayer_C_ThrowShit::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000054, "Member 'MainPlayer_C_ThrowShit::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_Divide_VectorFloat_ReturnValue_1) == 0x000060, "Member 'MainPlayer_C_ThrowShit::CallFunc_Divide_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_Add_VectorVector_ReturnValue) == 0x00006C, "Member 'MainPlayer_C_ThrowShit::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.addPlayerDamage
// 0x00E0 (0x00E0 - 0x0000)
struct MainPlayer_C_AddPlayerDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DamageLocation;                                    // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FullBody;                                          // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bypassSettings;                                    // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualExactly_VectorVector_ReturnValue;    // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isDreaming_dreaming;                      // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isStrong_return;                          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53[0x1];                                       // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut;         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_1;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_2;        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_3;        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue;    // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_4;        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_AddPlayerDamage) == 0x000010, "Wrong alignment on MainPlayer_C_AddPlayerDamage");
static_assert(sizeof(MainPlayer_C_AddPlayerDamage) == 0x0000E0, "Wrong size on MainPlayer_C_AddPlayerDamage");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, Damage) == 0x000000, "Member 'MainPlayer_C_AddPlayerDamage::Damage' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, DamageLocation) == 0x000004, "Member 'MainPlayer_C_AddPlayerDamage::DamageLocation' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, FullBody) == 0x000010, "Member 'MainPlayer_C_AddPlayerDamage::FullBody' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, bypassSettings) == 0x00001C, "Member 'MainPlayer_C_AddPlayerDamage::bypassSettings' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_EqualExactly_VectorVector_ReturnValue) == 0x00001D, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_EqualExactly_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_isDreaming_dreaming) == 0x00001E, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_isDreaming_dreaming' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000020, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_BooleanOR_ReturnValue) == 0x000050, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_isStrong_return) == 0x000051, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_isStrong_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_BooleanOR_ReturnValue_1) == 0x000052, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_SelectFloat_ReturnValue) == 0x000054, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000058, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, Temp_int_Variable) == 0x00005C, "Member 'MainPlayer_C_AddPlayerDamage::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_VictoryFloatMinusEquals_FloatOut) == 0x000060, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_VictoryFloatMinusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000064, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_FClamp_ReturnValue) == 0x000068, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x00006C, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_VictoryFloatPlusEquals_FloatOut_1) == 0x000070, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_VictoryFloatPlusEquals_FloatOut_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_VictoryFloatPlusEquals_FloatOut_2) == 0x000074, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_VictoryFloatPlusEquals_FloatOut_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_VictoryFloatPlusEquals_FloatOut_3) == 0x000078, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_VictoryFloatPlusEquals_FloatOut_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00007C, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000080, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00008C, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_Normal_ReturnValue) == 0x000098, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_InverseTransformDirection_ReturnValue) == 0x0000A4, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_InverseTransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_BreakVector_X) == 0x0000B0, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_BreakVector_Y) == 0x0000B4, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_BreakVector_Z) == 0x0000B8, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_DegAtan2_ReturnValue) == 0x0000BC, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000C0, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000C4, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000C8, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_Round_ReturnValue) == 0x0000CC, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_Percent_IntInt_ReturnValue) == 0x0000D0, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, K2Node_Select_Default) == 0x0000D4, "Member 'MainPlayer_C_AddPlayerDamage::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_VictoryFloatPlusEquals_FloatOut_4) == 0x0000D8, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_VictoryFloatPlusEquals_FloatOut_4' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.useArm
// 0x0160 (0x0160 - 0x0000)
struct MainPlayer_C_UseArm final
{
public:
	struct FHitResult                             OutHit;                                            // 0x0000(0x0088)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0090(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_arm_start;                                // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_arm_end;                                  // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_arm_rotation;                             // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x00D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_UseArm) == 0x000008, "Wrong alignment on MainPlayer_C_UseArm");
static_assert(sizeof(MainPlayer_C_UseArm) == 0x000160, "Wrong size on MainPlayer_C_UseArm");
static_assert(offsetof(MainPlayer_C_UseArm, OutHit) == 0x000000, "Member 'MainPlayer_C_UseArm::OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseArm, ReturnValue) == 0x000088, "Member 'MainPlayer_C_UseArm::ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseArm, Temp_object_Variable) == 0x000090, "Member 'MainPlayer_C_UseArm::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseArm, CallFunc_arm_start) == 0x0000A0, "Member 'MainPlayer_C_UseArm::CallFunc_arm_start' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseArm, CallFunc_arm_end) == 0x0000AC, "Member 'MainPlayer_C_UseArm::CallFunc_arm_end' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseArm, CallFunc_arm_rotation) == 0x0000B8, "Member 'MainPlayer_C_UseArm::CallFunc_arm_rotation' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseArm, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000C4, "Member 'MainPlayer_C_UseArm::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseArm, CallFunc_SphereTraceSingle_OutHit) == 0x0000D0, "Member 'MainPlayer_C_UseArm::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseArm, CallFunc_SphereTraceSingle_ReturnValue) == 0x000158, "Member 'MainPlayer_C_UseArm::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.sit
// 0x0048 (0x0048 - 0x0000)
struct MainPlayer_C_Sit final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UComp_sitting_C*                        Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASitBox_C*                              Place;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_2;      // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Sit) == 0x000008, "Wrong alignment on MainPlayer_C_Sit");
static_assert(sizeof(MainPlayer_C_Sit) == 0x000048, "Wrong size on MainPlayer_C_Sit");
static_assert(offsetof(MainPlayer_C_Sit, Actor) == 0x000000, "Member 'MainPlayer_C_Sit::Actor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, Component) == 0x000008, "Member 'MainPlayer_C_Sit::Component' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, Place) == 0x000010, "Member 'MainPlayer_C_Sit::Place' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_GetVelocity_ReturnValue) == 0x000018, "Member 'MainPlayer_C_Sit::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_GetActorUpVector_ReturnValue) == 0x000024, "Member 'MainPlayer_C_Sit::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_VSize_ReturnValue) == 0x000030, "Member 'MainPlayer_C_Sit::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_Dot_VectorVector_ReturnValue) == 0x000034, "Member 'MainPlayer_C_Sit::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000038, "Member 'MainPlayer_C_Sit::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000039, "Member 'MainPlayer_C_Sit::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_BooleanAND_ReturnValue) == 0x00003A, "Member 'MainPlayer_C_Sit::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00003B, "Member 'MainPlayer_C_Sit::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x00003C, "Member 'MainPlayer_C_Sit::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_NotEqual_ObjectObject_ReturnValue_2) == 0x00003D, "Member 'MainPlayer_C_Sit::CallFunc_NotEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_BooleanAND_ReturnValue_1) == 0x00003E, "Member 'MainPlayer_C_Sit::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_IsValid_ReturnValue) == 0x00003F, "Member 'MainPlayer_C_Sit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_BooleanAND_ReturnValue_2) == 0x000040, "Member 'MainPlayer_C_Sit::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.selectedAction
// 0x0040 (0x0040 - 0x0000)
struct MainPlayer_C_SelectedAction final
{
public:
	Enum_interactionActions                       Output1;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AsName;                                            // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	Enum_interactionActions                       Temp_byte_Variable;                                // 0x0018(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       Temp_byte_Variable_1;                              // 0x0019(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       Temp_byte_Variable_2;                              // 0x001A(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_interactionActions                       Temp_byte_Variable_3;                              // 0x001F(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_3;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	Enum_interactionActions                       CallFunc_Array_Get_Item_1;                         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_SelectedAction) == 0x000008, "Wrong alignment on MainPlayer_C_SelectedAction");
static_assert(sizeof(MainPlayer_C_SelectedAction) == 0x000040, "Wrong size on MainPlayer_C_SelectedAction");
static_assert(offsetof(MainPlayer_C_SelectedAction, Output1) == 0x000000, "Member 'MainPlayer_C_SelectedAction::Output1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, AsName) == 0x000008, "Member 'MainPlayer_C_SelectedAction::AsName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, Temp_byte_Variable) == 0x000018, "Member 'MainPlayer_C_SelectedAction::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, Temp_byte_Variable_1) == 0x000019, "Member 'MainPlayer_C_SelectedAction::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, Temp_byte_Variable_2) == 0x00001A, "Member 'MainPlayer_C_SelectedAction::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00001B, "Member 'MainPlayer_C_SelectedAction::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, CallFunc_Array_Contains_ReturnValue) == 0x00001C, "Member 'MainPlayer_C_SelectedAction::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, CallFunc_Array_Contains_ReturnValue_1) == 0x00001D, "Member 'MainPlayer_C_SelectedAction::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, CallFunc_Array_Contains_ReturnValue_2) == 0x00001E, "Member 'MainPlayer_C_SelectedAction::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, Temp_byte_Variable_3) == 0x00001F, "Member 'MainPlayer_C_SelectedAction::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, CallFunc_Array_Contains_ReturnValue_3) == 0x000020, "Member 'MainPlayer_C_SelectedAction::CallFunc_Array_Contains_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, CallFunc_Array_Get_Item) == 0x000028, "Member 'MainPlayer_C_SelectedAction::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'MainPlayer_C_SelectedAction::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.collectObject
// 0x01B0 (0x01B0 - 0x0000)
struct MainPlayer_C_CollectObject final
{
public:
	bool                                          UseHold;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Manual;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collected;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Ac;                                                // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Comp;                                              // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1;                   // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1_1;                 // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_save                           CallFunc_getData_data;                             // 0x0060(0x00C0)(HasGetValueTypeHash)
	bool                                          CallFunc_ignoreSave_ignoreSave;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_addEquip_return;                          // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_addEquip_rebug;                           // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player;                   // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_C*                                CallFunc_asProp_return;                            // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_1;                 // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Select_Default;                             // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_canPickup_return;                         // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17B[0x1];                                      // 0x017B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMass_ReturnValue;                      // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Select_Default_1;                           // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_CollectObject) == 0x000010, "Wrong alignment on MainPlayer_C_CollectObject");
static_assert(sizeof(MainPlayer_C_CollectObject) == 0x0001B0, "Wrong size on MainPlayer_C_CollectObject");
static_assert(offsetof(MainPlayer_C_CollectObject, UseHold) == 0x000000, "Member 'MainPlayer_C_CollectObject::UseHold' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, Manual) == 0x000008, "Member 'MainPlayer_C_CollectObject::Manual' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, Collected) == 0x000010, "Member 'MainPlayer_C_CollectObject::Collected' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, Ac) == 0x000018, "Member 'MainPlayer_C_CollectObject::Ac' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, Comp) == 0x000020, "Member 'MainPlayer_C_CollectObject::Comp' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, Temp_bool_Variable) == 0x000028, "Member 'MainPlayer_C_CollectObject::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'MainPlayer_C_CollectObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, Temp_bool_Variable_1) == 0x00002A, "Member 'MainPlayer_C_CollectObject::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_IsValid_ReturnValue_1) == 0x00002B, "Member 'MainPlayer_C_CollectObject::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_DynamicCast_AsInt_Save_1) == 0x000030, "Member 'MainPlayer_C_CollectObject::K2Node_DynamicCast_AsInt_Save_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'MainPlayer_C_CollectObject::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_DynamicCast_AsInt_Save_1_1) == 0x000048, "Member 'MainPlayer_C_CollectObject::K2Node_DynamicCast_AsInt_Save_1_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'MainPlayer_C_CollectObject::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_getData_data) == 0x000060, "Member 'MainPlayer_C_CollectObject::CallFunc_getData_data' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_ignoreSave_ignoreSave) == 0x000120, "Member 'MainPlayer_C_CollectObject::CallFunc_ignoreSave_ignoreSave' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_addEquip_return) == 0x000121, "Member 'MainPlayer_C_CollectObject::CallFunc_addEquip_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_addEquip_rebug) == 0x000128, "Member 'MainPlayer_C_CollectObject::CallFunc_addEquip_rebug' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_DynamicCast_AsInt_Player) == 0x000138, "Member 'MainPlayer_C_CollectObject::K2Node_DynamicCast_AsInt_Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_DynamicCast_bSuccess_2) == 0x000148, "Member 'MainPlayer_C_CollectObject::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_asProp_return) == 0x000150, "Member 'MainPlayer_C_CollectObject::CallFunc_asProp_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_DynamicCast_AsInt_Player_1) == 0x000158, "Member 'MainPlayer_C_CollectObject::K2Node_DynamicCast_AsInt_Player_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_DynamicCast_bSuccess_3) == 0x000168, "Member 'MainPlayer_C_CollectObject::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_Select_Default) == 0x000170, "Member 'MainPlayer_C_CollectObject::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_canPickup_return) == 0x000178, "Member 'MainPlayer_C_CollectObject::CallFunc_canPickup_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_IsValid_ReturnValue_2) == 0x000179, "Member 'MainPlayer_C_CollectObject::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x00017A, "Member 'MainPlayer_C_CollectObject::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_GetMass_ReturnValue) == 0x00017C, "Member 'MainPlayer_C_CollectObject::CallFunc_GetMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000180, "Member 'MainPlayer_C_CollectObject::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_Select_Default_1) == 0x000188, "Member 'MainPlayer_C_CollectObject::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_IsValid_ReturnValue_3) == 0x000190, "Member 'MainPlayer_C_CollectObject::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000198, "Member 'MainPlayer_C_CollectObject::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_DynamicCast_AsPrimitive_Component) == 0x0001A0, "Member 'MainPlayer_C_CollectObject::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_DynamicCast_bSuccess_4) == 0x0001A8, "Member 'MainPlayer_C_CollectObject::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.updateSpeed
// 0x0030 (0x0030 - 0x0000)
struct MainPlayer_C_UpdateSpeed final
{
public:
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_UpdateSpeed) == 0x000008, "Wrong alignment on MainPlayer_C_UpdateSpeed");
static_assert(sizeof(MainPlayer_C_UpdateSpeed) == 0x000030, "Wrong size on MainPlayer_C_UpdateSpeed");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_SelectFloat_ReturnValue) == 0x000000, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_getSaveSlot_saveSlot) == 0x000008, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_getSaveSlot_saveSlot' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000011, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_BooleanOR_ReturnValue) == 0x000012, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_Lerp_ReturnValue) == 0x000018, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000020, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_SelectFloat_ReturnValue_1) == 0x000024, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_SelectFloat_ReturnValue_2) == 0x000028, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_SelectFloat_ReturnValue_3) == 0x00002C, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.fixActionIndex
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_FixActionIndex final
{
public:
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_FixActionIndex) == 0x000004, "Wrong alignment on MainPlayer_C_FixActionIndex");
static_assert(sizeof(MainPlayer_C_FixActionIndex) == 0x000008, "Wrong size on MainPlayer_C_FixActionIndex");
static_assert(offsetof(MainPlayer_C_FixActionIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000000, "Member 'MainPlayer_C_FixActionIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FixActionIndex, CallFunc_Percent_IntInt_ReturnValue) == 0x000004, "Member 'MainPlayer_C_FixActionIndex::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.findFootLocation
// 0x00C0 (0x00C0 - 0x0000)
struct MainPlayer_C_FindFootLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_FindFootLocation) == 0x000010, "Wrong alignment on MainPlayer_C_FindFootLocation");
static_assert(sizeof(MainPlayer_C_FindFootLocation) == 0x0000C0, "Wrong size on MainPlayer_C_FindFootLocation");
static_assert(offsetof(MainPlayer_C_FindFootLocation, ReturnValue) == 0x000000, "Member 'MainPlayer_C_FindFootLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FindFootLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'MainPlayer_C_FindFootLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FindFootLocation, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'MainPlayer_C_FindFootLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FindFootLocation, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'MainPlayer_C_FindFootLocation::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FindFootLocation, CallFunc_BreakTransform_Location) == 0x000050, "Member 'MainPlayer_C_FindFootLocation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FindFootLocation, CallFunc_BreakTransform_Rotation) == 0x00005C, "Member 'MainPlayer_C_FindFootLocation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FindFootLocation, CallFunc_BreakTransform_Scale) == 0x000068, "Member 'MainPlayer_C_FindFootLocation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FindFootLocation, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000074, "Member 'MainPlayer_C_FindFootLocation::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FindFootLocation, CallFunc_MakeTransform_ReturnValue) == 0x000080, "Member 'MainPlayer_C_FindFootLocation::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FindFootLocation, CallFunc_InverseTransformLocation_ReturnValue) == 0x0000B0, "Member 'MainPlayer_C_FindFootLocation::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.updateEquipment
// 0x0200 (0x0200 - 0x0000)
struct MainPlayer_C_UpdateEquipment final
{
public:
	TArray<struct FWeightedBlendable>             Overlays;                                          // 0x0000(0x0010)(Edit, BlueprintVisible)
	bool                                          HasHikingBoots;                                    // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Fannypacks;                                        // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasJetpack;                                        // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeightedBlendable                     CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendable                     CallFunc_Array_Get_Item_1;                         // 0x0038(0x0010)(NoDestructor)
	struct FWeightedBlendable                     CallFunc_Array_Get_Item_2;                         // 0x0048(0x0010)(NoDestructor)
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player_1;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FWeightedBlendable>             K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	struct FWeightedBlendable                     CallFunc_Array_Get_Item_3;                         // 0x0090(0x0010)(NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x00A4(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot;                     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_equipment                      CallFunc_Array_Get_Item_4;                         // 0x00F0(0x0100)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x3];                                      // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_UpdateEquipment) == 0x000010, "Wrong alignment on MainPlayer_C_UpdateEquipment");
static_assert(sizeof(MainPlayer_C_UpdateEquipment) == 0x000200, "Wrong size on MainPlayer_C_UpdateEquipment");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, Overlays) == 0x000000, "Member 'MainPlayer_C_UpdateEquipment::Overlays' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, HasHikingBoots) == 0x000010, "Member 'MainPlayer_C_UpdateEquipment::HasHikingBoots' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, Fannypacks) == 0x000014, "Member 'MainPlayer_C_UpdateEquipment::Fannypacks' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, HasJetpack) == 0x000018, "Member 'MainPlayer_C_UpdateEquipment::HasJetpack' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'MainPlayer_C_UpdateEquipment::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Array_Get_Item) == 0x000020, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Array_Get_Item_2) == 0x000048, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_getMainPlayer_AsMain_Player) == 0x000058, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_getMainPlayer_AsMain_Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_getMainPlayer_AsMain_Player_1) == 0x000060, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_getMainPlayer_AsMain_Player_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'MainPlayer_C_UpdateEquipment::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Array_Add_ReturnValue) == 0x00006C, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Array_Add_ReturnValue_1) == 0x000074, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Array_Add_ReturnValue_2) == 0x000078, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, Temp_int_Array_Index_Variable_1) == 0x00007C, "Member 'MainPlayer_C_UpdateEquipment::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, K2Node_MakeArray_Array) == 0x000080, "Member 'MainPlayer_C_UpdateEquipment::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Array_Get_Item_3) == 0x000090, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000A0, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, Temp_name_Variable) == 0x0000A4, "Member 'MainPlayer_C_UpdateEquipment::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, Temp_int_Variable) == 0x0000AC, "Member 'MainPlayer_C_UpdateEquipment::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, Temp_int_Loop_Counter_Variable_1) == 0x0000B0, "Member 'MainPlayer_C_UpdateEquipment::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B8, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_SelectFloat_ReturnValue) == 0x0000BC, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0000C0, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000C4, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000C8, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000CC, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x0000D0, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Array_Find_ReturnValue) == 0x0000D8, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_getSaveSlot_saveSlot) == 0x0000E0, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_getSaveSlot_saveSlot' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Array_Length_ReturnValue_1) == 0x0000E8, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Array_Get_Item_4) == 0x0000F0, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001F0, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Array_Add_ReturnValue_3) == 0x0001F4, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Array_Add_ReturnValue_4) == 0x0001F8, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, K2Node_SwitchName_CmpSuccess) == 0x0001FC, "Member 'MainPlayer_C_UpdateEquipment::K2Node_SwitchName_CmpSuccess' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.tryGetNail
// 0x0250 (0x0250 - 0x0000)
struct MainPlayer_C_TryGetNail final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 NailClass;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          R;                                                 // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Ind;                                               // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 A;                                                 // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UClass*, class UClass*>            Nails;                                             // 0x0020(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mInt                           CallFunc_Array_Get_Item;                           // 0x0088(0x0010)(HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsProp_Nail;               // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsProp_Container;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0xF];                                       // 0x00B1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_save                           CallFunc_Array_Get_Item_2;                         // 0x00C0(0x00C0)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0188(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UClass*, class UClass*>            K2Node_MakeVariable_MakeVariableOutput;            // 0x01A0(0x0050)()
	class UClass*                                 CallFunc_Map_Find_Value;                           // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Map_Find_Value_1;                         // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0218(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0228(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_3;                            // 0x0240(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_TryGetNail) == 0x000010, "Wrong alignment on MainPlayer_C_TryGetNail");
static_assert(sizeof(MainPlayer_C_TryGetNail) == 0x000250, "Wrong size on MainPlayer_C_TryGetNail");
static_assert(offsetof(MainPlayer_C_TryGetNail, Success) == 0x000000, "Member 'MainPlayer_C_TryGetNail::Success' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, NailClass) == 0x000008, "Member 'MainPlayer_C_TryGetNail::NailClass' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, R) == 0x000010, "Member 'MainPlayer_C_TryGetNail::R' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, Ind) == 0x000014, "Member 'MainPlayer_C_TryGetNail::Ind' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, A) == 0x000018, "Member 'MainPlayer_C_TryGetNail::A' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, Nails) == 0x000020, "Member 'MainPlayer_C_TryGetNail::Nails' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'MainPlayer_C_TryGetNail::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'MainPlayer_C_TryGetNail::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, Temp_int_Array_Index_Variable) == 0x000078, "Member 'MainPlayer_C_TryGetNail::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, Temp_int_Array_Index_Variable_1) == 0x00007C, "Member 'MainPlayer_C_TryGetNail::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'MainPlayer_C_TryGetNail::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'MainPlayer_C_TryGetNail::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Array_Get_Item) == 0x000088, "Member 'MainPlayer_C_TryGetNail::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, K2Node_ClassDynamicCast_AsProp_Nail) == 0x000098, "Member 'MainPlayer_C_TryGetNail::K2Node_ClassDynamicCast_AsProp_Nail' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, K2Node_ClassDynamicCast_bSuccess) == 0x0000A0, "Member 'MainPlayer_C_TryGetNail::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Array_Get_Item_1) == 0x0000A4, "Member 'MainPlayer_C_TryGetNail::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, K2Node_ClassDynamicCast_AsProp_Container) == 0x0000A8, "Member 'MainPlayer_C_TryGetNail::K2Node_ClassDynamicCast_AsProp_Container' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, K2Node_ClassDynamicCast_bSuccess_1) == 0x0000B0, "Member 'MainPlayer_C_TryGetNail::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Array_Get_Item_2) == 0x0000C0, "Member 'MainPlayer_C_TryGetNail::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Array_Length_ReturnValue_1) == 0x000180, "Member 'MainPlayer_C_TryGetNail::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, Temp_string_Variable) == 0x000188, "Member 'MainPlayer_C_TryGetNail::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Array_RemoveItem_ReturnValue) == 0x000198, "Member 'MainPlayer_C_TryGetNail::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, K2Node_MakeVariable_MakeVariableOutput) == 0x0001A0, "Member 'MainPlayer_C_TryGetNail::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Map_Find_Value) == 0x0001F0, "Member 'MainPlayer_C_TryGetNail::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Map_Find_ReturnValue) == 0x0001F8, "Member 'MainPlayer_C_TryGetNail::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Map_Find_Value_1) == 0x000200, "Member 'MainPlayer_C_TryGetNail::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Map_Find_ReturnValue_1) == 0x000208, "Member 'MainPlayer_C_TryGetNail::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, Temp_int_Loop_Counter_Variable_1) == 0x00020C, "Member 'MainPlayer_C_TryGetNail::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Less_IntInt_ReturnValue_1) == 0x000210, "Member 'MainPlayer_C_TryGetNail::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Add_IntInt_ReturnValue_1) == 0x000214, "Member 'MainPlayer_C_TryGetNail::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, Temp_string_Variable_1) == 0x000218, "Member 'MainPlayer_C_TryGetNail::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, Temp_string_Variable_2) == 0x000228, "Member 'MainPlayer_C_TryGetNail::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000238, "Member 'MainPlayer_C_TryGetNail::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, Temp_string_Variable_3) == 0x000240, "Member 'MainPlayer_C_TryGetNail::Temp_string_Variable_3' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.updateWheel
// 0x0024 (0x0024 - 0x0000)
struct MainPlayer_C_UpdateWheel final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetRotated2D_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_UpdateWheel) == 0x000004, "Wrong alignment on MainPlayer_C_UpdateWheel");
static_assert(sizeof(MainPlayer_C_UpdateWheel) == 0x000024, "Wrong size on MainPlayer_C_UpdateWheel");
static_assert(offsetof(MainPlayer_C_UpdateWheel, Temp_bool_Variable) == 0x000000, "Member 'MainPlayer_C_UpdateWheel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateWheel, Temp_byte_Variable) == 0x000001, "Member 'MainPlayer_C_UpdateWheel::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateWheel, Temp_byte_Variable_1) == 0x000002, "Member 'MainPlayer_C_UpdateWheel::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateWheel, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000004, "Member 'MainPlayer_C_UpdateWheel::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateWheel, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000008, "Member 'MainPlayer_C_UpdateWheel::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateWheel, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'MainPlayer_C_UpdateWheel::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateWheel, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000010, "Member 'MainPlayer_C_UpdateWheel::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateWheel, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'MainPlayer_C_UpdateWheel::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateWheel, CallFunc_GetRotated2D_ReturnValue) == 0x000018, "Member 'MainPlayer_C_UpdateWheel::CallFunc_GetRotated2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateWheel, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'MainPlayer_C_UpdateWheel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateWheel, K2Node_Select_Default) == 0x000021, "Member 'MainPlayer_C_UpdateWheel::K2Node_Select_Default' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.throwShovelItem
// 0x0080 (0x0080 - 0x0000)
struct MainPlayer_C_ThrowShovelItem final
{
public:
	struct FVector                                NewVel;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Force;                                             // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMesh*>                    K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ConstParm, ReferenceParm)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_dirtball_C*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_ThrowShovelItem) == 0x000010, "Wrong alignment on MainPlayer_C_ThrowShovelItem");
static_assert(sizeof(MainPlayer_C_ThrowShovelItem) == 0x000080, "Wrong size on MainPlayer_C_ThrowShovelItem");
static_assert(offsetof(MainPlayer_C_ThrowShovelItem, NewVel) == 0x000000, "Member 'MainPlayer_C_ThrowShovelItem::NewVel' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShovelItem, Force) == 0x00000C, "Member 'MainPlayer_C_ThrowShovelItem::Force' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShovelItem, K2Node_MakeArray_Array) == 0x000018, "Member 'MainPlayer_C_ThrowShovelItem::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShovelItem, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000030, "Member 'MainPlayer_C_ThrowShovelItem::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShovelItem, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000060, "Member 'MainPlayer_C_ThrowShovelItem::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShovelItem, CallFunc_Array_Find_ReturnValue) == 0x000068, "Member 'MainPlayer_C_ThrowShovelItem::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShovelItem, CallFunc_FinishSpawningActor_ReturnValue) == 0x000070, "Member 'MainPlayer_C_ThrowShovelItem::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShovelItem, K2Node_SwitchInteger_CmpSuccess) == 0x000078, "Member 'MainPlayer_C_ThrowShovelItem::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.heal
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_Heal final
{
public:
	float                                         Add;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_Heal) == 0x000004, "Wrong alignment on MainPlayer_C_Heal");
static_assert(sizeof(MainPlayer_C_Heal) == 0x000018, "Wrong size on MainPlayer_C_Heal");
static_assert(offsetof(MainPlayer_C_Heal, Add) == 0x000000, "Member 'MainPlayer_C_Heal::Add' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Heal, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'MainPlayer_C_Heal::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Heal, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000008, "Member 'MainPlayer_C_Heal::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Heal, CallFunc_FClamp_ReturnValue) == 0x00000C, "Member 'MainPlayer_C_Heal::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Heal, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x000010, "Member 'MainPlayer_C_Heal::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Heal, CallFunc_FClamp_ReturnValue_1) == 0x000014, "Member 'MainPlayer_C_Heal::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.skipGrabRadial
// 0x00A0 (0x00A0 - 0x0000)
struct MainPlayer_C_SkipGrabRadial final
{
public:
	bool                                          Skip;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects;                  // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_skipRadial_skip;                          // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_SkipGrabRadial) == 0x000008, "Wrong alignment on MainPlayer_C_SkipGrabRadial");
static_assert(sizeof(MainPlayer_C_SkipGrabRadial) == 0x0000A0, "Wrong size on MainPlayer_C_SkipGrabRadial");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, Skip) == 0x000000, "Member 'MainPlayer_C_SkipGrabRadial::Skip' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_bBlockingHit) == 0x000001, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_bInitialOverlap) == 0x000002, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_Time) == 0x000004, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_Distance) == 0x000008, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_Location) == 0x00000C, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_ImpactPoint) == 0x000018, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_Normal) == 0x000024, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_ImpactNormal) == 0x000030, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_PhysMat) == 0x000040, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_HitActor) == 0x000048, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_HitComponent) == 0x000050, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_HitBoneName) == 0x000058, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_HitItem) == 0x000060, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_ElementIndex) == 0x000064, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_FaceIndex) == 0x000068, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_TraceStart) == 0x00006C, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_TraceEnd) == 0x000078, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_DoesImplementInterface_ReturnValue) == 0x000084, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, K2Node_DynamicCast_AsInt_Objects) == 0x000088, "Member 'MainPlayer_C_SkipGrabRadial::K2Node_DynamicCast_AsInt_Objects' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'MainPlayer_C_SkipGrabRadial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_skipRadial_skip) == 0x000099, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_skipRadial_skip' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.processArmor
// 0x0150 (0x0150 - 0x0000)
struct MainPlayer_C_ProcessArmor final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Damage;                                            // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   boneHit;                                           // 0x008C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0094(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9E[0x2];                                       // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x011C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_2;                              // 0x0128(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_FindClosestBone_K2_BoneLocation;          // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_FindClosestBone_K2_ReturnValue;           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_ProcessArmor) == 0x000008, "Wrong alignment on MainPlayer_C_ProcessArmor");
static_assert(sizeof(MainPlayer_C_ProcessArmor) == 0x000150, "Wrong size on MainPlayer_C_ProcessArmor");
static_assert(offsetof(MainPlayer_C_ProcessArmor, Hit) == 0x000000, "Member 'MainPlayer_C_ProcessArmor::Hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, Damage) == 0x000088, "Member 'MainPlayer_C_ProcessArmor::Damage' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, boneHit) == 0x00008C, "Member 'MainPlayer_C_ProcessArmor::boneHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, Temp_name_Variable) == 0x000094, "Member 'MainPlayer_C_ProcessArmor::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_bBlockingHit) == 0x00009C, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_bInitialOverlap) == 0x00009D, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_Time) == 0x0000A0, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_Distance) == 0x0000A4, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_Location) == 0x0000A8, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_ImpactPoint) == 0x0000B4, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_Normal) == 0x0000C0, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_ImpactNormal) == 0x0000CC, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_PhysMat) == 0x0000D8, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_HitActor) == 0x0000E0, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_HitComponent) == 0x0000E8, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_HitBoneName) == 0x0000F0, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_HitItem) == 0x0000F8, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_ElementIndex) == 0x0000FC, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_FaceIndex) == 0x000100, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_TraceStart) == 0x000104, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_TraceEnd) == 0x000110, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, Temp_name_Variable_1) == 0x00011C, "Member 'MainPlayer_C_ProcessArmor::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, K2Node_SwitchName_CmpSuccess) == 0x000124, "Member 'MainPlayer_C_ProcessArmor::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, Temp_name_Variable_2) == 0x000128, "Member 'MainPlayer_C_ProcessArmor::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_Array_Contains_ReturnValue) == 0x000130, "Member 'MainPlayer_C_ProcessArmor::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_FindClosestBone_K2_BoneLocation) == 0x000134, "Member 'MainPlayer_C_ProcessArmor::CallFunc_FindClosestBone_K2_BoneLocation' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_FindClosestBone_K2_ReturnValue) == 0x000140, "Member 'MainPlayer_C_ProcessArmor::CallFunc_FindClosestBone_K2_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_Array_Contains_ReturnValue_1) == 0x000148, "Member 'MainPlayer_C_ProcessArmor::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_Array_Contains_ReturnValue_2) == 0x000149, "Member 'MainPlayer_C_ProcessArmor::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.equipJetpack
// 0x0040 (0x0040 - 0x0000)
struct MainPlayer_C_EquipJetpack final
{
public:
	struct FTransform                             Temp_struct_Variable;                              // 0x0000(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UComp_jetpack_C*                        CallFunc_AddComponent_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_EquipJetpack) == 0x000010, "Wrong alignment on MainPlayer_C_EquipJetpack");
static_assert(sizeof(MainPlayer_C_EquipJetpack) == 0x000040, "Wrong size on MainPlayer_C_EquipJetpack");
static_assert(offsetof(MainPlayer_C_EquipJetpack, Temp_struct_Variable) == 0x000000, "Member 'MainPlayer_C_EquipJetpack::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_EquipJetpack, CallFunc_AddComponent_ReturnValue) == 0x000030, "Member 'MainPlayer_C_EquipJetpack::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_EquipJetpack, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'MainPlayer_C_EquipJetpack::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.windSounds
// 0x01E0 (0x01E0 - 0x0000)
struct MainPlayer_C_WindSounds final
{
public:
	struct FVector                                V;                                                 // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0040(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      CallFunc_obj_static_obj;                           // 0x0098(0x0010)(ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x00A8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_133[0x1];                                      // 0x0133(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_1;                  // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_WindSounds) == 0x000008, "Wrong alignment on MainPlayer_C_WindSounds");
static_assert(sizeof(MainPlayer_C_WindSounds) == 0x0001E0, "Wrong size on MainPlayer_C_WindSounds");
static_assert(offsetof(MainPlayer_C_WindSounds, V) == 0x000000, "Member 'MainPlayer_C_WindSounds::V' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'MainPlayer_C_WindSounds::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_GetPlayerPawn_ReturnValue) == 0x000010, "Member 'MainPlayer_C_WindSounds::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_GetVelocity_ReturnValue) == 0x000018, "Member 'MainPlayer_C_WindSounds::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'MainPlayer_C_WindSounds::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_GetComponentVelocity_ReturnValue) == 0x000028, "Member 'MainPlayer_C_WindSounds::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000034, "Member 'MainPlayer_C_WindSounds::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000038, "Member 'MainPlayer_C_WindSounds::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, Temp_object_Variable) == 0x000040, "Member 'MainPlayer_C_WindSounds::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'MainPlayer_C_WindSounds::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00005C, "Member 'MainPlayer_C_WindSounds::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_VSize_ReturnValue) == 0x000068, "Member 'MainPlayer_C_WindSounds::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00006C, "Member 'MainPlayer_C_WindSounds::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000070, "Member 'MainPlayer_C_WindSounds::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_FMax_ReturnValue) == 0x000074, "Member 'MainPlayer_C_WindSounds::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000078, "Member 'MainPlayer_C_WindSounds::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00007C, "Member 'MainPlayer_C_WindSounds::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000080, "Member 'MainPlayer_C_WindSounds::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_FClamp_ReturnValue) == 0x000084, "Member 'MainPlayer_C_WindSounds::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000088, "Member 'MainPlayer_C_WindSounds::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x00008C, "Member 'MainPlayer_C_WindSounds::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_FClamp_ReturnValue_1) == 0x000090, "Member 'MainPlayer_C_WindSounds::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_FInterpTo_ReturnValue) == 0x000094, "Member 'MainPlayer_C_WindSounds::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_obj_static_obj) == 0x000098, "Member 'MainPlayer_C_WindSounds::CallFunc_obj_static_obj' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0000A8, "Member 'MainPlayer_C_WindSounds::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000130, "Member 'MainPlayer_C_WindSounds::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_bBlockingHit) == 0x000131, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_bInitialOverlap) == 0x000132, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_Time) == 0x000134, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_Distance) == 0x000138, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_Location) == 0x00013C, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_ImpactPoint) == 0x000148, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_Normal) == 0x000154, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_ImpactNormal) == 0x000160, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_PhysMat) == 0x000170, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_HitActor) == 0x000178, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_HitComponent) == 0x000180, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_HitBoneName) == 0x000188, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_HitItem) == 0x000190, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_ElementIndex) == 0x000194, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_FaceIndex) == 0x000198, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_TraceStart) == 0x00019C, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_TraceEnd) == 0x0001A8, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_SelectVector_ReturnValue) == 0x0001B4, "Member 'MainPlayer_C_WindSounds::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_Vector_Distance_ReturnValue) == 0x0001C0, "Member 'MainPlayer_C_WindSounds::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0001C4, "Member 'MainPlayer_C_WindSounds::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_FMax_ReturnValue_1) == 0x0001C8, "Member 'MainPlayer_C_WindSounds::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x0001CC, "Member 'MainPlayer_C_WindSounds::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x0001D0, "Member 'MainPlayer_C_WindSounds::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x0001D4, "Member 'MainPlayer_C_WindSounds::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_FInterpTo_ReturnValue_1) == 0x0001D8, "Member 'MainPlayer_C_WindSounds::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.processClimb
// 0x05E0 (0x05E0 - 0x0000)
struct MainPlayer_C_ProcessClimb final
{
public:
	bool                                          SetClimb;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                OutputPin;                                         // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_obj_statDyn_obj;                          // 0x0020(0x0010)(ReferenceParm)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0050(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_obj_statDyn_obj_1;                        // 0x0070(0x0010)(ReferenceParm)
	TArray<EObjectTypeQuery>                      CallFunc_obj_statDyn_obj_2;                        // 0x0080(0x0010)(ReferenceParm)
	TArray<EObjectTypeQuery>                      CallFunc_obj_statDyn_obj_3;                        // 0x0090(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x00B0(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable_2;                            // 0x00C0(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable_3;                            // 0x00D0(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_obj_statDyn_obj_4;                        // 0x0108(0x0010)(ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable_4;                            // 0x0118(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x0128(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B3[0x1];                                      // 0x01B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_1;               // 0x0250(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25D[0x3];                                      // 0x025D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0260(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit_1;     // 0x026C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue_1; // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x02F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x02F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F7[0x1];                                      // 0x02F7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x030C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0318(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0324(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0340(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x035C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0368(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0374(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0380(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit_2;     // 0x038C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue_2; // 0x0414(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x0415(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x0416(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_417[0x1];                                      // 0x0417(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x0420(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x042C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x0438(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x0444(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x0460(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x047C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x0488(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0494(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_2;               // 0x04A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x04AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_CapsuleTraceSingleForObjects_OutHit;      // 0x04B8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingleForObjects_ReturnValue; // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_541[0x3];                                      // 0x0541(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0544(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit_3;     // 0x0550(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue_3; // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_ProcessClimb) == 0x000008, "Wrong alignment on MainPlayer_C_ProcessClimb");
static_assert(sizeof(MainPlayer_C_ProcessClimb) == 0x0005E0, "Wrong size on MainPlayer_C_ProcessClimb");
static_assert(offsetof(MainPlayer_C_ProcessClimb, SetClimb) == 0x000000, "Member 'MainPlayer_C_ProcessClimb::SetClimb' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, OutputPin) == 0x000004, "Member 'MainPlayer_C_ProcessClimb::OutputPin' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'MainPlayer_C_ProcessClimb::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_obj_statDyn_obj) == 0x000020, "Member 'MainPlayer_C_ProcessClimb::CallFunc_obj_statDyn_obj' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_Add_FloatFloat_ReturnValue) == 0x000030, "Member 'MainPlayer_C_ProcessClimb::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_MakeVector_ReturnValue) == 0x000034, "Member 'MainPlayer_C_ProcessClimb::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_MakeVector_ReturnValue_1) == 0x000040, "Member 'MainPlayer_C_ProcessClimb::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, Temp_object_Variable) == 0x000050, "Member 'MainPlayer_C_ProcessClimb::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000060, "Member 'MainPlayer_C_ProcessClimb::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_obj_statDyn_obj_1) == 0x000070, "Member 'MainPlayer_C_ProcessClimb::CallFunc_obj_statDyn_obj_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_obj_statDyn_obj_2) == 0x000080, "Member 'MainPlayer_C_ProcessClimb::CallFunc_obj_statDyn_obj_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_obj_statDyn_obj_3) == 0x000090, "Member 'MainPlayer_C_ProcessClimb::CallFunc_obj_statDyn_obj_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_SelectVector_ReturnValue) == 0x0000A0, "Member 'MainPlayer_C_ProcessClimb::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, Temp_object_Variable_1) == 0x0000B0, "Member 'MainPlayer_C_ProcessClimb::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, Temp_object_Variable_2) == 0x0000C0, "Member 'MainPlayer_C_ProcessClimb::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, Temp_object_Variable_3) == 0x0000D0, "Member 'MainPlayer_C_ProcessClimb::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_GetActorForwardVector_ReturnValue) == 0x0000E0, "Member 'MainPlayer_C_ProcessClimb::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_MakeVector_ReturnValue_2) == 0x0000EC, "Member 'MainPlayer_C_ProcessClimb::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000F8, "Member 'MainPlayer_C_ProcessClimb::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_obj_statDyn_obj_4) == 0x000108, "Member 'MainPlayer_C_ProcessClimb::CallFunc_obj_statDyn_obj_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, Temp_object_Variable_4) == 0x000118, "Member 'MainPlayer_C_ProcessClimb::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x000128, "Member 'MainPlayer_C_ProcessClimb::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x0001B0, "Member 'MainPlayer_C_ProcessClimb::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_bBlockingHit) == 0x0001B1, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001B2, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_Time) == 0x0001B4, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_Distance) == 0x0001B8, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_Location) == 0x0001BC, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_ImpactPoint) == 0x0001C8, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_Normal) == 0x0001D4, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_ImpactNormal) == 0x0001E0, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_PhysMat) == 0x0001F0, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_HitActor) == 0x0001F8, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_HitComponent) == 0x000200, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_HitBoneName) == 0x000208, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_HitItem) == 0x000210, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_ElementIndex) == 0x000214, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_FaceIndex) == 0x000218, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_TraceStart) == 0x00021C, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_TraceEnd) == 0x000228, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakVector_X) == 0x000234, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakVector_Y) == 0x000238, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakVector_Z) == 0x00023C, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_Add_VectorVector_ReturnValue) == 0x000240, "Member 'MainPlayer_C_ProcessClimb::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_Abs_ReturnValue) == 0x00024C, "Member 'MainPlayer_C_ProcessClimb::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_SelectVector_ReturnValue_1) == 0x000250, "Member 'MainPlayer_C_ProcessClimb::CallFunc_SelectVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00025C, "Member 'MainPlayer_C_ProcessClimb::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000260, "Member 'MainPlayer_C_ProcessClimb::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_SphereTraceSingleForObjects_OutHit_1) == 0x00026C, "Member 'MainPlayer_C_ProcessClimb::CallFunc_SphereTraceSingleForObjects_OutHit_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_SphereTraceSingleForObjects_ReturnValue_1) == 0x0002F4, "Member 'MainPlayer_C_ProcessClimb::CallFunc_SphereTraceSingleForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0002F5, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0002F6, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_Time_1) == 0x0002F8, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_Distance_1) == 0x0002FC, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_Location_1) == 0x000300, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_ImpactPoint_1) == 0x00030C, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_Normal_1) == 0x000318, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000324, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_PhysMat_1) == 0x000330, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_HitActor_1) == 0x000338, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_HitComponent_1) == 0x000340, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_HitBoneName_1) == 0x000348, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_HitItem_1) == 0x000350, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_ElementIndex_1) == 0x000354, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_FaceIndex_1) == 0x000358, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_TraceStart_1) == 0x00035C, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_TraceEnd_1) == 0x000368, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000374, "Member 'MainPlayer_C_ProcessClimb::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000380, "Member 'MainPlayer_C_ProcessClimb::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_SphereTraceSingleForObjects_OutHit_2) == 0x00038C, "Member 'MainPlayer_C_ProcessClimb::CallFunc_SphereTraceSingleForObjects_OutHit_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_SphereTraceSingleForObjects_ReturnValue_2) == 0x000414, "Member 'MainPlayer_C_ProcessClimb::CallFunc_SphereTraceSingleForObjects_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_bBlockingHit_2) == 0x000415, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x000416, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_Time_2) == 0x000418, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_Distance_2) == 0x00041C, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_Location_2) == 0x000420, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_ImpactPoint_2) == 0x00042C, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_Normal_2) == 0x000438, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_ImpactNormal_2) == 0x000444, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_PhysMat_2) == 0x000450, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_HitActor_2) == 0x000458, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_HitComponent_2) == 0x000460, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_HitBoneName_2) == 0x000468, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_HitItem_2) == 0x000470, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_ElementIndex_2) == 0x000474, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_FaceIndex_2) == 0x000478, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_TraceStart_2) == 0x00047C, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_BreakHitResult_TraceEnd_2) == 0x000488, "Member 'MainPlayer_C_ProcessClimb::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000494, "Member 'MainPlayer_C_ProcessClimb::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_SelectVector_ReturnValue_2) == 0x0004A0, "Member 'MainPlayer_C_ProcessClimb::CallFunc_SelectVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0004AC, "Member 'MainPlayer_C_ProcessClimb::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_CapsuleTraceSingleForObjects_OutHit) == 0x0004B8, "Member 'MainPlayer_C_ProcessClimb::CallFunc_CapsuleTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_CapsuleTraceSingleForObjects_ReturnValue) == 0x000540, "Member 'MainPlayer_C_ProcessClimb::CallFunc_CapsuleTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000544, "Member 'MainPlayer_C_ProcessClimb::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_SphereTraceSingleForObjects_OutHit_3) == 0x000550, "Member 'MainPlayer_C_ProcessClimb::CallFunc_SphereTraceSingleForObjects_OutHit_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessClimb, CallFunc_SphereTraceSingleForObjects_ReturnValue_3) == 0x0005D8, "Member 'MainPlayer_C_ProcessClimb::CallFunc_SphereTraceSingleForObjects_ReturnValue_3' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.fixCrouch
// 0x01B0 (0x01B0 - 0x0000)
struct MainPlayer_C_FixCrouch final
{
public:
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_obj_statDyn_obj;                          // 0x0008(0x0010)(ReferenceParm)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0050(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x006C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0114(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_FixCrouch) == 0x000008, "Wrong alignment on MainPlayer_C_FixCrouch");
static_assert(sizeof(MainPlayer_C_FixCrouch) == 0x0001B0, "Wrong size on MainPlayer_C_FixCrouch");
static_assert(offsetof(MainPlayer_C_FixCrouch, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000000, "Member 'MainPlayer_C_FixCrouch::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FixCrouch, CallFunc_obj_statDyn_obj) == 0x000008, "Member 'MainPlayer_C_FixCrouch::CallFunc_obj_statDyn_obj' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FixCrouch, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'MainPlayer_C_FixCrouch::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FixCrouch, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'MainPlayer_C_FixCrouch::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FixCrouch, CallFunc_Conv_FloatToString_ReturnValue) == 0x000028, "Member 'MainPlayer_C_FixCrouch::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FixCrouch, CallFunc_MakeVector_ReturnValue) == 0x000038, "Member 'MainPlayer_C_FixCrouch::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FixCrouch, CallFunc_MakeVector_ReturnValue_1) == 0x000044, "Member 'MainPlayer_C_FixCrouch::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FixCrouch, Temp_object_Variable) == 0x000050, "Member 'MainPlayer_C_FixCrouch::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FixCrouch, CallFunc_Add_VectorVector_ReturnValue) == 0x000060, "Member 'MainPlayer_C_FixCrouch::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FixCrouch, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x00006C, "Member 'MainPlayer_C_FixCrouch::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FixCrouch, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x0000F4, "Member 'MainPlayer_C_FixCrouch::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FixCrouch, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000F8, "Member 'MainPlayer_C_FixCrouch::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FixCrouch, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000104, "Member 'MainPlayer_C_FixCrouch::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FixCrouch, CallFunc_IsMovingOnGround_ReturnValue) == 0x000110, "Member 'MainPlayer_C_FixCrouch::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FixCrouch, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000114, "Member 'MainPlayer_C_FixCrouch::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FixCrouch, CallFunc_K2_SetActorLocation_ReturnValue) == 0x00019C, "Member 'MainPlayer_C_FixCrouch::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FixCrouch, CallFunc_Conv_BoolToString_ReturnValue) == 0x0001A0, "Member 'MainPlayer_C_FixCrouch::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.isStrong
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_IsStrong final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_IsStrong) == 0x000004, "Wrong alignment on MainPlayer_C_IsStrong");
static_assert(sizeof(MainPlayer_C_IsStrong) == 0x000010, "Wrong size on MainPlayer_C_IsStrong");
static_assert(offsetof(MainPlayer_C_IsStrong, Return) == 0x000000, "Member 'MainPlayer_C_IsStrong::Return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsStrong, Temp_name_Variable) == 0x000004, "Member 'MainPlayer_C_IsStrong::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsStrong, CallFunc_Array_Contains_ReturnValue) == 0x00000C, "Member 'MainPlayer_C_IsStrong::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.dreamInv
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_DreamInv final
{
public:
	TArray<struct FStruct_save>                   Invv;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class ADreamBase_C*                           Base;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_DreamInv) == 0x000008, "Wrong alignment on MainPlayer_C_DreamInv");
static_assert(sizeof(MainPlayer_C_DreamInv) == 0x000018, "Wrong size on MainPlayer_C_DreamInv");
static_assert(offsetof(MainPlayer_C_DreamInv, Invv) == 0x000000, "Member 'MainPlayer_C_DreamInv::Invv' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_DreamInv, Base) == 0x000010, "Member 'MainPlayer_C_DreamInv::Base' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.GetKey
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_GetKey final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_GetKey) == 0x000008, "Wrong alignment on MainPlayer_C_GetKey");
static_assert(sizeof(MainPlayer_C_GetKey) == 0x000010, "Wrong size on MainPlayer_C_GetKey");
static_assert(offsetof(MainPlayer_C_GetKey, Key) == 0x000000, "Member 'MainPlayer_C_GetKey::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.toolboxFix
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_ToolboxFix final
{
public:
	class AProp_toolbox_C*                        Toolbox;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_ToolboxFix) == 0x000008, "Wrong alignment on MainPlayer_C_ToolboxFix");
static_assert(sizeof(MainPlayer_C_ToolboxFix) == 0x000010, "Wrong size on MainPlayer_C_ToolboxFix");
static_assert(offsetof(MainPlayer_C_ToolboxFix, Toolbox) == 0x000000, "Member 'MainPlayer_C_ToolboxFix::Toolbox' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ToolboxFix, Return) == 0x000008, "Member 'MainPlayer_C_ToolboxFix::Return' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.canBeUsedHold
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_CanBeUsedHold final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_CanBeUsedHold) == 0x000001, "Wrong alignment on MainPlayer_C_CanBeUsedHold");
static_assert(sizeof(MainPlayer_C_CanBeUsedHold) == 0x000001, "Wrong size on MainPlayer_C_CanBeUsedHold");
static_assert(offsetof(MainPlayer_C_CanBeUsedHold, Return) == 0x000000, "Member 'MainPlayer_C_CanBeUsedHold::Return' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.processKeys
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_ProcessKeys final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_ProcessKeys) == 0x000001, "Wrong alignment on MainPlayer_C_ProcessKeys");
static_assert(sizeof(MainPlayer_C_ProcessKeys) == 0x000001, "Wrong size on MainPlayer_C_ProcessKeys");
static_assert(offsetof(MainPlayer_C_ProcessKeys, Return) == 0x000000, "Member 'MainPlayer_C_ProcessKeys::Return' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.getOnlyKey
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_GetOnlyKey final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_GetOnlyKey) == 0x000008, "Wrong alignment on MainPlayer_C_GetOnlyKey");
static_assert(sizeof(MainPlayer_C_GetOnlyKey) == 0x000010, "Wrong size on MainPlayer_C_GetOnlyKey");
static_assert(offsetof(MainPlayer_C_GetOnlyKey, Key) == 0x000000, "Member 'MainPlayer_C_GetOnlyKey::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.setPath
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_SetPath final
{
public:
	TArray<struct FVector>                        Path;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Return;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_SetPath) == 0x000008, "Wrong alignment on MainPlayer_C_SetPath");
static_assert(sizeof(MainPlayer_C_SetPath) == 0x000018, "Wrong size on MainPlayer_C_SetPath");
static_assert(offsetof(MainPlayer_C_SetPath, Path) == 0x000000, "Member 'MainPlayer_C_SetPath::Path' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetPath, Return) == 0x000010, "Member 'MainPlayer_C_SetPath::Return' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.getActionOptions
// 0x0050 (0x0050 - 0x0000)
struct MainPlayer_C_GetActionOptions final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Options;                                           // 0x0018(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               Options_enum;                                      // 0x0028(0x0010)(Parm, OutParm)
	TArray<class FText>                           OptionsNamesOverlay;                               // 0x0038(0x0010)(Parm, OutParm)
	uint8                                         Number;                                            // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_GetActionOptions) == 0x000008, "Wrong alignment on MainPlayer_C_GetActionOptions");
static_assert(sizeof(MainPlayer_C_GetActionOptions) == 0x000050, "Wrong size on MainPlayer_C_GetActionOptions");
static_assert(offsetof(MainPlayer_C_GetActionOptions, Player) == 0x000000, "Member 'MainPlayer_C_GetActionOptions::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_GetActionOptions, Component) == 0x000008, "Member 'MainPlayer_C_GetActionOptions::Component' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_GetActionOptions, Actor) == 0x000010, "Member 'MainPlayer_C_GetActionOptions::Actor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_GetActionOptions, Options) == 0x000018, "Member 'MainPlayer_C_GetActionOptions::Options' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_GetActionOptions, Options_enum) == 0x000028, "Member 'MainPlayer_C_GetActionOptions::Options_enum' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_GetActionOptions, OptionsNamesOverlay) == 0x000038, "Member 'MainPlayer_C_GetActionOptions::OptionsNamesOverlay' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_GetActionOptions, Number) == 0x000048, "Member 'MainPlayer_C_GetActionOptions::Number' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.gascanFuel
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_GascanFuel final
{
public:
	class AProp_gascan_C*                         Gascan;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Fueled;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_GascanFuel) == 0x000008, "Wrong alignment on MainPlayer_C_GascanFuel");
static_assert(sizeof(MainPlayer_C_GascanFuel) == 0x000010, "Wrong size on MainPlayer_C_GascanFuel");
static_assert(offsetof(MainPlayer_C_GascanFuel, Gascan) == 0x000000, "Member 'MainPlayer_C_GascanFuel::Gascan' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_GascanFuel, Fueled) == 0x000008, "Member 'MainPlayer_C_GascanFuel::Fueled' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.skipRadial
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_SkipRadial final
{
public:
	bool                                          Skip;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_SkipRadial) == 0x000001, "Wrong alignment on MainPlayer_C_SkipRadial");
static_assert(sizeof(MainPlayer_C_SkipRadial) == 0x000001, "Wrong size on MainPlayer_C_SkipRadial");
static_assert(offsetof(MainPlayer_C_SkipRadial, Skip) == 0x000000, "Member 'MainPlayer_C_SkipRadial::Skip' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.getPriceMultiplier
// 0x0004 (0x0004 - 0x0000)
struct MainPlayer_C_GetPriceMultiplier final
{
public:
	float                                         PriceMult;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_GetPriceMultiplier) == 0x000004, "Wrong alignment on MainPlayer_C_GetPriceMultiplier");
static_assert(sizeof(MainPlayer_C_GetPriceMultiplier) == 0x000004, "Wrong size on MainPlayer_C_GetPriceMultiplier");
static_assert(offsetof(MainPlayer_C_GetPriceMultiplier, PriceMult) == 0x000000, "Member 'MainPlayer_C_GetPriceMultiplier::PriceMult' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.canBePutInContainer
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_CanBePutInContainer final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_CanBePutInContainer) == 0x000001, "Wrong alignment on MainPlayer_C_CanBePutInContainer");
static_assert(sizeof(MainPlayer_C_CanBePutInContainer) == 0x000001, "Wrong size on MainPlayer_C_CanBePutInContainer");
static_assert(offsetof(MainPlayer_C_CanBePutInContainer, Return) == 0x000000, "Member 'MainPlayer_C_CanBePutInContainer::Return' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.asProp
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_AsProp final
{
public:
	class AProp_C*                                Return;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_AsProp) == 0x000008, "Wrong alignment on MainPlayer_C_AsProp");
static_assert(sizeof(MainPlayer_C_AsProp) == 0x000008, "Wrong size on MainPlayer_C_AsProp");
static_assert(offsetof(MainPlayer_C_AsProp, Return) == 0x000000, "Member 'MainPlayer_C_AsProp::Return' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.canPickup
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_CanPickup final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_CanPickup) == 0x000001, "Wrong alignment on MainPlayer_C_CanPickup");
static_assert(sizeof(MainPlayer_C_CanPickup) == 0x000001, "Wrong size on MainPlayer_C_CanPickup");
static_assert(offsetof(MainPlayer_C_CanPickup, Return) == 0x000000, "Member 'MainPlayer_C_CanPickup::Return' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.noRespawn
// 0x0002 (0x0002 - 0x0000)
struct MainPlayer_C_NoRespawn final
{
public:
	bool                                          NoRespawn_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Return;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_NoRespawn) == 0x000001, "Wrong alignment on MainPlayer_C_NoRespawn");
static_assert(sizeof(MainPlayer_C_NoRespawn) == 0x000002, "Wrong size on MainPlayer_C_NoRespawn");
static_assert(offsetof(MainPlayer_C_NoRespawn, NoRespawn_0) == 0x000000, "Member 'MainPlayer_C_NoRespawn::NoRespawn_0' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_NoRespawn, Return) == 0x000001, "Member 'MainPlayer_C_NoRespawn::Return' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.lookAt
// 0x00B8 (0x00B8 - 0x0000)
struct MainPlayer_C_LookAt final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Return;                                            // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Text;                                              // 0x0098(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    boundObjectReplace;                                // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Number;                                            // 0x00B0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_LookAt) == 0x000008, "Wrong alignment on MainPlayer_C_LookAt");
static_assert(sizeof(MainPlayer_C_LookAt) == 0x0000B8, "Wrong size on MainPlayer_C_LookAt");
static_assert(offsetof(MainPlayer_C_LookAt, Player) == 0x000000, "Member 'MainPlayer_C_LookAt::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_LookAt, Hit) == 0x000008, "Member 'MainPlayer_C_LookAt::Hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_LookAt, Return) == 0x000090, "Member 'MainPlayer_C_LookAt::Return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_LookAt, Text) == 0x000098, "Member 'MainPlayer_C_LookAt::Text' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_LookAt, boundObjectReplace) == 0x0000A8, "Member 'MainPlayer_C_LookAt::boundObjectReplace' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_LookAt, Number) == 0x0000B0, "Member 'MainPlayer_C_LookAt::Number' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.isButtonUsed
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_IsButtonUsed final
{
public:
	bool                                          Failed;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_IsButtonUsed) == 0x000001, "Wrong alignment on MainPlayer_C_IsButtonUsed");
static_assert(sizeof(MainPlayer_C_IsButtonUsed) == 0x000001, "Wrong size on MainPlayer_C_IsButtonUsed");
static_assert(offsetof(MainPlayer_C_IsButtonUsed, Failed) == 0x000000, "Member 'MainPlayer_C_IsButtonUsed::Failed' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.landedOn
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_LandedOn final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreFallDamage;                                  // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_LandedOn) == 0x000008, "Wrong alignment on MainPlayer_C_LandedOn");
static_assert(sizeof(MainPlayer_C_LandedOn) == 0x000010, "Wrong size on MainPlayer_C_LandedOn");
static_assert(offsetof(MainPlayer_C_LandedOn, Player) == 0x000000, "Member 'MainPlayer_C_LandedOn::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_LandedOn, IgnoreFallDamage) == 0x000008, "Member 'MainPlayer_C_LandedOn::IgnoreFallDamage' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.CanJumpInternal
// 0x0002 (0x0002 - 0x0000)
struct MainPlayer_C_CanJumpInternal final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_CanJumpInternal) == 0x000001, "Wrong alignment on MainPlayer_C_CanJumpInternal");
static_assert(sizeof(MainPlayer_C_CanJumpInternal) == 0x000002, "Wrong size on MainPlayer_C_CanJumpInternal");
static_assert(offsetof(MainPlayer_C_CanJumpInternal, ReturnValue) == 0x000000, "Member 'MainPlayer_C_CanJumpInternal::ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CanJumpInternal, CallFunc_IsMovingOnGround_ReturnValue) == 0x000001, "Member 'MainPlayer_C_CanJumpInternal::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");

}

