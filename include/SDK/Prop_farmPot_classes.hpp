#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_farmPot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Prop_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass prop_farmPot.prop_farmPot_C
// 0x0020 (0x0378 - 0x0358)
class AProp_farmPot_C final : public AProp_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Prop_farmPot_C;                     // 0x0358(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBillboardComponent*                    Root;                                              // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Obj;                                               // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGrowingPlant_C*                        Plant;                                             // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_prop_farmPot(int32 EntryPoint);
	void PlayerUsedOn(class AMainPlayer_C* Player, const struct FHitResult& Hit_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"prop_farmPot_C">();
	}
	static class AProp_farmPot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProp_farmPot_C>();
	}
};
static_assert(alignof(AProp_farmPot_C) == 0x000008, "Wrong alignment on AProp_farmPot_C");
static_assert(sizeof(AProp_farmPot_C) == 0x000378, "Wrong size on AProp_farmPot_C");
static_assert(offsetof(AProp_farmPot_C, UberGraphFrame_Prop_farmPot_C) == 0x000358, "Member 'AProp_farmPot_C::UberGraphFrame_Prop_farmPot_C' has a wrong offset!");
static_assert(offsetof(AProp_farmPot_C, Root) == 0x000360, "Member 'AProp_farmPot_C::Root' has a wrong offset!");
static_assert(offsetof(AProp_farmPot_C, Obj) == 0x000368, "Member 'AProp_farmPot_C::Obj' has a wrong offset!");
static_assert(offsetof(AProp_farmPot_C, Plant) == 0x000370, "Member 'AProp_farmPot_C::Plant' has a wrong offset!");

}

