#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Cremator

#include "Basic.hpp"

#include "Struct_mFloat_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Struct_save_structs.hpp"
#include "Enum_interactionActions_structs.hpp"


namespace SDK::Params
{

// Function cremator.cremator_C.landedOn
// 0x0010 (0x0010 - 0x0000)
struct Cremator_C_LandedOn final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreFallDamage;                                  // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Cremator_C_LandedOn) == 0x000008, "Wrong alignment on Cremator_C_LandedOn");
static_assert(sizeof(Cremator_C_LandedOn) == 0x000010, "Wrong size on Cremator_C_LandedOn");
static_assert(offsetof(Cremator_C_LandedOn, Player) == 0x000000, "Member 'Cremator_C_LandedOn::Player' has a wrong offset!");
static_assert(offsetof(Cremator_C_LandedOn, IgnoreFallDamage) == 0x000008, "Member 'Cremator_C_LandedOn::IgnoreFallDamage' has a wrong offset!");

// Function cremator.cremator_C.isButtonUsed
// 0x0001 (0x0001 - 0x0000)
struct Cremator_C_IsButtonUsed final
{
public:
	bool                                          Failed;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Cremator_C_IsButtonUsed) == 0x000001, "Wrong alignment on Cremator_C_IsButtonUsed");
static_assert(sizeof(Cremator_C_IsButtonUsed) == 0x000001, "Wrong size on Cremator_C_IsButtonUsed");
static_assert(offsetof(Cremator_C_IsButtonUsed, Failed) == 0x000000, "Member 'Cremator_C_IsButtonUsed::Failed' has a wrong offset!");

// Function cremator.cremator_C.lookAt
// 0x03B0 (0x03B0 - 0x0000)
struct Cremator_C_LookAt final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Return;                                            // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Text;                                              // 0x0098(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    boundObjectReplace;                                // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Number;                                            // 0x00B0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B3[0x1];                                       // 0x00B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0138(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0150(0x0018)()
	class FString                                 CallFunc_getGasCanFuel_ReturnValue;                // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x0180(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AA[0x6];                                      // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x01B0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x01C8(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0238(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0250(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0290(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x02A8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x02C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D2[0x6];                                      // 0x02D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x02D8(0x0018)(ConstParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x02F0(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0338(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0348(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x0360(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x0370(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_2;               // 0x0380(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_3;               // 0x0390(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_4;               // 0x03A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Cremator_C_LookAt) == 0x000008, "Wrong alignment on Cremator_C_LookAt");
static_assert(sizeof(Cremator_C_LookAt) == 0x0003B0, "Wrong size on Cremator_C_LookAt");
static_assert(offsetof(Cremator_C_LookAt, Player) == 0x000000, "Member 'Cremator_C_LookAt::Player' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, Hit) == 0x000008, "Member 'Cremator_C_LookAt::Hit' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, Return) == 0x000090, "Member 'Cremator_C_LookAt::Return' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, Text) == 0x000098, "Member 'Cremator_C_LookAt::Text' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, boundObjectReplace) == 0x0000A8, "Member 'Cremator_C_LookAt::boundObjectReplace' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, Number) == 0x0000B0, "Member 'Cremator_C_LookAt::Number' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_BreakHitResult_bBlockingHit) == 0x0000B1, "Member 'Cremator_C_LookAt::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000B2, "Member 'Cremator_C_LookAt::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_BreakHitResult_Time) == 0x0000B4, "Member 'Cremator_C_LookAt::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_BreakHitResult_Distance) == 0x0000B8, "Member 'Cremator_C_LookAt::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_BreakHitResult_Location) == 0x0000BC, "Member 'Cremator_C_LookAt::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_BreakHitResult_ImpactPoint) == 0x0000C8, "Member 'Cremator_C_LookAt::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_BreakHitResult_Normal) == 0x0000D4, "Member 'Cremator_C_LookAt::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_BreakHitResult_ImpactNormal) == 0x0000E0, "Member 'Cremator_C_LookAt::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_BreakHitResult_PhysMat) == 0x0000F0, "Member 'Cremator_C_LookAt::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_BreakHitResult_HitActor) == 0x0000F8, "Member 'Cremator_C_LookAt::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_BreakHitResult_HitComponent) == 0x000100, "Member 'Cremator_C_LookAt::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_BreakHitResult_HitBoneName) == 0x000108, "Member 'Cremator_C_LookAt::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_BreakHitResult_HitItem) == 0x000110, "Member 'Cremator_C_LookAt::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_BreakHitResult_ElementIndex) == 0x000114, "Member 'Cremator_C_LookAt::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_BreakHitResult_FaceIndex) == 0x000118, "Member 'Cremator_C_LookAt::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_BreakHitResult_TraceStart) == 0x00011C, "Member 'Cremator_C_LookAt::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_BreakHitResult_TraceEnd) == 0x000128, "Member 'Cremator_C_LookAt::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_MakeLiteralText_ReturnValue) == 0x000138, "Member 'Cremator_C_LookAt::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000150, "Member 'Cremator_C_LookAt::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_getGasCanFuel_ReturnValue) == 0x000168, "Member 'Cremator_C_LookAt::CallFunc_getGasCanFuel_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_BooleanOR_ReturnValue) == 0x000178, "Member 'Cremator_C_LookAt::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_MakeLiteralText_ReturnValue_2) == 0x000180, "Member 'Cremator_C_LookAt::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_Conv_TextToString_ReturnValue) == 0x000198, "Member 'Cremator_C_LookAt::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_BooleanOR_ReturnValue_1) == 0x0001A8, "Member 'Cremator_C_LookAt::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_BooleanOR_ReturnValue_2) == 0x0001A9, "Member 'Cremator_C_LookAt::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_Conv_FloatToText_ReturnValue) == 0x0001B0, "Member 'Cremator_C_LookAt::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, K2Node_MakeStruct_FormatArgumentData) == 0x0001C8, "Member 'Cremator_C_LookAt::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000208, "Member 'Cremator_C_LookAt::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_Conv_BoolToString_ReturnValue) == 0x000210, "Member 'Cremator_C_LookAt::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_SelectString_ReturnValue) == 0x000220, "Member 'Cremator_C_LookAt::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000230, "Member 'Cremator_C_LookAt::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_Conv_StringToText_ReturnValue) == 0x000238, "Member 'Cremator_C_LookAt::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, K2Node_MakeStruct_FormatArgumentData_1) == 0x000250, "Member 'Cremator_C_LookAt::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, K2Node_MakeArray_Array) == 0x000290, "Member 'Cremator_C_LookAt::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0002A0, "Member 'Cremator_C_LookAt::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_Format_ReturnValue) == 0x0002A8, "Member 'Cremator_C_LookAt::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0002C0, "Member 'Cremator_C_LookAt::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, Temp_bool_Variable) == 0x0002D0, "Member 'Cremator_C_LookAt::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x0002D1, "Member 'Cremator_C_LookAt::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, K2Node_Select_Default) == 0x0002D8, "Member 'Cremator_C_LookAt::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, K2Node_MakeStruct_FormatArgumentData_2) == 0x0002F0, "Member 'Cremator_C_LookAt::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x000330, "Member 'Cremator_C_LookAt::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, K2Node_MakeArray_Array_1) == 0x000338, "Member 'Cremator_C_LookAt::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_Format_ReturnValue_1) == 0x000348, "Member 'Cremator_C_LookAt::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_Conv_TextToString_ReturnValue_2) == 0x000360, "Member 'Cremator_C_LookAt::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_SelectString_ReturnValue_1) == 0x000370, "Member 'Cremator_C_LookAt::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_SelectString_ReturnValue_2) == 0x000380, "Member 'Cremator_C_LookAt::CallFunc_SelectString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_SelectString_ReturnValue_3) == 0x000390, "Member 'Cremator_C_LookAt::CallFunc_SelectString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Cremator_C_LookAt, CallFunc_SelectString_ReturnValue_4) == 0x0003A0, "Member 'Cremator_C_LookAt::CallFunc_SelectString_ReturnValue_4' has a wrong offset!");

// Function cremator.cremator_C.noRespawn
// 0x0002 (0x0002 - 0x0000)
struct Cremator_C_NoRespawn final
{
public:
	bool                                          NoRespawn_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Return;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Cremator_C_NoRespawn) == 0x000001, "Wrong alignment on Cremator_C_NoRespawn");
static_assert(sizeof(Cremator_C_NoRespawn) == 0x000002, "Wrong size on Cremator_C_NoRespawn");
static_assert(offsetof(Cremator_C_NoRespawn, NoRespawn_0) == 0x000000, "Member 'Cremator_C_NoRespawn::NoRespawn_0' has a wrong offset!");
static_assert(offsetof(Cremator_C_NoRespawn, Return) == 0x000001, "Member 'Cremator_C_NoRespawn::Return' has a wrong offset!");

// Function cremator.cremator_C.canPickup
// 0x0001 (0x0001 - 0x0000)
struct Cremator_C_CanPickup final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Cremator_C_CanPickup) == 0x000001, "Wrong alignment on Cremator_C_CanPickup");
static_assert(sizeof(Cremator_C_CanPickup) == 0x000001, "Wrong size on Cremator_C_CanPickup");
static_assert(offsetof(Cremator_C_CanPickup, Return) == 0x000000, "Member 'Cremator_C_CanPickup::Return' has a wrong offset!");

// Function cremator.cremator_C.asProp
// 0x0008 (0x0008 - 0x0000)
struct Cremator_C_AsProp final
{
public:
	class AProp_C*                                Return;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Cremator_C_AsProp) == 0x000008, "Wrong alignment on Cremator_C_AsProp");
static_assert(sizeof(Cremator_C_AsProp) == 0x000008, "Wrong size on Cremator_C_AsProp");
static_assert(offsetof(Cremator_C_AsProp, Return) == 0x000000, "Member 'Cremator_C_AsProp::Return' has a wrong offset!");

// Function cremator.cremator_C.canBePutInContainer
// 0x0001 (0x0001 - 0x0000)
struct Cremator_C_CanBePutInContainer final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Cremator_C_CanBePutInContainer) == 0x000001, "Wrong alignment on Cremator_C_CanBePutInContainer");
static_assert(sizeof(Cremator_C_CanBePutInContainer) == 0x000001, "Wrong size on Cremator_C_CanBePutInContainer");
static_assert(offsetof(Cremator_C_CanBePutInContainer, Return) == 0x000000, "Member 'Cremator_C_CanBePutInContainer::Return' has a wrong offset!");

// Function cremator.cremator_C.getData
// 0x0270 (0x0270 - 0x0000)
struct Cremator_C_GetData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(Parm, OutParm, HasGetValueTypeHash)
	struct FStruct_save                           CallFunc_getData_data;                             // 0x00C0(0x00C0)(HasGetValueTypeHash)
	TArray<float>                                 K2Node_MakeArray_Array;                            // 0x0180(0x0010)(ReferenceParm)
	struct FStruct_mFloat                         K2Node_MakeStruct_struct_mFloat;                   // 0x0190(0x0010)(HasGetValueTypeHash)
	TArray<struct FStruct_mFloat>                 K2Node_MakeArray_Array_1;                          // 0x01A0(0x0010)(ReferenceParm)
	struct FStruct_save                           K2Node_SetFieldsInStruct_StructOut;                // 0x01B0(0x00C0)(HasGetValueTypeHash)
};
static_assert(alignof(Cremator_C_GetData) == 0x000010, "Wrong alignment on Cremator_C_GetData");
static_assert(sizeof(Cremator_C_GetData) == 0x000270, "Wrong size on Cremator_C_GetData");
static_assert(offsetof(Cremator_C_GetData, Data) == 0x000000, "Member 'Cremator_C_GetData::Data' has a wrong offset!");
static_assert(offsetof(Cremator_C_GetData, CallFunc_getData_data) == 0x0000C0, "Member 'Cremator_C_GetData::CallFunc_getData_data' has a wrong offset!");
static_assert(offsetof(Cremator_C_GetData, K2Node_MakeArray_Array) == 0x000180, "Member 'Cremator_C_GetData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Cremator_C_GetData, K2Node_MakeStruct_struct_mFloat) == 0x000190, "Member 'Cremator_C_GetData::K2Node_MakeStruct_struct_mFloat' has a wrong offset!");
static_assert(offsetof(Cremator_C_GetData, K2Node_MakeArray_Array_1) == 0x0001A0, "Member 'Cremator_C_GetData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_GetData, K2Node_SetFieldsInStruct_StructOut) == 0x0001B0, "Member 'Cremator_C_GetData::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function cremator.cremator_C.loadData
// 0x00E0 (0x00E0 - 0x0000)
struct Cremator_C_LoadData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadData_return;                          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mFloat                         CallFunc_Array_Get_Item;                           // 0x00C8(0x0010)(HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Cremator_C_LoadData) == 0x000010, "Wrong alignment on Cremator_C_LoadData");
static_assert(sizeof(Cremator_C_LoadData) == 0x0000E0, "Wrong size on Cremator_C_LoadData");
static_assert(offsetof(Cremator_C_LoadData, Data) == 0x000000, "Member 'Cremator_C_LoadData::Data' has a wrong offset!");
static_assert(offsetof(Cremator_C_LoadData, Return) == 0x0000C0, "Member 'Cremator_C_LoadData::Return' has a wrong offset!");
static_assert(offsetof(Cremator_C_LoadData, CallFunc_loadData_return) == 0x0000C1, "Member 'Cremator_C_LoadData::CallFunc_loadData_return' has a wrong offset!");
static_assert(offsetof(Cremator_C_LoadData, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'Cremator_C_LoadData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Cremator_C_LoadData, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'Cremator_C_LoadData::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function cremator.cremator_C.playLoudAsFuck
// 0x0078 (0x0078 - 0x0000)
struct Cremator_C_PlayLoudAsFuck final
{
public:
	float                                         InputPin;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAudioComponent*>                K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Cremator_C_PlayLoudAsFuck) == 0x000008, "Wrong alignment on Cremator_C_PlayLoudAsFuck");
static_assert(sizeof(Cremator_C_PlayLoudAsFuck) == 0x000078, "Wrong size on Cremator_C_PlayLoudAsFuck");
static_assert(offsetof(Cremator_C_PlayLoudAsFuck, InputPin) == 0x000000, "Member 'Cremator_C_PlayLoudAsFuck::InputPin' has a wrong offset!");
static_assert(offsetof(Cremator_C_PlayLoudAsFuck, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000004, "Member 'Cremator_C_PlayLoudAsFuck::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_PlayLoudAsFuck, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'Cremator_C_PlayLoudAsFuck::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_PlayLoudAsFuck, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'Cremator_C_PlayLoudAsFuck::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_PlayLoudAsFuck, Temp_int_Array_Index_Variable) == 0x000010, "Member 'Cremator_C_PlayLoudAsFuck::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Cremator_C_PlayLoudAsFuck, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000014, "Member 'Cremator_C_PlayLoudAsFuck::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_PlayLoudAsFuck, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'Cremator_C_PlayLoudAsFuck::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_PlayLoudAsFuck, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'Cremator_C_PlayLoudAsFuck::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Cremator_C_PlayLoudAsFuck, CallFunc_GetForwardVector_ReturnValue) == 0x000020, "Member 'Cremator_C_PlayLoudAsFuck::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_PlayLoudAsFuck, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'Cremator_C_PlayLoudAsFuck::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_PlayLoudAsFuck, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000030, "Member 'Cremator_C_PlayLoudAsFuck::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_PlayLoudAsFuck, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00003C, "Member 'Cremator_C_PlayLoudAsFuck::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_PlayLoudAsFuck, CallFunc_getMainPlayer_AsMain_Player) == 0x000048, "Member 'Cremator_C_PlayLoudAsFuck::CallFunc_getMainPlayer_AsMain_Player' has a wrong offset!");
static_assert(offsetof(Cremator_C_PlayLoudAsFuck, K2Node_MakeArray_Array) == 0x000050, "Member 'Cremator_C_PlayLoudAsFuck::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Cremator_C_PlayLoudAsFuck, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'Cremator_C_PlayLoudAsFuck::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_PlayLoudAsFuck, CallFunc_Array_Get_Item) == 0x000068, "Member 'Cremator_C_PlayLoudAsFuck::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Cremator_C_PlayLoudAsFuck, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'Cremator_C_PlayLoudAsFuck::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function cremator.cremator_C.updPour
// 0x0002 (0x0002 - 0x0000)
struct Cremator_C_UpdPour final
{
public:
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Cremator_C_UpdPour) == 0x000001, "Wrong alignment on Cremator_C_UpdPour");
static_assert(sizeof(Cremator_C_UpdPour) == 0x000002, "Wrong size on Cremator_C_UpdPour");
static_assert(offsetof(Cremator_C_UpdPour, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000000, "Member 'Cremator_C_UpdPour::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_UpdPour, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'Cremator_C_UpdPour::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function cremator.cremator_C.calcFlamability
// 0x00C8 (0x00C8 - 0x0000)
struct Cremator_C_CalcFlamability final
{
public:
	class UPhysicalMaterial*                      Self2;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Flamability;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FuelMultiply;                                      // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UPhysicalMaterial*, struct FVector2D> Flam;                                              // 0x0010(0x0050)(Edit, BlueprintVisible)
	TMap<class UPhysicalMaterial*, struct FVector2D> K2Node_MakeVariable_MakeVariableOutput;            // 0x0060(0x0050)()
	struct FVector2D                              CallFunc_Map_Find_Value;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Cremator_C_CalcFlamability) == 0x000008, "Wrong alignment on Cremator_C_CalcFlamability");
static_assert(sizeof(Cremator_C_CalcFlamability) == 0x0000C8, "Wrong size on Cremator_C_CalcFlamability");
static_assert(offsetof(Cremator_C_CalcFlamability, Self2) == 0x000000, "Member 'Cremator_C_CalcFlamability::Self2' has a wrong offset!");
static_assert(offsetof(Cremator_C_CalcFlamability, Flamability) == 0x000008, "Member 'Cremator_C_CalcFlamability::Flamability' has a wrong offset!");
static_assert(offsetof(Cremator_C_CalcFlamability, FuelMultiply) == 0x00000C, "Member 'Cremator_C_CalcFlamability::FuelMultiply' has a wrong offset!");
static_assert(offsetof(Cremator_C_CalcFlamability, Flam) == 0x000010, "Member 'Cremator_C_CalcFlamability::Flam' has a wrong offset!");
static_assert(offsetof(Cremator_C_CalcFlamability, K2Node_MakeVariable_MakeVariableOutput) == 0x000060, "Member 'Cremator_C_CalcFlamability::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(Cremator_C_CalcFlamability, CallFunc_Map_Find_Value) == 0x0000B0, "Member 'Cremator_C_CalcFlamability::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Cremator_C_CalcFlamability, CallFunc_Map_Find_ReturnValue) == 0x0000B8, "Member 'Cremator_C_CalcFlamability::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_CalcFlamability, CallFunc_BreakVector2D_X) == 0x0000BC, "Member 'Cremator_C_CalcFlamability::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Cremator_C_CalcFlamability, CallFunc_BreakVector2D_Y) == 0x0000C0, "Member 'Cremator_C_CalcFlamability::CallFunc_BreakVector2D_Y' has a wrong offset!");

// Function cremator.cremator_C.setupBurning
// 0x0098 (0x0098 - 0x0000)
struct Cremator_C_SetupBurning final
{
public:
	TArray<class AActor*>                         Ac;                                                // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0018(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Get_Volume_volume;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_GetPhysicalMaterial_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_calcFlamability_flamability;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_calcFlamability_fuelMultiply;             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0080(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0088(0x0010)(ReferenceParm)
};
static_assert(alignof(Cremator_C_SetupBurning) == 0x000008, "Wrong alignment on Cremator_C_SetupBurning");
static_assert(sizeof(Cremator_C_SetupBurning) == 0x000098, "Wrong size on Cremator_C_SetupBurning");
static_assert(offsetof(Cremator_C_SetupBurning, Ac) == 0x000000, "Member 'Cremator_C_SetupBurning::Ac' has a wrong offset!");
static_assert(offsetof(Cremator_C_SetupBurning, Temp_int_Variable) == 0x000010, "Member 'Cremator_C_SetupBurning::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Cremator_C_SetupBurning, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'Cremator_C_SetupBurning::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_SetupBurning, Temp_float_Variable) == 0x000018, "Member 'Cremator_C_SetupBurning::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(Cremator_C_SetupBurning, CallFunc_Array_Get_Item) == 0x000020, "Member 'Cremator_C_SetupBurning::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Cremator_C_SetupBurning, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000028, "Member 'Cremator_C_SetupBurning::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_SetupBurning, CallFunc_Array_LastIndex_ReturnValue) == 0x000030, "Member 'Cremator_C_SetupBurning::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_SetupBurning, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000038, "Member 'Cremator_C_SetupBurning::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(Cremator_C_SetupBurning, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'Cremator_C_SetupBurning::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Cremator_C_SetupBurning, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000041, "Member 'Cremator_C_SetupBurning::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_SetupBurning, CallFunc_GetMaterial_ReturnValue) == 0x000048, "Member 'Cremator_C_SetupBurning::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_SetupBurning, CallFunc_Get_Volume_volume) == 0x000050, "Member 'Cremator_C_SetupBurning::CallFunc_Get_Volume_volume' has a wrong offset!");
static_assert(offsetof(Cremator_C_SetupBurning, CallFunc_GetPhysicalMaterial_ReturnValue) == 0x000058, "Member 'Cremator_C_SetupBurning::CallFunc_GetPhysicalMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_SetupBurning, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000060, "Member 'Cremator_C_SetupBurning::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_SetupBurning, CallFunc_calcFlamability_flamability) == 0x000064, "Member 'Cremator_C_SetupBurning::CallFunc_calcFlamability_flamability' has a wrong offset!");
static_assert(offsetof(Cremator_C_SetupBurning, CallFunc_calcFlamability_fuelMultiply) == 0x000068, "Member 'Cremator_C_SetupBurning::CallFunc_calcFlamability_fuelMultiply' has a wrong offset!");
static_assert(offsetof(Cremator_C_SetupBurning, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00006C, "Member 'Cremator_C_SetupBurning::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_SetupBurning, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000070, "Member 'Cremator_C_SetupBurning::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_SetupBurning, CallFunc_Add_FloatFloat_ReturnValue) == 0x000074, "Member 'Cremator_C_SetupBurning::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_SetupBurning, CallFunc_Array_RemoveItem_ReturnValue) == 0x000078, "Member 'Cremator_C_SetupBurning::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_SetupBurning, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00007C, "Member 'Cremator_C_SetupBurning::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_SetupBurning, Temp_float_Variable_1) == 0x000080, "Member 'Cremator_C_SetupBurning::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_SetupBurning, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000084, "Member 'Cremator_C_SetupBurning::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_SetupBurning, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000088, "Member 'Cremator_C_SetupBurning::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");

// Function cremator.cremator_C.upd
// 0x000C (0x000C - 0x0000)
struct Cremator_C_Upd final
{
public:
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Cremator_C_Upd) == 0x000004, "Wrong alignment on Cremator_C_Upd");
static_assert(sizeof(Cremator_C_Upd) == 0x00000C, "Wrong size on Cremator_C_Upd");
static_assert(offsetof(Cremator_C_Upd, CallFunc_IsVisible_ReturnValue) == 0x000000, "Member 'Cremator_C_Upd::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_Upd, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000001, "Member 'Cremator_C_Upd::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_Upd, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'Cremator_C_Upd::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_Upd, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000004, "Member 'Cremator_C_Upd::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_Upd, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'Cremator_C_Upd::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function cremator.cremator_C.setClosed
// 0x0070 (0x0070 - 0x0000)
struct Cremator_C_SetClosed final
{
public:
	bool                                          Close;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0xF];                                        // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(Cremator_C_SetClosed) == 0x000010, "Wrong alignment on Cremator_C_SetClosed");
static_assert(sizeof(Cremator_C_SetClosed) == 0x000070, "Wrong size on Cremator_C_SetClosed");
static_assert(offsetof(Cremator_C_SetClosed, Close) == 0x000000, "Member 'Cremator_C_SetClosed::Close' has a wrong offset!");
static_assert(offsetof(Cremator_C_SetClosed, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'Cremator_C_SetClosed::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_SetClosed, CallFunc_MakeTransform_ReturnValue_1) == 0x000040, "Member 'Cremator_C_SetClosed::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");

// Function cremator.cremator_C.getActionOptions
// 0x0060 (0x0060 - 0x0000)
struct Cremator_C_GetActionOptions final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Options;                                           // 0x0018(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               Options_enum;                                      // 0x0028(0x0010)(Parm, OutParm)
	TArray<class FText>                           OptionsNamesOverlay;                               // 0x0038(0x0010)(Parm, OutParm)
	uint8                                         Number;                                            // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<Enum_interactionActions>               K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
};
static_assert(alignof(Cremator_C_GetActionOptions) == 0x000008, "Wrong alignment on Cremator_C_GetActionOptions");
static_assert(sizeof(Cremator_C_GetActionOptions) == 0x000060, "Wrong size on Cremator_C_GetActionOptions");
static_assert(offsetof(Cremator_C_GetActionOptions, Player) == 0x000000, "Member 'Cremator_C_GetActionOptions::Player' has a wrong offset!");
static_assert(offsetof(Cremator_C_GetActionOptions, Component) == 0x000008, "Member 'Cremator_C_GetActionOptions::Component' has a wrong offset!");
static_assert(offsetof(Cremator_C_GetActionOptions, Actor) == 0x000010, "Member 'Cremator_C_GetActionOptions::Actor' has a wrong offset!");
static_assert(offsetof(Cremator_C_GetActionOptions, Options) == 0x000018, "Member 'Cremator_C_GetActionOptions::Options' has a wrong offset!");
static_assert(offsetof(Cremator_C_GetActionOptions, Options_enum) == 0x000028, "Member 'Cremator_C_GetActionOptions::Options_enum' has a wrong offset!");
static_assert(offsetof(Cremator_C_GetActionOptions, OptionsNamesOverlay) == 0x000038, "Member 'Cremator_C_GetActionOptions::OptionsNamesOverlay' has a wrong offset!");
static_assert(offsetof(Cremator_C_GetActionOptions, Number) == 0x000048, "Member 'Cremator_C_GetActionOptions::Number' has a wrong offset!");
static_assert(offsetof(Cremator_C_GetActionOptions, K2Node_MakeArray_Array) == 0x000050, "Member 'Cremator_C_GetActionOptions::K2Node_MakeArray_Array' has a wrong offset!");

// Function cremator.cremator_C.getGasCanFuel
// 0x00D0 (0x00D0 - 0x0000)
struct Cremator_C_GetGasCanFuel final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0018(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0070(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Cremator_C_GetGasCanFuel) == 0x000008, "Wrong alignment on Cremator_C_GetGasCanFuel");
static_assert(sizeof(Cremator_C_GetGasCanFuel) == 0x0000D0, "Wrong size on Cremator_C_GetGasCanFuel");
static_assert(offsetof(Cremator_C_GetGasCanFuel, ReturnValue) == 0x000000, "Member 'Cremator_C_GetGasCanFuel::ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_GetGasCanFuel, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Cremator_C_GetGasCanFuel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_GetGasCanFuel, CallFunc_Conv_FloatToText_ReturnValue) == 0x000018, "Member 'Cremator_C_GetGasCanFuel::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_GetGasCanFuel, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'Cremator_C_GetGasCanFuel::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Cremator_C_GetGasCanFuel, CallFunc_MakeLiteralText_ReturnValue) == 0x000070, "Member 'Cremator_C_GetGasCanFuel::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_GetGasCanFuel, K2Node_MakeArray_Array) == 0x000088, "Member 'Cremator_C_GetGasCanFuel::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Cremator_C_GetGasCanFuel, CallFunc_Conv_TextToString_ReturnValue) == 0x000098, "Member 'Cremator_C_GetGasCanFuel::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_GetGasCanFuel, CallFunc_Format_ReturnValue) == 0x0000A8, "Member 'Cremator_C_GetGasCanFuel::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_GetGasCanFuel, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0000C0, "Member 'Cremator_C_GetGasCanFuel::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");

// Function cremator.cremator_C.player_use
// 0x0090 (0x0090 - 0x0000)
struct Cremator_C_Player_use final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Cremator_C_Player_use) == 0x000008, "Wrong alignment on Cremator_C_Player_use");
static_assert(sizeof(Cremator_C_Player_use) == 0x000090, "Wrong size on Cremator_C_Player_use");
static_assert(offsetof(Cremator_C_Player_use, Player) == 0x000000, "Member 'Cremator_C_Player_use::Player' has a wrong offset!");
static_assert(offsetof(Cremator_C_Player_use, Hit) == 0x000008, "Member 'Cremator_C_Player_use::Hit' has a wrong offset!");

// Function cremator.cremator_C.kicked
// 0x0001 (0x0001 - 0x0000)
struct Cremator_C_Kicked final
{
public:
	bool                                          Kick;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Cremator_C_Kicked) == 0x000001, "Wrong alignment on Cremator_C_Kicked");
static_assert(sizeof(Cremator_C_Kicked) == 0x000001, "Wrong size on Cremator_C_Kicked");
static_assert(offsetof(Cremator_C_Kicked, Kick) == 0x000000, "Member 'Cremator_C_Kicked::Kick' has a wrong offset!");

// Function cremator.cremator_C.sendName
// 0x0008 (0x0008 - 0x0000)
struct Cremator_C_SendName final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Cremator_C_SendName) == 0x000004, "Wrong alignment on Cremator_C_SendName");
static_assert(sizeof(Cremator_C_SendName) == 0x000008, "Wrong size on Cremator_C_SendName");
static_assert(offsetof(Cremator_C_SendName, Name_0) == 0x000000, "Member 'Cremator_C_SendName::Name_0' has a wrong offset!");

// Function cremator.cremator_C.thrown
// 0x0008 (0x0008 - 0x0000)
struct Cremator_C_Thrown final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Cremator_C_Thrown) == 0x000008, "Wrong alignment on Cremator_C_Thrown");
static_assert(sizeof(Cremator_C_Thrown) == 0x000008, "Wrong size on Cremator_C_Thrown");
static_assert(offsetof(Cremator_C_Thrown, Player) == 0x000000, "Member 'Cremator_C_Thrown::Player' has a wrong offset!");

// Function cremator.cremator_C.damageByPlayer
// 0x0098 (0x0098 - 0x0000)
struct Cremator_C_DamageByPlayer final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         Damage;                                            // 0x0090(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Cremator_C_DamageByPlayer) == 0x000008, "Wrong alignment on Cremator_C_DamageByPlayer");
static_assert(sizeof(Cremator_C_DamageByPlayer) == 0x000098, "Wrong size on Cremator_C_DamageByPlayer");
static_assert(offsetof(Cremator_C_DamageByPlayer, Player) == 0x000000, "Member 'Cremator_C_DamageByPlayer::Player' has a wrong offset!");
static_assert(offsetof(Cremator_C_DamageByPlayer, Hit) == 0x000008, "Member 'Cremator_C_DamageByPlayer::Hit' has a wrong offset!");
static_assert(offsetof(Cremator_C_DamageByPlayer, Damage) == 0x000090, "Member 'Cremator_C_DamageByPlayer::Damage' has a wrong offset!");

// Function cremator.cremator_C.playerUnequip
// 0x0008 (0x0008 - 0x0000)
struct Cremator_C_PlayerUnequip final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Cremator_C_PlayerUnequip) == 0x000008, "Wrong alignment on Cremator_C_PlayerUnequip");
static_assert(sizeof(Cremator_C_PlayerUnequip) == 0x000008, "Wrong size on Cremator_C_PlayerUnequip");
static_assert(offsetof(Cremator_C_PlayerUnequip, Player) == 0x000000, "Member 'Cremator_C_PlayerUnequip::Player' has a wrong offset!");

// Function cremator.cremator_C.playerHold
// 0x0008 (0x0008 - 0x0000)
struct Cremator_C_PlayerHold final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Cremator_C_PlayerHold) == 0x000008, "Wrong alignment on Cremator_C_PlayerHold");
static_assert(sizeof(Cremator_C_PlayerHold) == 0x000008, "Wrong size on Cremator_C_PlayerHold");
static_assert(offsetof(Cremator_C_PlayerHold, Player) == 0x000000, "Member 'Cremator_C_PlayerHold::Player' has a wrong offset!");

// Function cremator.cremator_C.playerR
// 0x0008 (0x0008 - 0x0000)
struct Cremator_C_PlayerR final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Cremator_C_PlayerR) == 0x000008, "Wrong alignment on Cremator_C_PlayerR");
static_assert(sizeof(Cremator_C_PlayerR) == 0x000008, "Wrong size on Cremator_C_PlayerR");
static_assert(offsetof(Cremator_C_PlayerR, Player) == 0x000000, "Member 'Cremator_C_PlayerR::Player' has a wrong offset!");

// Function cremator.cremator_C.actionOptionIndex
// 0x0098 (0x0098 - 0x0000)
struct Cremator_C_ActionOptionIndex final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       Action;                                            // 0x0090(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Cremator_C_ActionOptionIndex) == 0x000008, "Wrong alignment on Cremator_C_ActionOptionIndex");
static_assert(sizeof(Cremator_C_ActionOptionIndex) == 0x000098, "Wrong size on Cremator_C_ActionOptionIndex");
static_assert(offsetof(Cremator_C_ActionOptionIndex, Player) == 0x000000, "Member 'Cremator_C_ActionOptionIndex::Player' has a wrong offset!");
static_assert(offsetof(Cremator_C_ActionOptionIndex, Hit) == 0x000008, "Member 'Cremator_C_ActionOptionIndex::Hit' has a wrong offset!");
static_assert(offsetof(Cremator_C_ActionOptionIndex, Action) == 0x000090, "Member 'Cremator_C_ActionOptionIndex::Action' has a wrong offset!");

// Function cremator.cremator_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Cremator_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Cremator_C_ReceiveTick) == 0x000004, "Wrong alignment on Cremator_C_ReceiveTick");
static_assert(sizeof(Cremator_C_ReceiveTick) == 0x000004, "Wrong size on Cremator_C_ReceiveTick");
static_assert(offsetof(Cremator_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Cremator_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function cremator.cremator_C.BndEvt__cremator_gascan_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct Cremator_C_BndEvt__cremator_gascan_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Cremator_C_BndEvt__cremator_gascan_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Cremator_C_BndEvt__cremator_gascan_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Cremator_C_BndEvt__cremator_gascan_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on Cremator_C_BndEvt__cremator_gascan_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Cremator_C_BndEvt__cremator_gascan_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Cremator_C_BndEvt__cremator_gascan_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Cremator_C_BndEvt__cremator_gascan_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Cremator_C_BndEvt__cremator_gascan_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Cremator_C_BndEvt__cremator_gascan_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Cremator_C_BndEvt__cremator_gascan_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Cremator_C_BndEvt__cremator_gascan_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Cremator_C_BndEvt__cremator_gascan_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Cremator_C_BndEvt__cremator_gascan_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Cremator_C_BndEvt__cremator_gascan_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Cremator_C_BndEvt__cremator_gascan_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Cremator_C_BndEvt__cremator_gascan_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function cremator.cremator_C.BndEvt__cremator_gascan_outCheck_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct Cremator_C_BndEvt__cremator_gascan_outCheck_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Cremator_C_BndEvt__cremator_gascan_outCheck_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Cremator_C_BndEvt__cremator_gascan_outCheck_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(Cremator_C_BndEvt__cremator_gascan_outCheck_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on Cremator_C_BndEvt__cremator_gascan_outCheck_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(Cremator_C_BndEvt__cremator_gascan_outCheck_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Cremator_C_BndEvt__cremator_gascan_outCheck_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Cremator_C_BndEvt__cremator_gascan_outCheck_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Cremator_C_BndEvt__cremator_gascan_outCheck_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Cremator_C_BndEvt__cremator_gascan_outCheck_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Cremator_C_BndEvt__cremator_gascan_outCheck_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Cremator_C_BndEvt__cremator_gascan_outCheck_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Cremator_C_BndEvt__cremator_gascan_outCheck_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function cremator.cremator_C.ExecuteUbergraph_cremator
// 0x07D0 (0x07D0 - 0x0000)
struct Cremator_C_ExecuteUbergraph_cremator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_6;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_2;                                // 0x0028(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_Event_kick;                                 // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_name;                                 // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_5;                             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_4;                             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_1;                                // 0x00D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_Event_damage;                               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_3;                             // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_2;                             // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_1;                             // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x0180(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       K2Node_Event_action;                               // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20A[0x6];                                      // 0x020A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player;                   // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_C*                                CallFunc_asProp_return;                            // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x023C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x3];                                      // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x027C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0290(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects;                  // 0x02A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects_1;                // 0x02C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects_2;                // 0x02D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsMain_Player;             // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309[0x3];                                      // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311[0x3];                                      // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0314(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0328(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0334(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0335(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_336[0x2];                                      // 0x0336(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           Temp_object_Variable;                              // 0x0338(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0348(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut;         // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0365(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_366[0x2];                                      // 0x0366(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0368(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0378(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_385[0x3];                                      // 0x0385(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0388(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_411[0x7];                                      // 0x0411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_gascan_C*                         K2Node_DynamicCast_AsProp_Gascan;                  // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_421[0xF];                                      // 0x0421(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0430(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0460(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E9[0x7];                                      // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x04F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0500(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C[0x4];                                      // 0x050C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_gascan_C*                         K2Node_DynamicCast_AsProp_Gascan_1;                // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_519[0x3];                                      // 0x0519(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x051C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player;              // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_1;        // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActorBeingDestroyed_ReturnValue;        // 0x0534(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0535(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0536(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0537(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut_1;       // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x053C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x053D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53E[0x2];                                      // 0x053E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x0544(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x05CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_2;       // 0x05D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D2[0x2];                                      // 0x05D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x05D4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D9[0x3];                                      // 0x05D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x05DC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_5EC[0x4];                                      // 0x05EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x05F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x05F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0604(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0614(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_615[0x3];                                      // 0x0615(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue; // 0x0618(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0624(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x062C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62D[0x3];                                      // 0x062D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0630(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_634[0x4];                                      // 0x0634(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           Temp_object_Variable_1;                            // 0x0638(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_641[0x3];                                      // 0x0641(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue_1; // 0x0644(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x0650(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0654(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0658(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_2;           // 0x065C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65D[0x3];                                      // 0x065D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0664(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0668(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2; // 0x066C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0670(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x0674(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0678(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x0690(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69C[0x4];                                      // 0x069C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x06A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x06A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B4[0x4];                                      // 0x06B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x06B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x06C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C1[0x3];                                      // 0x06C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x06C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x06D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D1[0x3];                                      // 0x06D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x06D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D9[0x7];                                      // 0x06D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue;           // 0x06E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E9[0x7];                                      // 0x06E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot;                     // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x06F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x06F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x06FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6FB[0x1];                                      // 0x06FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x06FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0700(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_3;           // 0x070C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0718(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue_1;       // 0x07A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A1[0x3];                                      // 0x07A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_2;      // 0x07A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_2;           // 0x07B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_3;                     // 0x07B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_3;                       // 0x07B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x07BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Cremator_C_ExecuteUbergraph_cremator) == 0x000010, "Wrong alignment on Cremator_C_ExecuteUbergraph_cremator");
static_assert(sizeof(Cremator_C_ExecuteUbergraph_cremator) == 0x0007D0, "Wrong size on Cremator_C_ExecuteUbergraph_cremator");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, EntryPoint) == 0x000000, "Member 'Cremator_C_ExecuteUbergraph_cremator::EntryPoint' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, Temp_int_Variable) == 0x000004, "Member 'Cremator_C_ExecuteUbergraph_cremator::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'Cremator_C_ExecuteUbergraph_cremator::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, Temp_int_Array_Index_Variable) == 0x000018, "Member 'Cremator_C_ExecuteUbergraph_cremator::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_Event_player_6) == 0x000020, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_Event_player_6' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_Event_hit_2) == 0x000028, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_Event_hit_2' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_Event_kick) == 0x0000B0, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_Event_kick' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_Event_name) == 0x0000B4, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_Event_name' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_Event_player_5) == 0x0000C0, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_Event_player_5' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_Event_player_4) == 0x0000C8, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_Event_player_4' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_Event_hit_1) == 0x0000D0, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_Event_hit_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_Event_damage) == 0x000158, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_Event_damage' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_Event_player_3) == 0x000160, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_Event_player_3' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_Event_player_2) == 0x000168, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_Event_player_2' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_Event_player_1) == 0x000170, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_Event_player_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_Event_player) == 0x000178, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_Event_hit) == 0x000180, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_Event_action) == 0x000208, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_Event_action' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_SwitchEnum_CmpSuccess) == 0x000209, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_DynamicCast_AsInt_Player) == 0x000210, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_DynamicCast_AsInt_Player' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_DynamicCast_bSuccess) == 0x000220, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_asProp_return) == 0x000228, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_asProp_return' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_GetForwardVector_ReturnValue) == 0x000230, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_GetActorForwardVector_ReturnValue) == 0x00023C, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Dot_VectorVector_ReturnValue) == 0x000248, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00024C, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_Event_DeltaSeconds) == 0x000250, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000254, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_SelectFloat_ReturnValue) == 0x000258, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00025C, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x000260, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_FClamp_ReturnValue) == 0x000264, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000268, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Array_LastIndex_ReturnValue) == 0x00026C, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000270, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000274, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000278, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_CreateDelegate_OutputDelegate) == 0x00027C, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000290, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Array_Get_Item) == 0x000298, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0002A0, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_DynamicCast_AsInt_Objects) == 0x0002A8, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_DynamicCast_AsInt_Objects' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_DynamicCast_bSuccess_1) == 0x0002B8, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_DynamicCast_AsInt_Objects_1) == 0x0002C0, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_DynamicCast_AsInt_Objects_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_DynamicCast_bSuccess_2) == 0x0002D0, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_DynamicCast_AsInt_Objects_2) == 0x0002D8, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_DynamicCast_AsInt_Objects_2' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_DynamicCast_bSuccess_3) == 0x0002E8, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_GetObjectClass_ReturnValue) == 0x0002F0, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_DoesImplementInterface_ReturnValue) == 0x0002F8, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_ClassDynamicCast_AsMain_Player) == 0x000300, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_ClassDynamicCast_AsMain_Player' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_ClassDynamicCast_bSuccess) == 0x000308, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Array_LastIndex_ReturnValue_1) == 0x00030C, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000310, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_CreateDelegate_OutputDelegate_1) == 0x000314, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000328, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_RandomFloatInRange_ReturnValue) == 0x000330, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000334, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Not_PreBool_ReturnValue) == 0x000335, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, Temp_object_Variable) == 0x000338, "Member 'Cremator_C_ExecuteUbergraph_cremator::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000340, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000344, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_CreateDelegate_OutputDelegate_2) == 0x000348, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_VictoryFloatMinusEquals_FloatOut) == 0x000358, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_VictoryFloatMinusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_FMax_ReturnValue) == 0x00035C, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Add_FloatFloat_ReturnValue) == 0x000360, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_IsValid_ReturnValue) == 0x000364, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Less_FloatFloat_ReturnValue) == 0x000365, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000368, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000370, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000378, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000380, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_ComponentBoundEvent_bFromSweep) == 0x000384, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_ComponentBoundEvent_SweepResult) == 0x000388, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_IsValid_ReturnValue_1) == 0x000410, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_DynamicCast_AsProp_Gascan) == 0x000418, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_DynamicCast_AsProp_Gascan' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_DynamicCast_bSuccess_4) == 0x000420, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000430, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000460, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0004E8, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0004F0, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_ComponentBoundEvent_OtherActor) == 0x0004F8, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_ComponentBoundEvent_OtherComp) == 0x000500, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000508, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_DynamicCast_AsProp_Gascan_1) == 0x000510, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_DynamicCast_AsProp_Gascan_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_DynamicCast_bSuccess_5) == 0x000518, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, Temp_int_Variable_1) == 0x00051C, "Member 'Cremator_C_ExecuteUbergraph_cremator::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_getMainPlayer_AsMain_Player) == 0x000520, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_getMainPlayer_AsMain_Player' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Array_Get_Item_1) == 0x000528, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_VictoryFloatPlusEquals_FloatOut_1) == 0x000530, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_VictoryFloatPlusEquals_FloatOut_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_IsActorBeingDestroyed_ReturnValue) == 0x000534, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_IsActorBeingDestroyed_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_IsValid_ReturnValue_2) == 0x000535, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Not_PreBool_ReturnValue_1) == 0x000536, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_BooleanAND_ReturnValue) == 0x000537, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_VictoryFloatMinusEquals_FloatOut_1) == 0x000538, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_VictoryFloatMinusEquals_FloatOut_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x00053C, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00053D, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Add_IntInt_ReturnValue_2) == 0x000540, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_MakeHitResult_ReturnValue) == 0x000544, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Lerp_ReturnValue) == 0x0005CC, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0005D0, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_LessEqual_FloatFloat_ReturnValue_2) == 0x0005D1, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_LessEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, Temp_float_Variable) == 0x0005D4, "Member 'Cremator_C_ExecuteUbergraph_cremator::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Array_RemoveItem_ReturnValue) == 0x0005D8, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_CreateDelegate_OutputDelegate_3) == 0x0005DC, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x0005F0, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_GetForwardVector_ReturnValue_1) == 0x0005F8, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000604, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x000610, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000614, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue) == 0x000618, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_VSize_ReturnValue) == 0x000624, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000628, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x00062C, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000630, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, Temp_object_Variable_1) == 0x000638, "Member 'Cremator_C_ExecuteUbergraph_cremator::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000640, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue_1) == 0x000644, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_VSize_ReturnValue_1) == 0x000650, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, Temp_float_Variable_1) == 0x000654, "Member 'Cremator_C_ExecuteUbergraph_cremator::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000658, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Array_RemoveItem_ReturnValue_2) == 0x00065C, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Array_RemoveItem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x000660, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000664, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Lerp_ReturnValue_1) == 0x000668, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2) == 0x00066C, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_FClamp_ReturnValue_1) == 0x000670, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_FClamp_ReturnValue_2) == 0x000674, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000678, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Array_Get_Item_2) == 0x000688, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_GetForwardVector_ReturnValue_2) == 0x000690, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0006A0, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0006A8, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_DynamicCast_AsPrimitive_Component) == 0x0006B8, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_DynamicCast_bSuccess_6) == 0x0006C0, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Add_VectorVector_ReturnValue) == 0x0006C4, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x0006D0, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Array_Length_ReturnValue) == 0x0006D4, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Less_IntInt_ReturnValue) == 0x0006D8, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_GetPlayerCharacter_ReturnValue) == 0x0006E0, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_IsOverlappingActor_ReturnValue) == 0x0006E8, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_IsOverlappingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_getSaveSlot_saveSlot) == 0x0006F0, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_getSaveSlot_saveSlot' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_BooleanOR_ReturnValue) == 0x0006F8, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0006F9, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, K2Node_SwitchEnum_CmpSuccess_1) == 0x0006FA, "Member 'Cremator_C_ExecuteUbergraph_cremator::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Lerp_ReturnValue_2) == 0x0006FC, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_MakeRotator_ReturnValue) == 0x000700, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_GetForwardVector_ReturnValue_3) == 0x00070C, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_GetForwardVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000718, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_RandomBoolWithWeight_ReturnValue_1) == 0x0007A0, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_RandomBoolWithWeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_GetActorForwardVector_ReturnValue_2) == 0x0007A4, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_GetActorForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Dot_VectorVector_ReturnValue_2) == 0x0007B0, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Dot_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_FClamp_ReturnValue_3) == 0x0007B4, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_Lerp_ReturnValue_3) == 0x0007B8, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Cremator_C_ExecuteUbergraph_cremator, CallFunc_MakeVector_ReturnValue) == 0x0007BC, "Member 'Cremator_C_ExecuteUbergraph_cremator::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

}

