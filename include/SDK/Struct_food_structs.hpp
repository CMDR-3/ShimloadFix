#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Struct_food

#include "Basic.hpp"

#include "Enum_foodType_structs.hpp"


namespace SDK
{

// UserDefinedStruct struct_food.struct_food
// 0x001C (0x001C - 0x0000)
struct FStruct_food final
{
public:
	float                                         Food_2_99F8F51744BCB199938C50B7CB4E0238;           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Sleep_9_16780B15462745B0D65188BF37D44FD5;          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Health_13_1F9EA6FB463B2CE83C1AB8A67A0D5D69;        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Uses_10_001AFD994A2837305D73489AA5C07448;          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Tolerance_16_49DC61234F0AD43205344ABC1D824AE4;     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Taste_18_F2A1F9944A3D19C2E8C7288FEC8B9FF8;         // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_foodType                                 Type_21_2E8B1EB94F08543354764BACE1BB4514;          // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FStruct_food) == 0x000004, "Wrong alignment on FStruct_food");
static_assert(sizeof(FStruct_food) == 0x00001C, "Wrong size on FStruct_food");
static_assert(offsetof(FStruct_food, Food_2_99F8F51744BCB199938C50B7CB4E0238) == 0x000000, "Member 'FStruct_food::Food_2_99F8F51744BCB199938C50B7CB4E0238' has a wrong offset!");
static_assert(offsetof(FStruct_food, Sleep_9_16780B15462745B0D65188BF37D44FD5) == 0x000004, "Member 'FStruct_food::Sleep_9_16780B15462745B0D65188BF37D44FD5' has a wrong offset!");
static_assert(offsetof(FStruct_food, Health_13_1F9EA6FB463B2CE83C1AB8A67A0D5D69) == 0x000008, "Member 'FStruct_food::Health_13_1F9EA6FB463B2CE83C1AB8A67A0D5D69' has a wrong offset!");
static_assert(offsetof(FStruct_food, Uses_10_001AFD994A2837305D73489AA5C07448) == 0x00000C, "Member 'FStruct_food::Uses_10_001AFD994A2837305D73489AA5C07448' has a wrong offset!");
static_assert(offsetof(FStruct_food, Tolerance_16_49DC61234F0AD43205344ABC1D824AE4) == 0x000010, "Member 'FStruct_food::Tolerance_16_49DC61234F0AD43205344ABC1D824AE4' has a wrong offset!");
static_assert(offsetof(FStruct_food, Taste_18_F2A1F9944A3D19C2E8C7288FEC8B9FF8) == 0x000014, "Member 'FStruct_food::Taste_18_F2A1F9944A3D19C2E8C7288FEC8B9FF8' has a wrong offset!");
static_assert(offsetof(FStruct_food, Type_21_2E8B1EB94F08543354764BACE1BB4514) == 0x000018, "Member 'FStruct_food::Type_21_2E8B1EB94F08543354764BACE1BB4514' has a wrong offset!");

}

