#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_clipboard

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Enum_interactionActions_structs.hpp"
#include "Prop_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass prop_clipboard.prop_clipboard_C
// 0x0030 (0x0388 - 0x0358)
class AProp_clipboard_C : public AProp_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Prop_clipboard_C;                   // 0x0358(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class FString>                         Text;                                              // 0x0360(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	TArray<class FText>                           Text_u;                                            // 0x0370(0x0010)(Edit, BlueprintVisible)
	int32                                         Page;                                              // 0x0380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Uneditable;                                        // 0x0384(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          SkipTextSave;                                      // 0x0385(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_prop_clipboard(int32 EntryPoint);
	void ActionOptionIndex(class AMainPlayer_C* Player, const struct FHitResult& Hit_0, Enum_interactionActions Action);
	void Upd();
	void GamemodeBeginPlay();
	void PlayerHandUse_RMB(class AMainPlayer_C* Player);
	void UserConstructionScript();
	void LoadData(const struct FStruct_save& Data, bool* Return);
	void GetData(struct FStruct_save* Data);
	void LookAt(class AMainPlayer_C* Player, const struct FHitResult& Hit_0, bool* Return, class FString* Text_0, class UPrimitiveComponent** boundObjectReplace, uint8* Number);
	void GetActionOptions(class AMainPlayer_C* Player, class UPrimitiveComponent* Component, class AActor* Actor, TArray<class FString>* Options, TArray<Enum_interactionActions>* Options_enum, TArray<class FText>* OptionsNamesOverlay, uint8* Number);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"prop_clipboard_C">();
	}
	static class AProp_clipboard_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProp_clipboard_C>();
	}
};
static_assert(alignof(AProp_clipboard_C) == 0x000008, "Wrong alignment on AProp_clipboard_C");
static_assert(sizeof(AProp_clipboard_C) == 0x000388, "Wrong size on AProp_clipboard_C");
static_assert(offsetof(AProp_clipboard_C, UberGraphFrame_Prop_clipboard_C) == 0x000358, "Member 'AProp_clipboard_C::UberGraphFrame_Prop_clipboard_C' has a wrong offset!");
static_assert(offsetof(AProp_clipboard_C, Text) == 0x000360, "Member 'AProp_clipboard_C::Text' has a wrong offset!");
static_assert(offsetof(AProp_clipboard_C, Text_u) == 0x000370, "Member 'AProp_clipboard_C::Text_u' has a wrong offset!");
static_assert(offsetof(AProp_clipboard_C, Page) == 0x000380, "Member 'AProp_clipboard_C::Page' has a wrong offset!");
static_assert(offsetof(AProp_clipboard_C, Uneditable) == 0x000384, "Member 'AProp_clipboard_C::Uneditable' has a wrong offset!");
static_assert(offsetof(AProp_clipboard_C, SkipTextSave) == 0x000385, "Member 'AProp_clipboard_C::SkipTextSave' has a wrong offset!");

}

