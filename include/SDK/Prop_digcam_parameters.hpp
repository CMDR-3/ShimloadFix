#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_digcam

#include "Basic.hpp"

#include "Struct_byteImage_structs.hpp"
#include "Struct_save_structs.hpp"
#include "Engine_structs.hpp"
#include "Enum_interactionActions_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function prop_digcam.prop_digcam_C.ExecuteUbergraph_prop_digcam
// 0x0280 (0x0280 - 0x0000)
struct Prop_digcam_C_ExecuteUbergraph_prop_digcam final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_2;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_1;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x0080(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       K2Node_Event_action;                               // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10A[0x6];                                      // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x0110(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0168(0x0018)()
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0188(0x0040)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01E8(0x0018)()
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player;              // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_208[0x8];                                      // 0x0208(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0210(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot;                     // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_photo_C*                          CallFunc_FinishSpawningActor_ReturnValue;          // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_putObjectInventory2_return;               // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_byteImage                      CallFunc_Array_Get_Item;                           // 0x0260(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_checkPaper_return;                        // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_digcam_C_ExecuteUbergraph_prop_digcam) == 0x000010, "Wrong alignment on Prop_digcam_C_ExecuteUbergraph_prop_digcam");
static_assert(sizeof(Prop_digcam_C_ExecuteUbergraph_prop_digcam) == 0x000280, "Wrong size on Prop_digcam_C_ExecuteUbergraph_prop_digcam");
static_assert(offsetof(Prop_digcam_C_ExecuteUbergraph_prop_digcam, EntryPoint) == 0x000000, "Member 'Prop_digcam_C_ExecuteUbergraph_prop_digcam::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_ExecuteUbergraph_prop_digcam, K2Node_Event_player_2) == 0x000008, "Member 'Prop_digcam_C_ExecuteUbergraph_prop_digcam::K2Node_Event_player_2' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_ExecuteUbergraph_prop_digcam, K2Node_Event_player_1) == 0x000010, "Member 'Prop_digcam_C_ExecuteUbergraph_prop_digcam::K2Node_Event_player_1' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_ExecuteUbergraph_prop_digcam, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000020, "Member 'Prop_digcam_C_ExecuteUbergraph_prop_digcam::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_ExecuteUbergraph_prop_digcam, CallFunc_BreakTransform_Location) == 0x000050, "Member 'Prop_digcam_C_ExecuteUbergraph_prop_digcam::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_ExecuteUbergraph_prop_digcam, CallFunc_BreakTransform_Rotation) == 0x00005C, "Member 'Prop_digcam_C_ExecuteUbergraph_prop_digcam::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_ExecuteUbergraph_prop_digcam, CallFunc_BreakTransform_Scale) == 0x000068, "Member 'Prop_digcam_C_ExecuteUbergraph_prop_digcam::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_ExecuteUbergraph_prop_digcam, CallFunc_Not_PreBool_ReturnValue) == 0x000074, "Member 'Prop_digcam_C_ExecuteUbergraph_prop_digcam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_ExecuteUbergraph_prop_digcam, K2Node_Event_player) == 0x000078, "Member 'Prop_digcam_C_ExecuteUbergraph_prop_digcam::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_ExecuteUbergraph_prop_digcam, K2Node_Event_hit) == 0x000080, "Member 'Prop_digcam_C_ExecuteUbergraph_prop_digcam::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_ExecuteUbergraph_prop_digcam, K2Node_Event_action) == 0x000108, "Member 'Prop_digcam_C_ExecuteUbergraph_prop_digcam::K2Node_Event_action' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_ExecuteUbergraph_prop_digcam, K2Node_SwitchEnum_CmpSuccess) == 0x000109, "Member 'Prop_digcam_C_ExecuteUbergraph_prop_digcam::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_ExecuteUbergraph_prop_digcam, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x000110, "Member 'Prop_digcam_C_ExecuteUbergraph_prop_digcam::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_ExecuteUbergraph_prop_digcam, CallFunc_BreakTransform_Location_1) == 0x000140, "Member 'Prop_digcam_C_ExecuteUbergraph_prop_digcam::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_ExecuteUbergraph_prop_digcam, CallFunc_BreakTransform_Rotation_1) == 0x00014C, "Member 'Prop_digcam_C_ExecuteUbergraph_prop_digcam::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_ExecuteUbergraph_prop_digcam, CallFunc_BreakTransform_Scale_1) == 0x000158, "Member 'Prop_digcam_C_ExecuteUbergraph_prop_digcam::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_ExecuteUbergraph_prop_digcam, CallFunc_Conv_BoolToText_ReturnValue) == 0x000168, "Member 'Prop_digcam_C_ExecuteUbergraph_prop_digcam::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_ExecuteUbergraph_prop_digcam, CallFunc_Array_LastIndex_ReturnValue) == 0x000180, "Member 'Prop_digcam_C_ExecuteUbergraph_prop_digcam::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_ExecuteUbergraph_prop_digcam, K2Node_MakeStruct_FormatArgumentData) == 0x000188, "Member 'Prop_digcam_C_ExecuteUbergraph_prop_digcam::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_ExecuteUbergraph_prop_digcam, CallFunc_Conv_IntToString_ReturnValue) == 0x0001C8, "Member 'Prop_digcam_C_ExecuteUbergraph_prop_digcam::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_ExecuteUbergraph_prop_digcam, K2Node_MakeArray_Array) == 0x0001D8, "Member 'Prop_digcam_C_ExecuteUbergraph_prop_digcam::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_ExecuteUbergraph_prop_digcam, CallFunc_Format_ReturnValue) == 0x0001E8, "Member 'Prop_digcam_C_ExecuteUbergraph_prop_digcam::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_ExecuteUbergraph_prop_digcam, CallFunc_getMainPlayer_AsMain_Player) == 0x000200, "Member 'Prop_digcam_C_ExecuteUbergraph_prop_digcam::CallFunc_getMainPlayer_AsMain_Player' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_ExecuteUbergraph_prop_digcam, CallFunc_GetTransform_ReturnValue) == 0x000210, "Member 'Prop_digcam_C_ExecuteUbergraph_prop_digcam::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_ExecuteUbergraph_prop_digcam, CallFunc_getSaveSlot_saveSlot) == 0x000240, "Member 'Prop_digcam_C_ExecuteUbergraph_prop_digcam::CallFunc_getSaveSlot_saveSlot' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_ExecuteUbergraph_prop_digcam, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000248, "Member 'Prop_digcam_C_ExecuteUbergraph_prop_digcam::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_ExecuteUbergraph_prop_digcam, CallFunc_FinishSpawningActor_ReturnValue) == 0x000250, "Member 'Prop_digcam_C_ExecuteUbergraph_prop_digcam::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_ExecuteUbergraph_prop_digcam, CallFunc_putObjectInventory2_return) == 0x000258, "Member 'Prop_digcam_C_ExecuteUbergraph_prop_digcam::CallFunc_putObjectInventory2_return' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_ExecuteUbergraph_prop_digcam, CallFunc_Array_Get_Item) == 0x000260, "Member 'Prop_digcam_C_ExecuteUbergraph_prop_digcam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_ExecuteUbergraph_prop_digcam, CallFunc_checkPaper_return) == 0x000270, "Member 'Prop_digcam_C_ExecuteUbergraph_prop_digcam::CallFunc_checkPaper_return' has a wrong offset!");

// Function prop_digcam.prop_digcam_C.actionOptionIndex
// 0x0098 (0x0098 - 0x0000)
struct Prop_digcam_C_ActionOptionIndex final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit_0;                                             // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       Action;                                            // 0x0090(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_digcam_C_ActionOptionIndex) == 0x000008, "Wrong alignment on Prop_digcam_C_ActionOptionIndex");
static_assert(sizeof(Prop_digcam_C_ActionOptionIndex) == 0x000098, "Wrong size on Prop_digcam_C_ActionOptionIndex");
static_assert(offsetof(Prop_digcam_C_ActionOptionIndex, Player) == 0x000000, "Member 'Prop_digcam_C_ActionOptionIndex::Player' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_ActionOptionIndex, Hit_0) == 0x000008, "Member 'Prop_digcam_C_ActionOptionIndex::Hit_0' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_ActionOptionIndex, Action) == 0x000090, "Member 'Prop_digcam_C_ActionOptionIndex::Action' has a wrong offset!");

// Function prop_digcam.prop_digcam_C.checkPaper
// 0x0110 (0x0110 - 0x0000)
struct Prop_digcam_C_CheckPaper final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Ind1;                                              // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0018(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0028(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_save                           CallFunc_Array_Get_Item;                           // 0x0040(0x00C0)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_digcam_C_CheckPaper) == 0x000010, "Wrong alignment on Prop_digcam_C_CheckPaper");
static_assert(sizeof(Prop_digcam_C_CheckPaper) == 0x000110, "Wrong size on Prop_digcam_C_CheckPaper");
static_assert(offsetof(Prop_digcam_C_CheckPaper, Return) == 0x000000, "Member 'Prop_digcam_C_CheckPaper::Return' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_CheckPaper, Ind1) == 0x000004, "Member 'Prop_digcam_C_CheckPaper::Ind1' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_CheckPaper, Temp_int_Array_Index_Variable) == 0x000008, "Member 'Prop_digcam_C_CheckPaper::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_CheckPaper, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'Prop_digcam_C_CheckPaper::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_CheckPaper, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'Prop_digcam_C_CheckPaper::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_CheckPaper, Temp_string_Variable) == 0x000018, "Member 'Prop_digcam_C_CheckPaper::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_CheckPaper, Temp_string_Variable_1) == 0x000028, "Member 'Prop_digcam_C_CheckPaper::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_CheckPaper, CallFunc_Array_RemoveItem_ReturnValue) == 0x000038, "Member 'Prop_digcam_C_CheckPaper::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_CheckPaper, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'Prop_digcam_C_CheckPaper::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_CheckPaper, CallFunc_Array_Get_Item) == 0x000040, "Member 'Prop_digcam_C_CheckPaper::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_CheckPaper, CallFunc_Less_IntInt_ReturnValue) == 0x000100, "Member 'Prop_digcam_C_CheckPaper::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_digcam_C_CheckPaper, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000101, "Member 'Prop_digcam_C_CheckPaper::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");

// Function prop_digcam.prop_digcam_C.playerHandUse_RMB
// 0x0008 (0x0008 - 0x0000)
struct Prop_digcam_C_PlayerHandUse_RMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_digcam_C_PlayerHandUse_RMB) == 0x000008, "Wrong alignment on Prop_digcam_C_PlayerHandUse_RMB");
static_assert(sizeof(Prop_digcam_C_PlayerHandUse_RMB) == 0x000008, "Wrong size on Prop_digcam_C_PlayerHandUse_RMB");
static_assert(offsetof(Prop_digcam_C_PlayerHandUse_RMB, Player) == 0x000000, "Member 'Prop_digcam_C_PlayerHandUse_RMB::Player' has a wrong offset!");

// Function prop_digcam.prop_digcam_C.playerHandUse_LMB
// 0x0008 (0x0008 - 0x0000)
struct Prop_digcam_C_PlayerHandUse_LMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_digcam_C_PlayerHandUse_LMB) == 0x000008, "Wrong alignment on Prop_digcam_C_PlayerHandUse_LMB");
static_assert(sizeof(Prop_digcam_C_PlayerHandUse_LMB) == 0x000008, "Wrong size on Prop_digcam_C_PlayerHandUse_LMB");
static_assert(offsetof(Prop_digcam_C_PlayerHandUse_LMB, Player) == 0x000000, "Member 'Prop_digcam_C_PlayerHandUse_LMB::Player' has a wrong offset!");

}

