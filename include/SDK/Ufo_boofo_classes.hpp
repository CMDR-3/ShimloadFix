#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ufo_boofo

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ufo_boofo.ufo_boofo_C
// 0x0098 (0x02B8 - 0x0220)
class AUfo_boofo_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   UFO;                                               // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    UfoAnchor;                                         // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio;                                             // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Eff_R;                                             // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Eff_L;                                             // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       FlySpline;                                         // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       TravelSpline;                                      // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x0270(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x3];                                      // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SplinePoints;                                      // 0x0274(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Alpha;                                             // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Length;                                            // 0x027C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0284(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Squish;                                            // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Shockwave;                                         // 0x0290(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         begin;                                             // 0x0294(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GetPoints;                                         // 0x0298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        Points;                                            // 0x02A0(0x0010)(Edit, BlueprintVisible)
	bool                                          SetPoints;                                         // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Dir;                                               // 0x02B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ufo_boofo(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();
	void Gen();
	float UfoToPlayerDir(bool Start);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ufo_boofo_C">();
	}
	static class AUfo_boofo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AUfo_boofo_C>();
	}
};
static_assert(alignof(AUfo_boofo_C) == 0x000008, "Wrong alignment on AUfo_boofo_C");
static_assert(sizeof(AUfo_boofo_C) == 0x0002B8, "Wrong size on AUfo_boofo_C");
static_assert(offsetof(AUfo_boofo_C, UberGraphFrame) == 0x000220, "Member 'AUfo_boofo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AUfo_boofo_C, UFO) == 0x000228, "Member 'AUfo_boofo_C::UFO' has a wrong offset!");
static_assert(offsetof(AUfo_boofo_C, UfoAnchor) == 0x000230, "Member 'AUfo_boofo_C::UfoAnchor' has a wrong offset!");
static_assert(offsetof(AUfo_boofo_C, Audio) == 0x000238, "Member 'AUfo_boofo_C::Audio' has a wrong offset!");
static_assert(offsetof(AUfo_boofo_C, Eff_R) == 0x000240, "Member 'AUfo_boofo_C::Eff_R' has a wrong offset!");
static_assert(offsetof(AUfo_boofo_C, Eff_L) == 0x000248, "Member 'AUfo_boofo_C::Eff_L' has a wrong offset!");
static_assert(offsetof(AUfo_boofo_C, FlySpline) == 0x000250, "Member 'AUfo_boofo_C::FlySpline' has a wrong offset!");
static_assert(offsetof(AUfo_boofo_C, TravelSpline) == 0x000258, "Member 'AUfo_boofo_C::TravelSpline' has a wrong offset!");
static_assert(offsetof(AUfo_boofo_C, Arrow) == 0x000260, "Member 'AUfo_boofo_C::Arrow' has a wrong offset!");
static_assert(offsetof(AUfo_boofo_C, DefaultSceneRoot) == 0x000268, "Member 'AUfo_boofo_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AUfo_boofo_C, Debug) == 0x000270, "Member 'AUfo_boofo_C::Debug' has a wrong offset!");
static_assert(offsetof(AUfo_boofo_C, SplinePoints) == 0x000274, "Member 'AUfo_boofo_C::SplinePoints' has a wrong offset!");
static_assert(offsetof(AUfo_boofo_C, Alpha) == 0x000278, "Member 'AUfo_boofo_C::Alpha' has a wrong offset!");
static_assert(offsetof(AUfo_boofo_C, Length) == 0x00027C, "Member 'AUfo_boofo_C::Length' has a wrong offset!");
static_assert(offsetof(AUfo_boofo_C, Speed) == 0x000280, "Member 'AUfo_boofo_C::Speed' has a wrong offset!");
static_assert(offsetof(AUfo_boofo_C, Radius) == 0x000284, "Member 'AUfo_boofo_C::Radius' has a wrong offset!");
static_assert(offsetof(AUfo_boofo_C, Squish) == 0x000288, "Member 'AUfo_boofo_C::Squish' has a wrong offset!");
static_assert(offsetof(AUfo_boofo_C, Shockwave) == 0x000290, "Member 'AUfo_boofo_C::Shockwave' has a wrong offset!");
static_assert(offsetof(AUfo_boofo_C, begin) == 0x000294, "Member 'AUfo_boofo_C::begin' has a wrong offset!");
static_assert(offsetof(AUfo_boofo_C, GetPoints) == 0x000298, "Member 'AUfo_boofo_C::GetPoints' has a wrong offset!");
static_assert(offsetof(AUfo_boofo_C, Points) == 0x0002A0, "Member 'AUfo_boofo_C::Points' has a wrong offset!");
static_assert(offsetof(AUfo_boofo_C, SetPoints) == 0x0002B0, "Member 'AUfo_boofo_C::SetPoints' has a wrong offset!");
static_assert(offsetof(AUfo_boofo_C, Dir) == 0x0002B1, "Member 'AUfo_boofo_C::Dir' has a wrong offset!");

}

