#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VoidModInstance

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "VoidMod_Mod_structs.hpp"
#include "InputCore_structs.hpp"
#include "VoidMod_CustomEvent_structs.hpp"


namespace SDK::Params
{

// Function VoidModInstance.VoidModInstance_C.CallNewSaveFunctions
// 0x0068 (0x0068 - 0x0000)
struct VoidModInstance_C_CallNewSaveFunctions final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVoidMod_Mod                           CallFunc_Array_Get_Item;                           // 0x0010(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VoidModInstance_C_CallNewSaveFunctions) == 0x000008, "Wrong alignment on VoidModInstance_C_CallNewSaveFunctions");
static_assert(sizeof(VoidModInstance_C_CallNewSaveFunctions) == 0x000068, "Wrong size on VoidModInstance_C_CallNewSaveFunctions");
static_assert(offsetof(VoidModInstance_C_CallNewSaveFunctions, Temp_int_Array_Index_Variable) == 0x000000, "Member 'VoidModInstance_C_CallNewSaveFunctions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_CallNewSaveFunctions, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'VoidModInstance_C_CallNewSaveFunctions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_CallNewSaveFunctions, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'VoidModInstance_C_CallNewSaveFunctions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_CallNewSaveFunctions, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'VoidModInstance_C_CallNewSaveFunctions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_CallNewSaveFunctions, CallFunc_Array_Get_Item) == 0x000010, "Member 'VoidModInstance_C_CallNewSaveFunctions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_CallNewSaveFunctions, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'VoidModInstance_C_CallNewSaveFunctions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function VoidModInstance.VoidModInstance_C.HandleTerminalCommand
// 0x0108 (0x0108 - 0x0000)
struct VoidModInstance_C_HandleTerminalCommand final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUmg_console_C*                         CallFunc_GetFirstWidgetOfClass_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0040(0x0018)()
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_String__ExplodeString_OutputStrings;      // 0x0080(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Trim_ReturnValue;                         // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Split_LeftS;                              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Trim_ReturnValue_1;                       // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue_1;                        // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSubstring_ReturnValue_1;               // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Trim_ReturnValue_2;                       // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(VoidModInstance_C_HandleTerminalCommand) == 0x000008, "Wrong alignment on VoidModInstance_C_HandleTerminalCommand");
static_assert(sizeof(VoidModInstance_C_HandleTerminalCommand) == 0x000108, "Wrong size on VoidModInstance_C_HandleTerminalCommand");
static_assert(offsetof(VoidModInstance_C_HandleTerminalCommand, Text) == 0x000000, "Member 'VoidModInstance_C_HandleTerminalCommand::Text' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_HandleTerminalCommand, CommitMethod) == 0x000018, "Member 'VoidModInstance_C_HandleTerminalCommand::CommitMethod' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_HandleTerminalCommand, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'VoidModInstance_C_HandleTerminalCommand::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_HandleTerminalCommand, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'VoidModInstance_C_HandleTerminalCommand::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_HandleTerminalCommand, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'VoidModInstance_C_HandleTerminalCommand::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_HandleTerminalCommand, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'VoidModInstance_C_HandleTerminalCommand::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_HandleTerminalCommand, CallFunc_GetFirstWidgetOfClass_ReturnValue) == 0x000020, "Member 'VoidModInstance_C_HandleTerminalCommand::CallFunc_GetFirstWidgetOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_HandleTerminalCommand, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'VoidModInstance_C_HandleTerminalCommand::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_HandleTerminalCommand, CallFunc_Array_Get_Item) == 0x000030, "Member 'VoidModInstance_C_HandleTerminalCommand::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_HandleTerminalCommand, CallFunc_GetText_ReturnValue) == 0x000040, "Member 'VoidModInstance_C_HandleTerminalCommand::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_HandleTerminalCommand, CallFunc_Len_ReturnValue) == 0x000058, "Member 'VoidModInstance_C_HandleTerminalCommand::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_HandleTerminalCommand, CallFunc_Conv_TextToString_ReturnValue) == 0x000060, "Member 'VoidModInstance_C_HandleTerminalCommand::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_HandleTerminalCommand, CallFunc_GetSubstring_ReturnValue) == 0x000070, "Member 'VoidModInstance_C_HandleTerminalCommand::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_HandleTerminalCommand, CallFunc_String__ExplodeString_OutputStrings) == 0x000080, "Member 'VoidModInstance_C_HandleTerminalCommand::CallFunc_String__ExplodeString_OutputStrings' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_HandleTerminalCommand, CallFunc_Trim_ReturnValue) == 0x000090, "Member 'VoidModInstance_C_HandleTerminalCommand::CallFunc_Trim_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_HandleTerminalCommand, CallFunc_Contains_ReturnValue) == 0x0000A0, "Member 'VoidModInstance_C_HandleTerminalCommand::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_HandleTerminalCommand, CallFunc_Split_LeftS) == 0x0000A8, "Member 'VoidModInstance_C_HandleTerminalCommand::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_HandleTerminalCommand, CallFunc_Split_RightS) == 0x0000B8, "Member 'VoidModInstance_C_HandleTerminalCommand::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_HandleTerminalCommand, CallFunc_Split_ReturnValue) == 0x0000C8, "Member 'VoidModInstance_C_HandleTerminalCommand::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_HandleTerminalCommand, CallFunc_Trim_ReturnValue_1) == 0x0000D0, "Member 'VoidModInstance_C_HandleTerminalCommand::CallFunc_Trim_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_HandleTerminalCommand, CallFunc_Len_ReturnValue_1) == 0x0000E0, "Member 'VoidModInstance_C_HandleTerminalCommand::CallFunc_Len_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_HandleTerminalCommand, CallFunc_GetSubstring_ReturnValue_1) == 0x0000E8, "Member 'VoidModInstance_C_HandleTerminalCommand::CallFunc_GetSubstring_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_HandleTerminalCommand, CallFunc_Trim_ReturnValue_2) == 0x0000F8, "Member 'VoidModInstance_C_HandleTerminalCommand::CallFunc_Trim_ReturnValue_2' has a wrong offset!");

// Function VoidModInstance.VoidModInstance_C.CreateCustomMenu
// 0x0010 (0x0010 - 0x0000)
struct VoidModInstance_C_CreateCustomMenu final
{
public:
	int32                                         Layer;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCustom_menu_C*                         CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VoidModInstance_C_CreateCustomMenu) == 0x000008, "Wrong alignment on VoidModInstance_C_CreateCustomMenu");
static_assert(sizeof(VoidModInstance_C_CreateCustomMenu) == 0x000010, "Wrong size on VoidModInstance_C_CreateCustomMenu");
static_assert(offsetof(VoidModInstance_C_CreateCustomMenu, Layer) == 0x000000, "Member 'VoidModInstance_C_CreateCustomMenu::Layer' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_CreateCustomMenu, CallFunc_Create_ReturnValue) == 0x000008, "Member 'VoidModInstance_C_CreateCustomMenu::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function VoidModInstance.VoidModInstance_C.UpdateLoadedModCount
// 0x0040 (0x0040 - 0x0000)
struct VoidModInstance_C_UpdateLoadedModCount final
{
public:
	bool                                          ShowHint;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0018)()
};
static_assert(alignof(VoidModInstance_C_UpdateLoadedModCount) == 0x000008, "Wrong alignment on VoidModInstance_C_UpdateLoadedModCount");
static_assert(sizeof(VoidModInstance_C_UpdateLoadedModCount) == 0x000040, "Wrong size on VoidModInstance_C_UpdateLoadedModCount");
static_assert(offsetof(VoidModInstance_C_UpdateLoadedModCount, ShowHint) == 0x000000, "Member 'VoidModInstance_C_UpdateLoadedModCount::ShowHint' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_UpdateLoadedModCount, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'VoidModInstance_C_UpdateLoadedModCount::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_UpdateLoadedModCount, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'VoidModInstance_C_UpdateLoadedModCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_UpdateLoadedModCount, CallFunc_Conv_IntToString_ReturnValue) == 0x000008, "Member 'VoidModInstance_C_UpdateLoadedModCount::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_UpdateLoadedModCount, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'VoidModInstance_C_UpdateLoadedModCount::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_UpdateLoadedModCount, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'VoidModInstance_C_UpdateLoadedModCount::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function VoidModInstance.VoidModInstance_C.SetDefaultConfigValues
// 0x0003 (0x0003 - 0x0000)
struct VoidModInstance_C_SetDefaultConfigValues final
{
public:
	bool                                          CallFunc_Set_Config_Default_AlreadyExists;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Config_Default_AlreadyExists_1;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Config_Default_AlreadyExists_2;       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VoidModInstance_C_SetDefaultConfigValues) == 0x000001, "Wrong alignment on VoidModInstance_C_SetDefaultConfigValues");
static_assert(sizeof(VoidModInstance_C_SetDefaultConfigValues) == 0x000003, "Wrong size on VoidModInstance_C_SetDefaultConfigValues");
static_assert(offsetof(VoidModInstance_C_SetDefaultConfigValues, CallFunc_Set_Config_Default_AlreadyExists) == 0x000000, "Member 'VoidModInstance_C_SetDefaultConfigValues::CallFunc_Set_Config_Default_AlreadyExists' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_SetDefaultConfigValues, CallFunc_Set_Config_Default_AlreadyExists_1) == 0x000001, "Member 'VoidModInstance_C_SetDefaultConfigValues::CallFunc_Set_Config_Default_AlreadyExists_1' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_SetDefaultConfigValues, CallFunc_Set_Config_Default_AlreadyExists_2) == 0x000002, "Member 'VoidModInstance_C_SetDefaultConfigValues::CallFunc_Set_Config_Default_AlreadyExists_2' has a wrong offset!");

// Function VoidModInstance.VoidModInstance_C.InitializeVoidMod
// 0x00B0 (0x00B0 - 0x0000)
struct VoidModInstance_C_InitializeVoidMod final
{
public:
	TDelegate<void(class FText& Text, ETextCommit CommitMethod)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class UUmg_console_C*                         CallFunc_GetFirstWidgetOfClass_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Get_Config_Variable_Value;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Config_Variable_Exists;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class Ubranded_loading_C*                     CallFunc_Create_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Get_Config_Variable_Value_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Config_Variable_Exists_1;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USpawnlist_C*                           CallFunc_Create_ReturnValue_1;                     // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_1;           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue_1;             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue_1;                   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AVoidModActor_C*>                CallFunc_GetAllActorsOfClass_OutActors;            // 0x0088(0x0010)(ReferenceParm)
	class AVoidModActor_C*                        CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VoidModInstance_C_InitializeVoidMod) == 0x000008, "Wrong alignment on VoidModInstance_C_InitializeVoidMod");
static_assert(sizeof(VoidModInstance_C_InitializeVoidMod) == 0x0000B0, "Wrong size on VoidModInstance_C_InitializeVoidMod");
static_assert(offsetof(VoidModInstance_C_InitializeVoidMod, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'VoidModInstance_C_InitializeVoidMod::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_InitializeVoidMod, CallFunc_GetFirstWidgetOfClass_ReturnValue) == 0x000010, "Member 'VoidModInstance_C_InitializeVoidMod::CallFunc_GetFirstWidgetOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_InitializeVoidMod, Temp_int_Array_Index_Variable) == 0x000018, "Member 'VoidModInstance_C_InitializeVoidMod::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_InitializeVoidMod, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'VoidModInstance_C_InitializeVoidMod::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_InitializeVoidMod, CallFunc_Get_Config_Variable_Value) == 0x000020, "Member 'VoidModInstance_C_InitializeVoidMod::CallFunc_Get_Config_Variable_Value' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_InitializeVoidMod, CallFunc_Get_Config_Variable_Exists) == 0x000030, "Member 'VoidModInstance_C_InitializeVoidMod::CallFunc_Get_Config_Variable_Exists' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_InitializeVoidMod, CallFunc_Conv_StringToInt_ReturnValue) == 0x000034, "Member 'VoidModInstance_C_InitializeVoidMod::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_InitializeVoidMod, CallFunc_Create_ReturnValue) == 0x000038, "Member 'VoidModInstance_C_InitializeVoidMod::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_InitializeVoidMod, CallFunc_Conv_IntToBool_ReturnValue) == 0x000040, "Member 'VoidModInstance_C_InitializeVoidMod::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_InitializeVoidMod, CallFunc_Get_Config_Variable_Value_1) == 0x000048, "Member 'VoidModInstance_C_InitializeVoidMod::CallFunc_Get_Config_Variable_Value_1' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_InitializeVoidMod, CallFunc_Get_Config_Variable_Exists_1) == 0x000058, "Member 'VoidModInstance_C_InitializeVoidMod::CallFunc_Get_Config_Variable_Exists_1' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_InitializeVoidMod, CallFunc_Create_ReturnValue_1) == 0x000060, "Member 'VoidModInstance_C_InitializeVoidMod::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_InitializeVoidMod, CallFunc_Conv_StringToInt_ReturnValue_1) == 0x000068, "Member 'VoidModInstance_C_InitializeVoidMod::CallFunc_Conv_StringToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_InitializeVoidMod, CallFunc_Conv_IntToBool_ReturnValue_1) == 0x00006C, "Member 'VoidModInstance_C_InitializeVoidMod::CallFunc_Conv_IntToBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_InitializeVoidMod, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000070, "Member 'VoidModInstance_C_InitializeVoidMod::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_InitializeVoidMod, CallFunc_Contains_ReturnValue) == 0x000080, "Member 'VoidModInstance_C_InitializeVoidMod::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_InitializeVoidMod, CallFunc_Contains_ReturnValue_1) == 0x000081, "Member 'VoidModInstance_C_InitializeVoidMod::CallFunc_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_InitializeVoidMod, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'VoidModInstance_C_InitializeVoidMod::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_InitializeVoidMod, CallFunc_GetAllActorsOfClass_OutActors) == 0x000088, "Member 'VoidModInstance_C_InitializeVoidMod::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_InitializeVoidMod, CallFunc_Array_Get_Item) == 0x000098, "Member 'VoidModInstance_C_InitializeVoidMod::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_InitializeVoidMod, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'VoidModInstance_C_InitializeVoidMod::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_InitializeVoidMod, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'VoidModInstance_C_InitializeVoidMod::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_InitializeVoidMod, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'VoidModInstance_C_InitializeVoidMod::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function VoidModInstance.VoidModInstance_C.InpActEvt_Tilde_K2Node_InputKeyEvent_4
// 0x0018 (0x0018 - 0x0000)
struct VoidModInstance_C_InpActEvt_Tilde_K2Node_InputKeyEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(VoidModInstance_C_InpActEvt_Tilde_K2Node_InputKeyEvent_4) == 0x000008, "Wrong alignment on VoidModInstance_C_InpActEvt_Tilde_K2Node_InputKeyEvent_4");
static_assert(sizeof(VoidModInstance_C_InpActEvt_Tilde_K2Node_InputKeyEvent_4) == 0x000018, "Wrong size on VoidModInstance_C_InpActEvt_Tilde_K2Node_InputKeyEvent_4");
static_assert(offsetof(VoidModInstance_C_InpActEvt_Tilde_K2Node_InputKeyEvent_4, Key) == 0x000000, "Member 'VoidModInstance_C_InpActEvt_Tilde_K2Node_InputKeyEvent_4::Key' has a wrong offset!");

// Function VoidModInstance.VoidModInstance_C.InpActEvt_Tilde_K2Node_InputKeyEvent_3
// 0x0018 (0x0018 - 0x0000)
struct VoidModInstance_C_InpActEvt_Tilde_K2Node_InputKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(VoidModInstance_C_InpActEvt_Tilde_K2Node_InputKeyEvent_3) == 0x000008, "Wrong alignment on VoidModInstance_C_InpActEvt_Tilde_K2Node_InputKeyEvent_3");
static_assert(sizeof(VoidModInstance_C_InpActEvt_Tilde_K2Node_InputKeyEvent_3) == 0x000018, "Wrong size on VoidModInstance_C_InpActEvt_Tilde_K2Node_InputKeyEvent_3");
static_assert(offsetof(VoidModInstance_C_InpActEvt_Tilde_K2Node_InputKeyEvent_3, Key) == 0x000000, "Member 'VoidModInstance_C_InpActEvt_Tilde_K2Node_InputKeyEvent_3::Key' has a wrong offset!");

// Function VoidModInstance.VoidModInstance_C.InpActEvt_F7_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct VoidModInstance_C_InpActEvt_F7_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(VoidModInstance_C_InpActEvt_F7_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on VoidModInstance_C_InpActEvt_F7_K2Node_InputKeyEvent_2");
static_assert(sizeof(VoidModInstance_C_InpActEvt_F7_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on VoidModInstance_C_InpActEvt_F7_K2Node_InputKeyEvent_2");
static_assert(offsetof(VoidModInstance_C_InpActEvt_F7_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'VoidModInstance_C_InpActEvt_F7_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function VoidModInstance.VoidModInstance_C.InpActEvt_F8_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct VoidModInstance_C_InpActEvt_F8_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(VoidModInstance_C_InpActEvt_F8_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on VoidModInstance_C_InpActEvt_F8_K2Node_InputKeyEvent_1");
static_assert(sizeof(VoidModInstance_C_InpActEvt_F8_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on VoidModInstance_C_InpActEvt_F8_K2Node_InputKeyEvent_1");
static_assert(offsetof(VoidModInstance_C_InpActEvt_F8_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'VoidModInstance_C_InpActEvt_F8_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function VoidModInstance.VoidModInstance_C.InpActEvt_F9_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct VoidModInstance_C_InpActEvt_F9_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(VoidModInstance_C_InpActEvt_F9_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on VoidModInstance_C_InpActEvt_F9_K2Node_InputKeyEvent_0");
static_assert(sizeof(VoidModInstance_C_InpActEvt_F9_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on VoidModInstance_C_InpActEvt_F9_K2Node_InputKeyEvent_0");
static_assert(offsetof(VoidModInstance_C_InpActEvt_F9_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'VoidModInstance_C_InpActEvt_F9_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function VoidModInstance.VoidModInstance_C.HandleEvents
// 0x0004 (0x0004 - 0x0000)
struct VoidModInstance_C_HandleEvents final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VoidModInstance_C_HandleEvents) == 0x000004, "Wrong alignment on VoidModInstance_C_HandleEvents");
static_assert(sizeof(VoidModInstance_C_HandleEvents) == 0x000004, "Wrong size on VoidModInstance_C_HandleEvents");
static_assert(offsetof(VoidModInstance_C_HandleEvents, DeltaSeconds) == 0x000000, "Member 'VoidModInstance_C_HandleEvents::DeltaSeconds' has a wrong offset!");

// Function VoidModInstance.VoidModInstance_C.DeferModCount
// 0x0008 (0x0008 - 0x0000)
struct VoidModInstance_C_DeferModCount final
{
public:
	bool                                          ShowHint;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Delay;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VoidModInstance_C_DeferModCount) == 0x000004, "Wrong alignment on VoidModInstance_C_DeferModCount");
static_assert(sizeof(VoidModInstance_C_DeferModCount) == 0x000008, "Wrong size on VoidModInstance_C_DeferModCount");
static_assert(offsetof(VoidModInstance_C_DeferModCount, ShowHint) == 0x000000, "Member 'VoidModInstance_C_DeferModCount::ShowHint' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_DeferModCount, Delay) == 0x000004, "Member 'VoidModInstance_C_DeferModCount::Delay' has a wrong offset!");

// Function VoidModInstance.VoidModInstance_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct VoidModInstance_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VoidModInstance_C_ReceiveTick) == 0x000004, "Wrong alignment on VoidModInstance_C_ReceiveTick");
static_assert(sizeof(VoidModInstance_C_ReceiveTick) == 0x000004, "Wrong size on VoidModInstance_C_ReceiveTick");
static_assert(offsetof(VoidModInstance_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'VoidModInstance_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function VoidModInstance.VoidModInstance_C.ExecuteUbergraph_VoidModInstance
// 0x03A0 (0x03A0 - 0x0000)
struct VoidModInstance_C_ExecuteUbergraph_VoidModInstance final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIngameTime_Day;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIngameTime_Hour;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIngameTime_Minute;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_VoidModDebugEnabled__Enabled;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_AppendMultiple_ReturnValue;               // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_DeltaSeconds;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_AppendMultiple_ReturnValue_1;             // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_AppendMultiple_ReturnValue_2;             // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_AppendMultiple_ReturnValue_3;             // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_AppendMultiple_ReturnValue_4;             // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_AppendMultiple_ReturnValue_5;             // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_AppendMultiple_ReturnValue_6;             // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_AppendMultiple_ReturnValue_7;             // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_AppendMultiple_ReturnValue_8;             // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInst_C*                            CallFunc_getMainGameInstance_AsGame_Inst;          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartsWith_ReturnValue;                   // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13A[0x6];                                      // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIngameTime_Day_1;                      // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIngameTime_Hour_1;                     // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIngameTime_Minute_1;                   // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIngameTime_Day_2;                      // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIngameTime_Hour_2;                     // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIngameTime_Minute_2;                   // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVoidMod_CustomEvent                   CallFunc_Array_Get_Item;                           // 0x0170(0x0060)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x01F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsOfClass_OutActors;            // 0x01F8(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_212[0x6];                                      // 0x0212(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0218(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0238(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x0250(0x0018)(HasGetValueTypeHash)
	class UUmg_menu_C*                            CallFunc_GetFirstWidgetOfClass_ReturnValue;        // 0x0268(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable;                              // 0x0270(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28A[0x6];                                      // 0x028A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_3;                        // 0x0290(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_4;                        // 0x02A8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsGamePaused_ReturnValue;                 // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0x3];                                      // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ShowHint;                       // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Delay;                          // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCycleTimescale_TimeScale;              // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCycleTimescale_Output;                 // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCycleTimescale_Output_1;               // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E4[0x4];                                      // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x02E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_2;         // 0x02F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0308(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0318(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0328(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0340(0x0018)()
	bool                                          CallFunc_VoidModDebugEnabled__Enabled_1;           // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359[0x3];                                      // 0x0359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUmg_quicksave_C*                       CallFunc_GetFirstWidgetOfClass_ReturnValue_1;      // 0x0368(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_372[0x6];                                      // 0x0372(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInst_C*                            CallFunc_getMainGameInstance_AsGame_Inst_1;        // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_AppendMultiple_ReturnValue_9;             // 0x0380(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveModGameData_Success;                  // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance) == 0x000010, "Wrong alignment on VoidModInstance_C_ExecuteUbergraph_VoidModInstance");
static_assert(sizeof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance) == 0x0003A0, "Wrong size on VoidModInstance_C_ExecuteUbergraph_VoidModInstance");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, EntryPoint) == 0x000000, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::EntryPoint' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_GetIngameTime_Day) == 0x000004, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_GetIngameTime_Day' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_GetIngameTime_Hour) == 0x000008, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_GetIngameTime_Hour' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_GetIngameTime_Minute) == 0x00000C, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_GetIngameTime_Minute' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_FFloor_ReturnValue) == 0x000010, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_Conv_IntToString_ReturnValue) == 0x000018, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000028, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000038, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_VoidModDebugEnabled__Enabled) == 0x000048, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_VoidModDebugEnabled__Enabled' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000050, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_AppendMultiple_ReturnValue) == 0x000060, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_AppendMultiple_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_Greater_IntInt_ReturnValue) == 0x000070, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, K2Node_CustomEvent_DeltaSeconds) == 0x000074, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::K2Node_CustomEvent_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_GetPlayerController_ReturnValue) == 0x000078, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_Conv_FloatToString_ReturnValue) == 0x000080, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_AppendMultiple_ReturnValue_1) == 0x000090, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_AppendMultiple_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000A0, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_AppendMultiple_ReturnValue_2) == 0x0000A8, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_AppendMultiple_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_AppendMultiple_ReturnValue_3) == 0x0000B8, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_AppendMultiple_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_AppendMultiple_ReturnValue_4) == 0x0000C8, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_AppendMultiple_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_AppendMultiple_ReturnValue_5) == 0x0000D8, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_AppendMultiple_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_AppendMultiple_ReturnValue_6) == 0x0000E8, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_AppendMultiple_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_IsValid_ReturnValue) == 0x0000F8, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_AppendMultiple_ReturnValue_7) == 0x000100, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_AppendMultiple_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, Temp_int_Array_Index_Variable) == 0x000110, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_AppendMultiple_ReturnValue_8) == 0x000118, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_AppendMultiple_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_BooleanAND_ReturnValue) == 0x000128, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_getMainGameInstance_AsGame_Inst) == 0x000130, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_getMainGameInstance_AsGame_Inst' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_IsValid_ReturnValue_1) == 0x000138, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_StartsWith_ReturnValue) == 0x000139, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_StartsWith_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_GetPlayerController_ReturnValue_1) == 0x000140, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, Temp_int_Loop_Counter_Variable) == 0x000148, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_IsValid_ReturnValue_2) == 0x00014C, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_Add_IntInt_ReturnValue) == 0x000150, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_GetIngameTime_Day_1) == 0x000154, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_GetIngameTime_Day_1' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_GetIngameTime_Hour_1) == 0x000158, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_GetIngameTime_Hour_1' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_GetIngameTime_Minute_1) == 0x00015C, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_GetIngameTime_Minute_1' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_GetIngameTime_Day_2) == 0x000160, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_GetIngameTime_Day_2' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_GetIngameTime_Hour_2) == 0x000164, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_GetIngameTime_Hour_2' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_GetIngameTime_Minute_2) == 0x000168, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_GetIngameTime_Minute_2' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_Add_FloatFloat_ReturnValue) == 0x00016C, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_Array_Get_Item) == 0x000170, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_Array_Length_ReturnValue) == 0x0001D0, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0001D8, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_Less_IntInt_ReturnValue) == 0x0001E0, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001E8, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_Not_PreBool_ReturnValue) == 0x0001F0, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001F1, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0001F2, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0001F3, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_BooleanAND_ReturnValue_1) == 0x0001F4, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_GetAllActorsOfClass_OutActors) == 0x0001F8, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_BooleanAND_ReturnValue_2) == 0x000208, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_Array_Length_ReturnValue_1) == 0x00020C, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_BooleanAND_ReturnValue_3) == 0x000210, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_Less_IntInt_ReturnValue_1) == 0x000211, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, K2Node_InputKeyEvent_Key) == 0x000218, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_BooleanAND_ReturnValue_4) == 0x000230, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, K2Node_InputKeyEvent_Key_1) == 0x000238, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, K2Node_InputKeyEvent_Key_2) == 0x000250, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_GetFirstWidgetOfClass_ReturnValue) == 0x000268, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_GetFirstWidgetOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, Temp_struct_Variable) == 0x000270, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_IsVisible_ReturnValue) == 0x000288, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_IsValid_ReturnValue_3) == 0x000289, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, K2Node_InputKeyEvent_Key_3) == 0x000290, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::K2Node_InputKeyEvent_Key_3' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, K2Node_InputKeyEvent_Key_4) == 0x0002A8, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::K2Node_InputKeyEvent_Key_4' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_IsGamePaused_ReturnValue) == 0x0002C0, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_IsGamePaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0002C4, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, K2Node_CustomEvent_ShowHint) == 0x0002C8, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::K2Node_CustomEvent_ShowHint' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, K2Node_CustomEvent_Delay) == 0x0002CC, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::K2Node_CustomEvent_Delay' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_GetCycleTimescale_TimeScale) == 0x0002D0, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_GetCycleTimescale_TimeScale' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0002D4, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0002D8, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_SetCycleTimescale_Output) == 0x0002DC, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_SetCycleTimescale_Output' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_SetCycleTimescale_Output_1) == 0x0002E0, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_SetCycleTimescale_Output_1' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x0002E8, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_Conv_FloatToString_ReturnValue_2) == 0x0002F8, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_Conv_FloatToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_Concat_StrStr_ReturnValue) == 0x000308, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000318, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_Conv_StringToText_ReturnValue) == 0x000328, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000340, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_VoidModDebugEnabled__Enabled_1) == 0x000358, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_VoidModDebugEnabled__Enabled_1' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, K2Node_Event_DeltaSeconds) == 0x00035C, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_Not_PreBool_ReturnValue_1) == 0x000360, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_GetFirstWidgetOfClass_ReturnValue_1) == 0x000368, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_GetFirstWidgetOfClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000370, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_BooleanAND_ReturnValue_5) == 0x000371, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_getMainGameInstance_AsGame_Inst_1) == 0x000378, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_getMainGameInstance_AsGame_Inst_1' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_AppendMultiple_ReturnValue_9) == 0x000380, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_AppendMultiple_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_ExecuteUbergraph_VoidModInstance, CallFunc_SaveModGameData_Success) == 0x000390, "Member 'VoidModInstance_C_ExecuteUbergraph_VoidModInstance::CallFunc_SaveModGameData_Success' has a wrong offset!");

// Function VoidModInstance.VoidModInstance_C.OnTerminalCommand__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct VoidModInstance_C_OnTerminalCommand__DelegateSignature final
{
public:
	class FString                                 Command;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Params_0;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(VoidModInstance_C_OnTerminalCommand__DelegateSignature) == 0x000008, "Wrong alignment on VoidModInstance_C_OnTerminalCommand__DelegateSignature");
static_assert(sizeof(VoidModInstance_C_OnTerminalCommand__DelegateSignature) == 0x000020, "Wrong size on VoidModInstance_C_OnTerminalCommand__DelegateSignature");
static_assert(offsetof(VoidModInstance_C_OnTerminalCommand__DelegateSignature, Command) == 0x000000, "Member 'VoidModInstance_C_OnTerminalCommand__DelegateSignature::Command' has a wrong offset!");
static_assert(offsetof(VoidModInstance_C_OnTerminalCommand__DelegateSignature, Params_0) == 0x000010, "Member 'VoidModInstance_C_OnTerminalCommand__DelegateSignature::Params_0' has a wrong offset!");

}

