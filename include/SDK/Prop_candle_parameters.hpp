#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_candle

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function prop_candle.prop_candle_C.ExecuteUbergraph_prop_candle
// 0x0100 (0x0100 - 0x0000)
struct Prop_candle_C_ExecuteUbergraph_prop_candle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_1;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue;                // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACandle_C*                              CallFunc_FinishSpawningActor_ReturnValue;          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_candle_C_ExecuteUbergraph_prop_candle) == 0x000010, "Wrong alignment on Prop_candle_C_ExecuteUbergraph_prop_candle");
static_assert(sizeof(Prop_candle_C_ExecuteUbergraph_prop_candle) == 0x000100, "Wrong size on Prop_candle_C_ExecuteUbergraph_prop_candle");
static_assert(offsetof(Prop_candle_C_ExecuteUbergraph_prop_candle, EntryPoint) == 0x000000, "Member 'Prop_candle_C_ExecuteUbergraph_prop_candle::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_ExecuteUbergraph_prop_candle, Temp_int_Variable) == 0x000004, "Member 'Prop_candle_C_ExecuteUbergraph_prop_candle::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_ExecuteUbergraph_prop_candle, CallFunc_Percent_IntInt_ReturnValue) == 0x000008, "Member 'Prop_candle_C_ExecuteUbergraph_prop_candle::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_ExecuteUbergraph_prop_candle, K2Node_Event_player_1) == 0x000010, "Member 'Prop_candle_C_ExecuteUbergraph_prop_candle::K2Node_Event_player_1' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_ExecuteUbergraph_prop_candle, CallFunc_GetActorForwardVector_ReturnValue) == 0x000018, "Member 'Prop_candle_C_ExecuteUbergraph_prop_candle::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_ExecuteUbergraph_prop_candle, CallFunc_BreakHitResult_bBlockingHit) == 0x000024, "Member 'Prop_candle_C_ExecuteUbergraph_prop_candle::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_ExecuteUbergraph_prop_candle, CallFunc_BreakHitResult_bInitialOverlap) == 0x000025, "Member 'Prop_candle_C_ExecuteUbergraph_prop_candle::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_ExecuteUbergraph_prop_candle, CallFunc_BreakHitResult_Time) == 0x000028, "Member 'Prop_candle_C_ExecuteUbergraph_prop_candle::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_ExecuteUbergraph_prop_candle, CallFunc_BreakHitResult_Distance) == 0x00002C, "Member 'Prop_candle_C_ExecuteUbergraph_prop_candle::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_ExecuteUbergraph_prop_candle, CallFunc_BreakHitResult_Location) == 0x000030, "Member 'Prop_candle_C_ExecuteUbergraph_prop_candle::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_ExecuteUbergraph_prop_candle, CallFunc_BreakHitResult_ImpactPoint) == 0x00003C, "Member 'Prop_candle_C_ExecuteUbergraph_prop_candle::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_ExecuteUbergraph_prop_candle, CallFunc_BreakHitResult_Normal) == 0x000048, "Member 'Prop_candle_C_ExecuteUbergraph_prop_candle::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_ExecuteUbergraph_prop_candle, CallFunc_BreakHitResult_ImpactNormal) == 0x000054, "Member 'Prop_candle_C_ExecuteUbergraph_prop_candle::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_ExecuteUbergraph_prop_candle, CallFunc_BreakHitResult_PhysMat) == 0x000060, "Member 'Prop_candle_C_ExecuteUbergraph_prop_candle::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_ExecuteUbergraph_prop_candle, CallFunc_BreakHitResult_HitActor) == 0x000068, "Member 'Prop_candle_C_ExecuteUbergraph_prop_candle::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_ExecuteUbergraph_prop_candle, CallFunc_BreakHitResult_HitComponent) == 0x000070, "Member 'Prop_candle_C_ExecuteUbergraph_prop_candle::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_ExecuteUbergraph_prop_candle, CallFunc_BreakHitResult_HitBoneName) == 0x000078, "Member 'Prop_candle_C_ExecuteUbergraph_prop_candle::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_ExecuteUbergraph_prop_candle, CallFunc_BreakHitResult_HitItem) == 0x000080, "Member 'Prop_candle_C_ExecuteUbergraph_prop_candle::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_ExecuteUbergraph_prop_candle, CallFunc_BreakHitResult_ElementIndex) == 0x000084, "Member 'Prop_candle_C_ExecuteUbergraph_prop_candle::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_ExecuteUbergraph_prop_candle, CallFunc_BreakHitResult_FaceIndex) == 0x000088, "Member 'Prop_candle_C_ExecuteUbergraph_prop_candle::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_ExecuteUbergraph_prop_candle, CallFunc_BreakHitResult_TraceStart) == 0x00008C, "Member 'Prop_candle_C_ExecuteUbergraph_prop_candle::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_ExecuteUbergraph_prop_candle, CallFunc_BreakHitResult_TraceEnd) == 0x000098, "Member 'Prop_candle_C_ExecuteUbergraph_prop_candle::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_ExecuteUbergraph_prop_candle, CallFunc_MakeRotFromZX_ReturnValue) == 0x0000A4, "Member 'Prop_candle_C_ExecuteUbergraph_prop_candle::CallFunc_MakeRotFromZX_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_ExecuteUbergraph_prop_candle, CallFunc_MakeTransform_ReturnValue) == 0x0000B0, "Member 'Prop_candle_C_ExecuteUbergraph_prop_candle::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_ExecuteUbergraph_prop_candle, K2Node_Event_player) == 0x0000E0, "Member 'Prop_candle_C_ExecuteUbergraph_prop_candle::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_ExecuteUbergraph_prop_candle, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000E8, "Member 'Prop_candle_C_ExecuteUbergraph_prop_candle::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_ExecuteUbergraph_prop_candle, CallFunc_Add_IntInt_ReturnValue) == 0x0000F0, "Member 'Prop_candle_C_ExecuteUbergraph_prop_candle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_ExecuteUbergraph_prop_candle, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000F8, "Member 'Prop_candle_C_ExecuteUbergraph_prop_candle::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function prop_candle.prop_candle_C.SetMesh
// 0x0048 (0x0048 - 0x0000)
struct Prop_candle_C_SetMesh final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_5;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_candle_C_SetMesh) == 0x000008, "Wrong alignment on Prop_candle_C_SetMesh");
static_assert(sizeof(Prop_candle_C_SetMesh) == 0x000048, "Wrong size on Prop_candle_C_SetMesh");
static_assert(offsetof(Prop_candle_C_SetMesh, Temp_int_Variable) == 0x000000, "Member 'Prop_candle_C_SetMesh::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_SetMesh, Temp_object_Variable) == 0x000008, "Member 'Prop_candle_C_SetMesh::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_SetMesh, Temp_object_Variable_1) == 0x000010, "Member 'Prop_candle_C_SetMesh::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_SetMesh, Temp_object_Variable_2) == 0x000018, "Member 'Prop_candle_C_SetMesh::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_SetMesh, Temp_object_Variable_3) == 0x000020, "Member 'Prop_candle_C_SetMesh::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_SetMesh, Temp_object_Variable_4) == 0x000028, "Member 'Prop_candle_C_SetMesh::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_SetMesh, Temp_object_Variable_5) == 0x000030, "Member 'Prop_candle_C_SetMesh::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_SetMesh, K2Node_Select_Default) == 0x000038, "Member 'Prop_candle_C_SetMesh::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Prop_candle_C_SetMesh, CallFunc_SetStaticMesh_ReturnValue) == 0x000040, "Member 'Prop_candle_C_SetMesh::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function prop_candle.prop_candle_C.playerHandUse_RMB
// 0x0008 (0x0008 - 0x0000)
struct Prop_candle_C_PlayerHandUse_RMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_candle_C_PlayerHandUse_RMB) == 0x000008, "Wrong alignment on Prop_candle_C_PlayerHandUse_RMB");
static_assert(sizeof(Prop_candle_C_PlayerHandUse_RMB) == 0x000008, "Wrong size on Prop_candle_C_PlayerHandUse_RMB");
static_assert(offsetof(Prop_candle_C_PlayerHandUse_RMB, Player) == 0x000000, "Member 'Prop_candle_C_PlayerHandUse_RMB::Player' has a wrong offset!");

// Function prop_candle.prop_candle_C.playerHandUse_LMB
// 0x0008 (0x0008 - 0x0000)
struct Prop_candle_C_PlayerHandUse_LMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_candle_C_PlayerHandUse_LMB) == 0x000008, "Wrong alignment on Prop_candle_C_PlayerHandUse_LMB");
static_assert(sizeof(Prop_candle_C_PlayerHandUse_LMB) == 0x000008, "Wrong size on Prop_candle_C_PlayerHandUse_LMB");
static_assert(offsetof(Prop_candle_C_PlayerHandUse_LMB, Player) == 0x000000, "Member 'Prop_candle_C_PlayerHandUse_LMB::Player' has a wrong offset!");

}

