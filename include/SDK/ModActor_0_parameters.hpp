#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ModActor

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "VoidMod_CustomEvent_structs.hpp"
#include "VoidMod_CustomActor_structs.hpp"


namespace SDK::Params
{

// Function ModActor.ModActor_C.SetPlayerPos
// 0x0060 (0x0060 - 0x0000)
struct ModActor_C_SetPlayerPos final
{
public:
	int32                                         PlayerID;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Pos;                                               // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FRotator                               Rot;                                               // 0x0040(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Success;                                           // 0x004C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMultiplayerCharacter_C*                CallFunc_Map_Find_Value;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ModActor_C_SetPlayerPos) == 0x000010, "Wrong alignment on ModActor_C_SetPlayerPos");
static_assert(sizeof(ModActor_C_SetPlayerPos) == 0x000060, "Wrong size on ModActor_C_SetPlayerPos");
static_assert(offsetof(ModActor_C_SetPlayerPos, PlayerID) == 0x000000, "Member 'ModActor_C_SetPlayerPos::PlayerID' has a wrong offset!");
static_assert(offsetof(ModActor_C_SetPlayerPos, Pos) == 0x000010, "Member 'ModActor_C_SetPlayerPos::Pos' has a wrong offset!");
static_assert(offsetof(ModActor_C_SetPlayerPos, Rot) == 0x000040, "Member 'ModActor_C_SetPlayerPos::Rot' has a wrong offset!");
static_assert(offsetof(ModActor_C_SetPlayerPos, Success) == 0x00004C, "Member 'ModActor_C_SetPlayerPos::Success' has a wrong offset!");
static_assert(offsetof(ModActor_C_SetPlayerPos, CallFunc_Map_Find_Value) == 0x000050, "Member 'ModActor_C_SetPlayerPos::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(ModActor_C_SetPlayerPos, CallFunc_Map_Find_ReturnValue) == 0x000058, "Member 'ModActor_C_SetPlayerPos::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function ModActor.ModActor_C.RemovePlayer
// 0x0018 (0x0018 - 0x0000)
struct ModActor_C_RemovePlayer final
{
public:
	int32                                         PlayerID;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMultiplayerCharacter_C*                CallFunc_Map_Find_Value;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ModActor_C_RemovePlayer) == 0x000008, "Wrong alignment on ModActor_C_RemovePlayer");
static_assert(sizeof(ModActor_C_RemovePlayer) == 0x000018, "Wrong size on ModActor_C_RemovePlayer");
static_assert(offsetof(ModActor_C_RemovePlayer, PlayerID) == 0x000000, "Member 'ModActor_C_RemovePlayer::PlayerID' has a wrong offset!");
static_assert(offsetof(ModActor_C_RemovePlayer, Success) == 0x000004, "Member 'ModActor_C_RemovePlayer::Success' has a wrong offset!");
static_assert(offsetof(ModActor_C_RemovePlayer, CallFunc_Map_Find_Value) == 0x000008, "Member 'ModActor_C_RemovePlayer::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(ModActor_C_RemovePlayer, CallFunc_Map_Find_ReturnValue) == 0x000010, "Member 'ModActor_C_RemovePlayer::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModActor_C_RemovePlayer, CallFunc_Map_Remove_ReturnValue) == 0x000011, "Member 'ModActor_C_RemovePlayer::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");

// Function ModActor.ModActor_C.SpawnPlayer
// 0x0080 (0x0080 - 0x0000)
struct ModActor_C_SpawnPlayer final
{
public:
	class FString                                 PlayerName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             Transform;                                         // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	int32                                         NewPlayerId;                                       // 0x0040(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMultiplayerCharacter_C*                CallFunc_FinishSpawningActor_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0068(0x0018)()
};
static_assert(alignof(ModActor_C_SpawnPlayer) == 0x000010, "Wrong alignment on ModActor_C_SpawnPlayer");
static_assert(sizeof(ModActor_C_SpawnPlayer) == 0x000080, "Wrong size on ModActor_C_SpawnPlayer");
static_assert(offsetof(ModActor_C_SpawnPlayer, PlayerName) == 0x000000, "Member 'ModActor_C_SpawnPlayer::PlayerName' has a wrong offset!");
static_assert(offsetof(ModActor_C_SpawnPlayer, Transform) == 0x000010, "Member 'ModActor_C_SpawnPlayer::Transform' has a wrong offset!");
static_assert(offsetof(ModActor_C_SpawnPlayer, NewPlayerId) == 0x000040, "Member 'ModActor_C_SpawnPlayer::NewPlayerId' has a wrong offset!");
static_assert(offsetof(ModActor_C_SpawnPlayer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000048, "Member 'ModActor_C_SpawnPlayer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModActor_C_SpawnPlayer, CallFunc_Map_Length_ReturnValue) == 0x000050, "Member 'ModActor_C_SpawnPlayer::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModActor_C_SpawnPlayer, CallFunc_FinishSpawningActor_ReturnValue) == 0x000058, "Member 'ModActor_C_SpawnPlayer::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModActor_C_SpawnPlayer, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'ModActor_C_SpawnPlayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModActor_C_SpawnPlayer, CallFunc_Conv_StringToText_ReturnValue) == 0x000068, "Member 'ModActor_C_SpawnPlayer::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function ModActor.ModActor_C.Lua_ModInit
// 0x0028 (0x0028 - 0x0000)
struct ModActor_C_Lua_ModInit final
{
public:
	class FString                                 ModName;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class AddendumActor::AddendumActor_C*         ModActor;                                          // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ModFullName;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(ModActor_C_Lua_ModInit) == 0x000008, "Wrong alignment on ModActor_C_Lua_ModInit");
static_assert(sizeof(ModActor_C_Lua_ModInit) == 0x000028, "Wrong size on ModActor_C_Lua_ModInit");
static_assert(offsetof(ModActor_C_Lua_ModInit, ModName) == 0x000000, "Member 'ModActor_C_Lua_ModInit::ModName' has a wrong offset!");
static_assert(offsetof(ModActor_C_Lua_ModInit, ModActor) == 0x000010, "Member 'ModActor_C_Lua_ModInit::ModActor' has a wrong offset!");
static_assert(offsetof(ModActor_C_Lua_ModInit, ModFullName) == 0x000018, "Member 'ModActor_C_Lua_ModInit::ModFullName' has a wrong offset!");

// Function ModActor.ModActor_C.Lua_RegisterHook
// 0x0018 (0x0018 - 0x0000)
struct ModActor_C_Lua_RegisterHook final
{
public:
	class FString                                 FunctionName;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 FromActor;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ModActor_C_Lua_RegisterHook) == 0x000008, "Wrong alignment on ModActor_C_Lua_RegisterHook");
static_assert(sizeof(ModActor_C_Lua_RegisterHook) == 0x000018, "Wrong size on ModActor_C_Lua_RegisterHook");
static_assert(offsetof(ModActor_C_Lua_RegisterHook, FunctionName) == 0x000000, "Member 'ModActor_C_Lua_RegisterHook::FunctionName' has a wrong offset!");
static_assert(offsetof(ModActor_C_Lua_RegisterHook, FromActor) == 0x000010, "Member 'ModActor_C_Lua_RegisterHook::FromActor' has a wrong offset!");

// Function ModActor.ModActor_C.InitializeMod
// 0x0040 (0x0040 - 0x0000)
struct ModActor_C_InitializeMod final
{
public:
	class ModActor::AModActor_C*                  CallFunc_Lua_ModInit_ModActor;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Lua_ModInit_ModFullName;                  // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UMultiVoidWidget_C*                     CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVoidMod_CustomEvent>           K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm)
	TArray<struct FVoidMod_CustomActor>           K2Node_MakeArray_Array_1;                          // 0x0030(0x0010)(ReferenceParm)
};
static_assert(alignof(ModActor_C_InitializeMod) == 0x000008, "Wrong alignment on ModActor_C_InitializeMod");
static_assert(sizeof(ModActor_C_InitializeMod) == 0x000040, "Wrong size on ModActor_C_InitializeMod");
static_assert(offsetof(ModActor_C_InitializeMod, CallFunc_Lua_ModInit_ModActor) == 0x000000, "Member 'ModActor_C_InitializeMod::CallFunc_Lua_ModInit_ModActor' has a wrong offset!");
static_assert(offsetof(ModActor_C_InitializeMod, CallFunc_Lua_ModInit_ModFullName) == 0x000008, "Member 'ModActor_C_InitializeMod::CallFunc_Lua_ModInit_ModFullName' has a wrong offset!");
static_assert(offsetof(ModActor_C_InitializeMod, CallFunc_Create_ReturnValue) == 0x000018, "Member 'ModActor_C_InitializeMod::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModActor_C_InitializeMod, K2Node_MakeArray_Array) == 0x000020, "Member 'ModActor_C_InitializeMod::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ModActor_C_InitializeMod, K2Node_MakeArray_Array_1) == 0x000030, "Member 'ModActor_C_InitializeMod::K2Node_MakeArray_Array_1' has a wrong offset!");

// Function ModActor.ModActor_C.Lua_OnHook
// 0x0018 (0x0018 - 0x0000)
struct ModActor_C_Lua_OnHook final
{
public:
	class AActor*                                 FromActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 FuncName;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(ModActor_C_Lua_OnHook) == 0x000008, "Wrong alignment on ModActor_C_Lua_OnHook");
static_assert(sizeof(ModActor_C_Lua_OnHook) == 0x000018, "Wrong size on ModActor_C_Lua_OnHook");
static_assert(offsetof(ModActor_C_Lua_OnHook, FromActor) == 0x000000, "Member 'ModActor_C_Lua_OnHook::FromActor' has a wrong offset!");
static_assert(offsetof(ModActor_C_Lua_OnHook, FuncName) == 0x000008, "Member 'ModActor_C_Lua_OnHook::FuncName' has a wrong offset!");

// Function ModActor.ModActor_C.ExecuteUbergraph_ModActor
// 0x0078 (0x0078 - 0x0000)
struct ModActor_C_ExecuteUbergraph_ModActor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_FromActor;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_FuncName;                       // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Accessor__GetNameAsString_ReturnValue;    // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0060(0x0018)()
};
static_assert(alignof(ModActor_C_ExecuteUbergraph_ModActor) == 0x000008, "Wrong alignment on ModActor_C_ExecuteUbergraph_ModActor");
static_assert(sizeof(ModActor_C_ExecuteUbergraph_ModActor) == 0x000078, "Wrong size on ModActor_C_ExecuteUbergraph_ModActor");
static_assert(offsetof(ModActor_C_ExecuteUbergraph_ModActor, EntryPoint) == 0x000000, "Member 'ModActor_C_ExecuteUbergraph_ModActor::EntryPoint' has a wrong offset!");
static_assert(offsetof(ModActor_C_ExecuteUbergraph_ModActor, K2Node_CustomEvent_FromActor) == 0x000008, "Member 'ModActor_C_ExecuteUbergraph_ModActor::K2Node_CustomEvent_FromActor' has a wrong offset!");
static_assert(offsetof(ModActor_C_ExecuteUbergraph_ModActor, K2Node_CustomEvent_FuncName) == 0x000010, "Member 'ModActor_C_ExecuteUbergraph_ModActor::K2Node_CustomEvent_FuncName' has a wrong offset!");
static_assert(offsetof(ModActor_C_ExecuteUbergraph_ModActor, CallFunc_Accessor__GetNameAsString_ReturnValue) == 0x000020, "Member 'ModActor_C_ExecuteUbergraph_ModActor::CallFunc_Accessor__GetNameAsString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModActor_C_ExecuteUbergraph_ModActor, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'ModActor_C_ExecuteUbergraph_ModActor::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModActor_C_ExecuteUbergraph_ModActor, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000040, "Member 'ModActor_C_ExecuteUbergraph_ModActor::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ModActor_C_ExecuteUbergraph_ModActor, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000050, "Member 'ModActor_C_ExecuteUbergraph_ModActor::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ModActor_C_ExecuteUbergraph_ModActor, CallFunc_Conv_StringToText_ReturnValue) == 0x000060, "Member 'ModActor_C_ExecuteUbergraph_ModActor::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

}

