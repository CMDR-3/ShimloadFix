#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VoidModInstance

#include "Basic.hpp"

#include "VoidModInstance_classes.hpp"
#include "VoidModInstance_parameters.hpp"


namespace SDK
{

// Function VoidModInstance.VoidModInstance_C.CallNewSaveFunctions
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AVoidModInstance_C::CallNewSaveFunctions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidModInstance_C", "CallNewSaveFunctions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VoidModInstance.VoidModInstance_C.HandleTerminalCommand
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// ETextCommit                             CommitMethod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AVoidModInstance_C::HandleTerminalCommand(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidModInstance_C", "HandleTerminalCommand");

	Params::VoidModInstance_C_HandleTerminalCommand Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VoidModInstance.VoidModInstance_C.CreateCustomMenu
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Layer                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AVoidModInstance_C::CreateCustomMenu(int32 Layer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidModInstance_C", "CreateCustomMenu");

	Params::VoidModInstance_C_CreateCustomMenu Parms{};

	Parms.Layer = Layer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VoidModInstance.VoidModInstance_C.UpdateLoadedModCount
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShowHint                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AVoidModInstance_C::UpdateLoadedModCount(bool ShowHint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidModInstance_C", "UpdateLoadedModCount");

	Params::VoidModInstance_C_UpdateLoadedModCount Parms{};

	Parms.ShowHint = ShowHint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VoidModInstance.VoidModInstance_C.SetDefaultConfigValues
// (Public, BlueprintCallable, BlueprintEvent)

void AVoidModInstance_C::SetDefaultConfigValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidModInstance_C", "SetDefaultConfigValues");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VoidModInstance.VoidModInstance_C.InitializeVoidMod
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AVoidModInstance_C::InitializeVoidMod()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidModInstance_C", "InitializeVoidMod");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VoidModInstance.VoidModInstance_C.InpActEvt_Tilde_K2Node_InputKeyEvent_4
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AVoidModInstance_C::InpActEvt_Tilde_K2Node_InputKeyEvent_4(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidModInstance_C", "InpActEvt_Tilde_K2Node_InputKeyEvent_4");

	Params::VoidModInstance_C_InpActEvt_Tilde_K2Node_InputKeyEvent_4 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function VoidModInstance.VoidModInstance_C.InpActEvt_Tilde_K2Node_InputKeyEvent_3
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AVoidModInstance_C::InpActEvt_Tilde_K2Node_InputKeyEvent_3(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidModInstance_C", "InpActEvt_Tilde_K2Node_InputKeyEvent_3");

	Params::VoidModInstance_C_InpActEvt_Tilde_K2Node_InputKeyEvent_3 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function VoidModInstance.VoidModInstance_C.InpActEvt_F7_K2Node_InputKeyEvent_2
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AVoidModInstance_C::InpActEvt_F7_K2Node_InputKeyEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidModInstance_C", "InpActEvt_F7_K2Node_InputKeyEvent_2");

	Params::VoidModInstance_C_InpActEvt_F7_K2Node_InputKeyEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function VoidModInstance.VoidModInstance_C.InpActEvt_F8_K2Node_InputKeyEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AVoidModInstance_C::InpActEvt_F8_K2Node_InputKeyEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidModInstance_C", "InpActEvt_F8_K2Node_InputKeyEvent_1");

	Params::VoidModInstance_C_InpActEvt_F8_K2Node_InputKeyEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function VoidModInstance.VoidModInstance_C.InpActEvt_F9_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AVoidModInstance_C::InpActEvt_F9_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidModInstance_C", "InpActEvt_F9_K2Node_InputKeyEvent_0");

	Params::VoidModInstance_C_InpActEvt_F9_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function VoidModInstance.VoidModInstance_C.HandleEvents
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AVoidModInstance_C::HandleEvents(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidModInstance_C", "HandleEvents");

	Params::VoidModInstance_C_HandleEvents Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VoidModInstance.VoidModInstance_C.OnGameUnpaused
// (BlueprintCallable, BlueprintEvent)

void AVoidModInstance_C::OnGameUnpaused()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidModInstance_C", "OnGameUnpaused");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VoidModInstance.VoidModInstance_C.OnGamePaused
// (BlueprintCallable, BlueprintEvent)

void AVoidModInstance_C::OnGamePaused()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidModInstance_C", "OnGamePaused");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VoidModInstance.VoidModInstance_C.DeferModCount
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShowHint                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AVoidModInstance_C::DeferModCount(bool ShowHint, float Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidModInstance_C", "DeferModCount");

	Params::VoidModInstance_C_DeferModCount Parms{};

	Parms.ShowHint = ShowHint;
	Parms.Delay = Delay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VoidModInstance.VoidModInstance_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AVoidModInstance_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidModInstance_C", "ReceiveTick");

	Params::VoidModInstance_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VoidModInstance.VoidModInstance_C.OnGameSave
// (BlueprintCallable, BlueprintEvent)

void AVoidModInstance_C::OnGameSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidModInstance_C", "OnGameSave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VoidModInstance.VoidModInstance_C.ExecuteUbergraph_VoidModInstance
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AVoidModInstance_C::ExecuteUbergraph_VoidModInstance(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidModInstance_C", "ExecuteUbergraph_VoidModInstance");

	Params::VoidModInstance_C_ExecuteUbergraph_VoidModInstance Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VoidModInstance.VoidModInstance_C.OnTerminalCommand__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Params_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AVoidModInstance_C::OnTerminalCommand__DelegateSignature(const class FString& Command, const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidModInstance_C", "OnTerminalCommand__DelegateSignature");

	Params::VoidModInstance_C_OnTerminalCommand__DelegateSignature Parms{};

	Parms.Command = std::move(Command);
	Parms.Params_0 = std::move(Params_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function VoidModInstance.VoidModInstance_C.OnConfigurationUpdated__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void AVoidModInstance_C::OnConfigurationUpdated__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidModInstance_C", "OnConfigurationUpdated__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}

}

