#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VoidMod_Base

#include "Basic.hpp"

#include "VoidMod_CustomActor_structs.hpp"
#include "VoidMod_Mod_structs.hpp"
#include "BaseRoom_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "VoidMod_CustomRoomCheck_structs.hpp"
#include "VoidMod_CustomEvent_structs.hpp"


namespace SDK::Params
{

// Function VoidMod_Base.VoidMod_Base_C.IsModLoaded
// 0x0090 (0x0090 - 0x0000)
struct VoidMod_Base_C_IsModLoaded final
{
public:
	class FString                                 Mod_Id;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Loaded;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AVoidModInstance_C*                     CallFunc_GetVoidmodInstance_Instance;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVoidMod_Mod                           CallFunc_Array_Get_Item;                           // 0x0030(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VoidMod_Base_C_IsModLoaded) == 0x000008, "Wrong alignment on VoidMod_Base_C_IsModLoaded");
static_assert(sizeof(VoidMod_Base_C_IsModLoaded) == 0x000090, "Wrong size on VoidMod_Base_C_IsModLoaded");
static_assert(offsetof(VoidMod_Base_C_IsModLoaded, Mod_Id) == 0x000000, "Member 'VoidMod_Base_C_IsModLoaded::Mod_Id' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_IsModLoaded, __WorldContext) == 0x000010, "Member 'VoidMod_Base_C_IsModLoaded::__WorldContext' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_IsModLoaded, Loaded) == 0x000018, "Member 'VoidMod_Base_C_IsModLoaded::Loaded' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_IsModLoaded, CallFunc_GetVoidmodInstance_Instance) == 0x000020, "Member 'VoidMod_Base_C_IsModLoaded::CallFunc_GetVoidmodInstance_Instance' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_IsModLoaded, Temp_int_Array_Index_Variable) == 0x000028, "Member 'VoidMod_Base_C_IsModLoaded::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_IsModLoaded, CallFunc_Array_Get_Item) == 0x000030, "Member 'VoidMod_Base_C_IsModLoaded::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_IsModLoaded, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'VoidMod_Base_C_IsModLoaded::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_IsModLoaded, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'VoidMod_Base_C_IsModLoaded::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_IsModLoaded, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000088, "Member 'VoidMod_Base_C_IsModLoaded::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_IsModLoaded, CallFunc_Less_IntInt_ReturnValue) == 0x000089, "Member 'VoidMod_Base_C_IsModLoaded::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_IsModLoaded, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'VoidMod_Base_C_IsModLoaded::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function VoidMod_Base.VoidMod_Base_C.GetPlayerStatsPure
// 0x0040 (0x0040 - 0x0000)
struct VoidMod_Base_C_GetPlayerStatsPure final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Food;                                              // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Sleep;                                             // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         battery;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Health;                                            // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Points;                                            // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CarFuel;                                           // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CarHealth;                                         // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerStats_Food;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerStats_Sleep;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerStats_Battery;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerStats_Health;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerStats_Points;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerStats_CarFuel;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerStats_CarHealth;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VoidMod_Base_C_GetPlayerStatsPure) == 0x000008, "Wrong alignment on VoidMod_Base_C_GetPlayerStatsPure");
static_assert(sizeof(VoidMod_Base_C_GetPlayerStatsPure) == 0x000040, "Wrong size on VoidMod_Base_C_GetPlayerStatsPure");
static_assert(offsetof(VoidMod_Base_C_GetPlayerStatsPure, __WorldContext) == 0x000000, "Member 'VoidMod_Base_C_GetPlayerStatsPure::__WorldContext' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetPlayerStatsPure, Food) == 0x000008, "Member 'VoidMod_Base_C_GetPlayerStatsPure::Food' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetPlayerStatsPure, Sleep) == 0x00000C, "Member 'VoidMod_Base_C_GetPlayerStatsPure::Sleep' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetPlayerStatsPure, battery) == 0x000010, "Member 'VoidMod_Base_C_GetPlayerStatsPure::battery' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetPlayerStatsPure, Health) == 0x000014, "Member 'VoidMod_Base_C_GetPlayerStatsPure::Health' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetPlayerStatsPure, Points) == 0x000018, "Member 'VoidMod_Base_C_GetPlayerStatsPure::Points' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetPlayerStatsPure, CarFuel) == 0x00001C, "Member 'VoidMod_Base_C_GetPlayerStatsPure::CarFuel' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetPlayerStatsPure, CarHealth) == 0x000020, "Member 'VoidMod_Base_C_GetPlayerStatsPure::CarHealth' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetPlayerStatsPure, CallFunc_GetPlayerStats_Food) == 0x000024, "Member 'VoidMod_Base_C_GetPlayerStatsPure::CallFunc_GetPlayerStats_Food' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetPlayerStatsPure, CallFunc_GetPlayerStats_Sleep) == 0x000028, "Member 'VoidMod_Base_C_GetPlayerStatsPure::CallFunc_GetPlayerStats_Sleep' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetPlayerStatsPure, CallFunc_GetPlayerStats_Battery) == 0x00002C, "Member 'VoidMod_Base_C_GetPlayerStatsPure::CallFunc_GetPlayerStats_Battery' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetPlayerStatsPure, CallFunc_GetPlayerStats_Health) == 0x000030, "Member 'VoidMod_Base_C_GetPlayerStatsPure::CallFunc_GetPlayerStats_Health' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetPlayerStatsPure, CallFunc_GetPlayerStats_Points) == 0x000034, "Member 'VoidMod_Base_C_GetPlayerStatsPure::CallFunc_GetPlayerStats_Points' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetPlayerStatsPure, CallFunc_GetPlayerStats_CarFuel) == 0x000038, "Member 'VoidMod_Base_C_GetPlayerStatsPure::CallFunc_GetPlayerStats_CarFuel' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetPlayerStatsPure, CallFunc_GetPlayerStats_CarHealth) == 0x00003C, "Member 'VoidMod_Base_C_GetPlayerStatsPure::CallFunc_GetPlayerStats_CarHealth' has a wrong offset!");

// Function VoidMod_Base.VoidMod_Base_C.GetRoomFromPositionPure
// 0x0020 (0x0020 - 0x0000)
struct VoidMod_Base_C_GetRoomFromPositionPure final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBaseRoom                                     Room;                                              // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBaseRoom                                     CallFunc_GetRoomFromPosition_Room;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VoidMod_Base_C_GetRoomFromPositionPure) == 0x000008, "Wrong alignment on VoidMod_Base_C_GetRoomFromPositionPure");
static_assert(sizeof(VoidMod_Base_C_GetRoomFromPositionPure) == 0x000020, "Wrong size on VoidMod_Base_C_GetRoomFromPositionPure");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPositionPure, Location) == 0x000000, "Member 'VoidMod_Base_C_GetRoomFromPositionPure::Location' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPositionPure, __WorldContext) == 0x000010, "Member 'VoidMod_Base_C_GetRoomFromPositionPure::__WorldContext' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPositionPure, Room) == 0x000018, "Member 'VoidMod_Base_C_GetRoomFromPositionPure::Room' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPositionPure, CallFunc_GetRoomFromPosition_Room) == 0x000019, "Member 'VoidMod_Base_C_GetRoomFromPositionPure::CallFunc_GetRoomFromPosition_Room' has a wrong offset!");

// Function VoidMod_Base.VoidMod_Base_C.GetVoidmodInstancePure
// 0x0020 (0x0020 - 0x0000)
struct VoidMod_Base_C_GetVoidmodInstancePure final
{
public:
	bool                                          ThrowError;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AVoidModInstance_C*                     Instance;                                          // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AVoidModInstance_C*                     CallFunc_GetVoidmodInstance_Instance;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VoidMod_Base_C_GetVoidmodInstancePure) == 0x000008, "Wrong alignment on VoidMod_Base_C_GetVoidmodInstancePure");
static_assert(sizeof(VoidMod_Base_C_GetVoidmodInstancePure) == 0x000020, "Wrong size on VoidMod_Base_C_GetVoidmodInstancePure");
static_assert(offsetof(VoidMod_Base_C_GetVoidmodInstancePure, ThrowError) == 0x000000, "Member 'VoidMod_Base_C_GetVoidmodInstancePure::ThrowError' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetVoidmodInstancePure, __WorldContext) == 0x000008, "Member 'VoidMod_Base_C_GetVoidmodInstancePure::__WorldContext' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetVoidmodInstancePure, Instance) == 0x000010, "Member 'VoidMod_Base_C_GetVoidmodInstancePure::Instance' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetVoidmodInstancePure, CallFunc_GetVoidmodInstance_Instance) == 0x000018, "Member 'VoidMod_Base_C_GetVoidmodInstancePure::CallFunc_GetVoidmodInstance_Instance' has a wrong offset!");

// Function VoidMod_Base.VoidMod_Base_C.GetIngameTimePure
// 0x0020 (0x0020 - 0x0000)
struct VoidMod_Base_C_GetIngameTimePure final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Day;                                               // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Hour;                                              // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Minute;                                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIngameTime_Day;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIngameTime_Hour;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIngameTime_Minute;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VoidMod_Base_C_GetIngameTimePure) == 0x000008, "Wrong alignment on VoidMod_Base_C_GetIngameTimePure");
static_assert(sizeof(VoidMod_Base_C_GetIngameTimePure) == 0x000020, "Wrong size on VoidMod_Base_C_GetIngameTimePure");
static_assert(offsetof(VoidMod_Base_C_GetIngameTimePure, __WorldContext) == 0x000000, "Member 'VoidMod_Base_C_GetIngameTimePure::__WorldContext' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetIngameTimePure, Day) == 0x000008, "Member 'VoidMod_Base_C_GetIngameTimePure::Day' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetIngameTimePure, Hour) == 0x00000C, "Member 'VoidMod_Base_C_GetIngameTimePure::Hour' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetIngameTimePure, Minute) == 0x000010, "Member 'VoidMod_Base_C_GetIngameTimePure::Minute' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetIngameTimePure, CallFunc_GetIngameTime_Day) == 0x000014, "Member 'VoidMod_Base_C_GetIngameTimePure::CallFunc_GetIngameTime_Day' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetIngameTimePure, CallFunc_GetIngameTime_Hour) == 0x000018, "Member 'VoidMod_Base_C_GetIngameTimePure::CallFunc_GetIngameTime_Hour' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetIngameTimePure, CallFunc_GetIngameTime_Minute) == 0x00001C, "Member 'VoidMod_Base_C_GetIngameTimePure::CallFunc_GetIngameTime_Minute' has a wrong offset!");

// Function VoidMod_Base.VoidMod_Base_C.GetCycleTimescale
// 0x0018 (0x0018 - 0x0000)
struct VoidMod_Base_C_GetCycleTimescale final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeScale;                                         // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADaynightCycle_C*                       CallFunc_GetActorOfClass_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VoidMod_Base_C_GetCycleTimescale) == 0x000008, "Wrong alignment on VoidMod_Base_C_GetCycleTimescale");
static_assert(sizeof(VoidMod_Base_C_GetCycleTimescale) == 0x000018, "Wrong size on VoidMod_Base_C_GetCycleTimescale");
static_assert(offsetof(VoidMod_Base_C_GetCycleTimescale, __WorldContext) == 0x000000, "Member 'VoidMod_Base_C_GetCycleTimescale::__WorldContext' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetCycleTimescale, TimeScale) == 0x000008, "Member 'VoidMod_Base_C_GetCycleTimescale::TimeScale' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetCycleTimescale, CallFunc_GetActorOfClass_ReturnValue) == 0x000010, "Member 'VoidMod_Base_C_GetCycleTimescale::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");

// Function VoidMod_Base.VoidMod_Base_C.SetCycleTimescale
// 0x0020 (0x0020 - 0x0000)
struct VoidMod_Base_C_SetCycleTimescale final
{
public:
	float                                         TimeScale;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Output;                                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADaynightCycle_C*                       CallFunc_GetActorOfClass_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VoidMod_Base_C_SetCycleTimescale) == 0x000008, "Wrong alignment on VoidMod_Base_C_SetCycleTimescale");
static_assert(sizeof(VoidMod_Base_C_SetCycleTimescale) == 0x000020, "Wrong size on VoidMod_Base_C_SetCycleTimescale");
static_assert(offsetof(VoidMod_Base_C_SetCycleTimescale, TimeScale) == 0x000000, "Member 'VoidMod_Base_C_SetCycleTimescale::TimeScale' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_SetCycleTimescale, __WorldContext) == 0x000008, "Member 'VoidMod_Base_C_SetCycleTimescale::__WorldContext' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_SetCycleTimescale, Output) == 0x000010, "Member 'VoidMod_Base_C_SetCycleTimescale::Output' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_SetCycleTimescale, CallFunc_GetActorOfClass_ReturnValue) == 0x000018, "Member 'VoidMod_Base_C_SetCycleTimescale::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");

// Function VoidMod_Base.VoidMod_Base_C.GetRoomFromPosition
// 0x00C0 (0x00C0 - 0x0000)
struct VoidMod_Base_C_GetRoomFromPosition final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBaseRoom                                     Room;                                              // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVoidMod_CustomRoomCheck               CallFunc_GetDataTableRowFromName_OutRow;           // 0x0058(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_1;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AE[0x2];                                       // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_4;                // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_5;                // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_2;       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VoidMod_Base_C_GetRoomFromPosition) == 0x000008, "Wrong alignment on VoidMod_Base_C_GetRoomFromPosition");
static_assert(sizeof(VoidMod_Base_C_GetRoomFromPosition) == 0x0000C0, "Wrong size on VoidMod_Base_C_GetRoomFromPosition");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, Location) == 0x000000, "Member 'VoidMod_Base_C_GetRoomFromPosition::Location' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, __WorldContext) == 0x000010, "Member 'VoidMod_Base_C_GetRoomFromPosition::__WorldContext' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, Room) == 0x000018, "Member 'VoidMod_Base_C_GetRoomFromPosition::Room' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_BreakVector_X) == 0x00001C, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_BreakVector_Y) == 0x000020, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_BreakVector_Z) == 0x000024, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, Temp_int_Array_Index_Variable) == 0x000028, "Member 'VoidMod_Base_C_GetRoomFromPosition::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'VoidMod_Base_C_GetRoomFromPosition::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000038, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_Array_Get_Item) == 0x00004C, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_GetDataTableRowFromName_OutRow) == 0x000058, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000074, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_BreakVector_X_1) == 0x000078, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_BreakVector_Y_1) == 0x00007C, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_BreakVector_Z_1) == 0x000080, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_BreakVector_X_2) == 0x000084, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_BreakVector_Y_2) == 0x000088, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_BreakVector_Z_2) == 0x00008C, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000090, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000091, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_SelectFloat_ReturnValue) == 0x000094, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_SelectFloat_ReturnValue_1) == 0x000098, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00009C, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x00009D, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_Not_PreBool_ReturnValue) == 0x00009E, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_Not_PreBool_ReturnValue_1) == 0x00009F, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_SelectFloat_ReturnValue_2) == 0x0000A0, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_SelectFloat_ReturnValue_3) == 0x0000A4, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000A8, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x0000A9, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_BooleanAND_ReturnValue) == 0x0000AA, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_BooleanAND_ReturnValue_1) == 0x0000AB, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x0000AC, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000AD, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_SelectFloat_ReturnValue_4) == 0x0000B0, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_SelectFloat_ReturnValue_5) == 0x0000B4, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_LessEqual_FloatFloat_ReturnValue_2) == 0x0000B8, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_LessEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x0000B9, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_BooleanAND_ReturnValue_2) == 0x0000BA, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_BooleanAND_ReturnValue_3) == 0x0000BB, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetRoomFromPosition, CallFunc_BooleanAND_ReturnValue_4) == 0x0000BC, "Member 'VoidMod_Base_C_GetRoomFromPosition::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");

// Function VoidMod_Base.VoidMod_Base_C.GetPlayerStats
// 0x0030 (0x0030 - 0x0000)
struct VoidMod_Base_C_GetPlayerStats final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Food;                                              // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Sleep;                                             // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         battery;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Health;                                            // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Points;                                            // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CarFuel;                                           // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CarHealth;                                         // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VoidMod_Base_C_GetPlayerStats) == 0x000008, "Wrong alignment on VoidMod_Base_C_GetPlayerStats");
static_assert(sizeof(VoidMod_Base_C_GetPlayerStats) == 0x000030, "Wrong size on VoidMod_Base_C_GetPlayerStats");
static_assert(offsetof(VoidMod_Base_C_GetPlayerStats, __WorldContext) == 0x000000, "Member 'VoidMod_Base_C_GetPlayerStats::__WorldContext' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetPlayerStats, Food) == 0x000008, "Member 'VoidMod_Base_C_GetPlayerStats::Food' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetPlayerStats, Sleep) == 0x00000C, "Member 'VoidMod_Base_C_GetPlayerStats::Sleep' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetPlayerStats, battery) == 0x000010, "Member 'VoidMod_Base_C_GetPlayerStats::battery' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetPlayerStats, Health) == 0x000014, "Member 'VoidMod_Base_C_GetPlayerStats::Health' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetPlayerStats, Points) == 0x000018, "Member 'VoidMod_Base_C_GetPlayerStats::Points' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetPlayerStats, CarFuel) == 0x00001C, "Member 'VoidMod_Base_C_GetPlayerStats::CarFuel' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetPlayerStats, CarHealth) == 0x000020, "Member 'VoidMod_Base_C_GetPlayerStats::CarHealth' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetPlayerStats, CallFunc_getSaveSlot_saveSlot) == 0x000028, "Member 'VoidMod_Base_C_GetPlayerStats::CallFunc_getSaveSlot_saveSlot' has a wrong offset!");

// Function VoidMod_Base.VoidMod_Base_C.GetIngameTime
// 0x0020 (0x0020 - 0x0000)
struct VoidMod_Base_C_GetIngameTime final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Day;                                               // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Hour;                                              // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Minute;                                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VoidMod_Base_C_GetIngameTime) == 0x000008, "Wrong alignment on VoidMod_Base_C_GetIngameTime");
static_assert(sizeof(VoidMod_Base_C_GetIngameTime) == 0x000020, "Wrong size on VoidMod_Base_C_GetIngameTime");
static_assert(offsetof(VoidMod_Base_C_GetIngameTime, __WorldContext) == 0x000000, "Member 'VoidMod_Base_C_GetIngameTime::__WorldContext' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetIngameTime, Day) == 0x000008, "Member 'VoidMod_Base_C_GetIngameTime::Day' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetIngameTime, Hour) == 0x00000C, "Member 'VoidMod_Base_C_GetIngameTime::Hour' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetIngameTime, Minute) == 0x000010, "Member 'VoidMod_Base_C_GetIngameTime::Minute' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetIngameTime, CallFunc_getSaveSlot_saveSlot) == 0x000018, "Member 'VoidMod_Base_C_GetIngameTime::CallFunc_getSaveSlot_saveSlot' has a wrong offset!");

// Function VoidMod_Base.VoidMod_Base_C.VoidModVersion
// 0x0020 (0x0020 - 0x0000)
struct VoidMod_Base_C_VoidModVersion final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 NewParam;                                          // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class AVoidModInstance_C*                     CallFunc_GetVoidmodInstance_Instance;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VoidMod_Base_C_VoidModVersion) == 0x000008, "Wrong alignment on VoidMod_Base_C_VoidModVersion");
static_assert(sizeof(VoidMod_Base_C_VoidModVersion) == 0x000020, "Wrong size on VoidMod_Base_C_VoidModVersion");
static_assert(offsetof(VoidMod_Base_C_VoidModVersion, __WorldContext) == 0x000000, "Member 'VoidMod_Base_C_VoidModVersion::__WorldContext' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_VoidModVersion, NewParam) == 0x000008, "Member 'VoidMod_Base_C_VoidModVersion::NewParam' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_VoidModVersion, CallFunc_GetVoidmodInstance_Instance) == 0x000018, "Member 'VoidMod_Base_C_VoidModVersion::CallFunc_GetVoidmodInstance_Instance' has a wrong offset!");

// Function VoidMod_Base.VoidMod_Base_C.VoidModDebugEnabled?
// 0x0030 (0x0030 - 0x0000)
struct VoidMod_Base_C_VoidModDebugEnabled_ final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enabled;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Get_Config_Variable_Value;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Config_Variable_Exists;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VoidMod_Base_C_VoidModDebugEnabled_) == 0x000008, "Wrong alignment on VoidMod_Base_C_VoidModDebugEnabled_");
static_assert(sizeof(VoidMod_Base_C_VoidModDebugEnabled_) == 0x000030, "Wrong size on VoidMod_Base_C_VoidModDebugEnabled_");
static_assert(offsetof(VoidMod_Base_C_VoidModDebugEnabled_, __WorldContext) == 0x000000, "Member 'VoidMod_Base_C_VoidModDebugEnabled_::__WorldContext' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_VoidModDebugEnabled_, Enabled) == 0x000008, "Member 'VoidMod_Base_C_VoidModDebugEnabled_::Enabled' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_VoidModDebugEnabled_, CallFunc_Get_Config_Variable_Value) == 0x000010, "Member 'VoidMod_Base_C_VoidModDebugEnabled_::CallFunc_Get_Config_Variable_Value' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_VoidModDebugEnabled_, CallFunc_Get_Config_Variable_Exists) == 0x000020, "Member 'VoidMod_Base_C_VoidModDebugEnabled_::CallFunc_Get_Config_Variable_Exists' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_VoidModDebugEnabled_, CallFunc_Conv_StringToInt_ReturnValue) == 0x000024, "Member 'VoidMod_Base_C_VoidModDebugEnabled_::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_VoidModDebugEnabled_, CallFunc_Conv_IntToBool_ReturnValue) == 0x000028, "Member 'VoidMod_Base_C_VoidModDebugEnabled_::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_VoidModDebugEnabled_, CallFunc_BooleanAND_ReturnValue) == 0x000029, "Member 'VoidMod_Base_C_VoidModDebugEnabled_::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function VoidMod_Base.VoidMod_Base_C.GetModActor
// 0x00C0 (0x00C0 - 0x0000)
struct VoidMod_Base_C_GetModActor final
{
public:
	class FString                                 ModID;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AVoidModActor_C*                        ModActor;                                          // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ToLower_ReturnValue;                      // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AVoidModInstance_C*                     CallFunc_GetVoidmodInstance_Instance;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVoidMod_Mod                           CallFunc_Array_Get_Item;                           // 0x0050(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ToLower_ReturnValue_1;                    // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VoidMod_Base_C_GetModActor) == 0x000008, "Wrong alignment on VoidMod_Base_C_GetModActor");
static_assert(sizeof(VoidMod_Base_C_GetModActor) == 0x0000C0, "Wrong size on VoidMod_Base_C_GetModActor");
static_assert(offsetof(VoidMod_Base_C_GetModActor, ModID) == 0x000000, "Member 'VoidMod_Base_C_GetModActor::ModID' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetModActor, __WorldContext) == 0x000010, "Member 'VoidMod_Base_C_GetModActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetModActor, ModActor) == 0x000018, "Member 'VoidMod_Base_C_GetModActor::ModActor' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetModActor, CallFunc_ToLower_ReturnValue) == 0x000020, "Member 'VoidMod_Base_C_GetModActor::CallFunc_ToLower_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetModActor, Temp_int_Array_Index_Variable) == 0x000030, "Member 'VoidMod_Base_C_GetModActor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetModActor, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'VoidMod_Base_C_GetModActor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetModActor, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'VoidMod_Base_C_GetModActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetModActor, CallFunc_GetVoidmodInstance_Instance) == 0x000040, "Member 'VoidMod_Base_C_GetModActor::CallFunc_GetVoidmodInstance_Instance' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetModActor, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'VoidMod_Base_C_GetModActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetModActor, CallFunc_Array_Get_Item) == 0x000050, "Member 'VoidMod_Base_C_GetModActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetModActor, CallFunc_Less_IntInt_ReturnValue) == 0x0000A0, "Member 'VoidMod_Base_C_GetModActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetModActor, CallFunc_ToLower_ReturnValue_1) == 0x0000A8, "Member 'VoidMod_Base_C_GetModActor::CallFunc_ToLower_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetModActor, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000B8, "Member 'VoidMod_Base_C_GetModActor::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function VoidMod_Base.VoidMod_Base_C.RegisterNewMod
// 0x00B8 (0x00B8 - 0x0000)
struct VoidMod_Base_C_RegisterNewMod final
{
public:
	class FString                                 ModID;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ModDescription;                                    // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UTexture2D*                             ModIcon;                                           // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AVoidModActor_C*                        ModActor;                                          // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVoidMod_CustomActor>           CustomActors;                                      // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FVoidMod_CustomEvent>           CustomEvents;                                      // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVoidMod_Mod                           K2Node_MakeStruct_VoidMod_Mod;                     // 0x0058(0x0050)(HasGetValueTypeHash)
	class AVoidModInstance_C*                     CallFunc_GetVoidmodInstance_Instance;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VoidMod_Base_C_RegisterNewMod) == 0x000008, "Wrong alignment on VoidMod_Base_C_RegisterNewMod");
static_assert(sizeof(VoidMod_Base_C_RegisterNewMod) == 0x0000B8, "Wrong size on VoidMod_Base_C_RegisterNewMod");
static_assert(offsetof(VoidMod_Base_C_RegisterNewMod, ModID) == 0x000000, "Member 'VoidMod_Base_C_RegisterNewMod::ModID' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_RegisterNewMod, ModDescription) == 0x000010, "Member 'VoidMod_Base_C_RegisterNewMod::ModDescription' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_RegisterNewMod, ModIcon) == 0x000020, "Member 'VoidMod_Base_C_RegisterNewMod::ModIcon' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_RegisterNewMod, ModActor) == 0x000028, "Member 'VoidMod_Base_C_RegisterNewMod::ModActor' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_RegisterNewMod, CustomActors) == 0x000030, "Member 'VoidMod_Base_C_RegisterNewMod::CustomActors' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_RegisterNewMod, CustomEvents) == 0x000040, "Member 'VoidMod_Base_C_RegisterNewMod::CustomEvents' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_RegisterNewMod, __WorldContext) == 0x000050, "Member 'VoidMod_Base_C_RegisterNewMod::__WorldContext' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_RegisterNewMod, K2Node_MakeStruct_VoidMod_Mod) == 0x000058, "Member 'VoidMod_Base_C_RegisterNewMod::K2Node_MakeStruct_VoidMod_Mod' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_RegisterNewMod, CallFunc_GetVoidmodInstance_Instance) == 0x0000A8, "Member 'VoidMod_Base_C_RegisterNewMod::CallFunc_GetVoidmodInstance_Instance' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_RegisterNewMod, CallFunc_IsValid_ReturnValue) == 0x0000B0, "Member 'VoidMod_Base_C_RegisterNewMod::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_RegisterNewMod, CallFunc_Array_Add_ReturnValue) == 0x0000B4, "Member 'VoidMod_Base_C_RegisterNewMod::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function VoidMod_Base.VoidMod_Base_C.GetVoidmodInstance
// 0x0028 (0x0028 - 0x0000)
struct VoidMod_Base_C_GetVoidmodInstance final
{
public:
	bool                                          ThrowError;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AVoidModInstance_C*                     Instance;                                          // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AVoidModInstance_C*                     CallFunc_GetActorOfClass_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VoidMod_Base_C_GetVoidmodInstance) == 0x000008, "Wrong alignment on VoidMod_Base_C_GetVoidmodInstance");
static_assert(sizeof(VoidMod_Base_C_GetVoidmodInstance) == 0x000028, "Wrong size on VoidMod_Base_C_GetVoidmodInstance");
static_assert(offsetof(VoidMod_Base_C_GetVoidmodInstance, ThrowError) == 0x000000, "Member 'VoidMod_Base_C_GetVoidmodInstance::ThrowError' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetVoidmodInstance, __WorldContext) == 0x000008, "Member 'VoidMod_Base_C_GetVoidmodInstance::__WorldContext' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetVoidmodInstance, Instance) == 0x000010, "Member 'VoidMod_Base_C_GetVoidmodInstance::Instance' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetVoidmodInstance, CallFunc_GetActorOfClass_ReturnValue) == 0x000018, "Member 'VoidMod_Base_C_GetVoidmodInstance::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoidMod_Base_C_GetVoidmodInstance, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'VoidMod_Base_C_GetVoidmodInstance::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

