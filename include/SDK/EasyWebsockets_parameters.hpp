#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EasyWebsockets

#include "Basic.hpp"


namespace SDK::Params
{

// Function EasyWebsockets.WebSocket.Close
// 0x0018 (0x0018 - 0x0000)
struct WebSocket_Close final
{
public:
	int32                                         StatusCode;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Reason;                                            // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebSocket_Close) == 0x000008, "Wrong alignment on WebSocket_Close");
static_assert(sizeof(WebSocket_Close) == 0x000018, "Wrong size on WebSocket_Close");
static_assert(offsetof(WebSocket_Close, StatusCode) == 0x000000, "Member 'WebSocket_Close::StatusCode' has a wrong offset!");
static_assert(offsetof(WebSocket_Close, Reason) == 0x000008, "Member 'WebSocket_Close::Reason' has a wrong offset!");

// Function EasyWebsockets.WebSocket.OnWebSocketClosed_Internal
// 0x0020 (0x0020 - 0x0000)
struct WebSocket_OnWebSocketClosed_Internal final
{
public:
	int32                                         StatusCode;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Reason;                                            // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWasClean;                                         // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(WebSocket_OnWebSocketClosed_Internal) == 0x000008, "Wrong alignment on WebSocket_OnWebSocketClosed_Internal");
static_assert(sizeof(WebSocket_OnWebSocketClosed_Internal) == 0x000020, "Wrong size on WebSocket_OnWebSocketClosed_Internal");
static_assert(offsetof(WebSocket_OnWebSocketClosed_Internal, StatusCode) == 0x000000, "Member 'WebSocket_OnWebSocketClosed_Internal::StatusCode' has a wrong offset!");
static_assert(offsetof(WebSocket_OnWebSocketClosed_Internal, Reason) == 0x000008, "Member 'WebSocket_OnWebSocketClosed_Internal::Reason' has a wrong offset!");
static_assert(offsetof(WebSocket_OnWebSocketClosed_Internal, bWasClean) == 0x000018, "Member 'WebSocket_OnWebSocketClosed_Internal::bWasClean' has a wrong offset!");

// Function EasyWebsockets.WebSocket.OnWebSocketConnectionError_Internal
// 0x0010 (0x0010 - 0x0000)
struct WebSocket_OnWebSocketConnectionError_Internal final
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebSocket_OnWebSocketConnectionError_Internal) == 0x000008, "Wrong alignment on WebSocket_OnWebSocketConnectionError_Internal");
static_assert(sizeof(WebSocket_OnWebSocketConnectionError_Internal) == 0x000010, "Wrong size on WebSocket_OnWebSocketConnectionError_Internal");
static_assert(offsetof(WebSocket_OnWebSocketConnectionError_Internal, Error) == 0x000000, "Member 'WebSocket_OnWebSocketConnectionError_Internal::Error' has a wrong offset!");

// Function EasyWebsockets.WebSocket.OnWebSocketMessageReceived_Internal
// 0x0010 (0x0010 - 0x0000)
struct WebSocket_OnWebSocketMessageReceived_Internal final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebSocket_OnWebSocketMessageReceived_Internal) == 0x000008, "Wrong alignment on WebSocket_OnWebSocketMessageReceived_Internal");
static_assert(sizeof(WebSocket_OnWebSocketMessageReceived_Internal) == 0x000010, "Wrong size on WebSocket_OnWebSocketMessageReceived_Internal");
static_assert(offsetof(WebSocket_OnWebSocketMessageReceived_Internal, Message) == 0x000000, "Member 'WebSocket_OnWebSocketMessageReceived_Internal::Message' has a wrong offset!");

// Function EasyWebsockets.WebSocket.OnWebSocketMessageSent_Internal
// 0x0010 (0x0010 - 0x0000)
struct WebSocket_OnWebSocketMessageSent_Internal final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebSocket_OnWebSocketMessageSent_Internal) == 0x000008, "Wrong alignment on WebSocket_OnWebSocketMessageSent_Internal");
static_assert(sizeof(WebSocket_OnWebSocketMessageSent_Internal) == 0x000010, "Wrong size on WebSocket_OnWebSocketMessageSent_Internal");
static_assert(offsetof(WebSocket_OnWebSocketMessageSent_Internal, Message) == 0x000000, "Member 'WebSocket_OnWebSocketMessageSent_Internal::Message' has a wrong offset!");

// Function EasyWebsockets.WebSocket.SendMessage
// 0x0010 (0x0010 - 0x0000)
struct WebSocket_SendMessage final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebSocket_SendMessage) == 0x000008, "Wrong alignment on WebSocket_SendMessage");
static_assert(sizeof(WebSocket_SendMessage) == 0x000010, "Wrong size on WebSocket_SendMessage");
static_assert(offsetof(WebSocket_SendMessage, Message) == 0x000000, "Member 'WebSocket_SendMessage::Message' has a wrong offset!");

// Function EasyWebsockets.WebSocket.IsConnected
// 0x0001 (0x0001 - 0x0000)
struct WebSocket_IsConnected final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebSocket_IsConnected) == 0x000001, "Wrong alignment on WebSocket_IsConnected");
static_assert(sizeof(WebSocket_IsConnected) == 0x000001, "Wrong size on WebSocket_IsConnected");
static_assert(offsetof(WebSocket_IsConnected, ReturnValue) == 0x000000, "Member 'WebSocket_IsConnected::ReturnValue' has a wrong offset!");

// Function EasyWebsockets.WebSocketFunctionLibrary.CreateWebSocket
// 0x0028 (0x0028 - 0x0000)
struct WebSocketFunctionLibrary_CreateWebSocket final
{
public:
	class FString                                 ServerUrl;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ServerProtocol;                                    // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWebSocket*                             ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebSocketFunctionLibrary_CreateWebSocket) == 0x000008, "Wrong alignment on WebSocketFunctionLibrary_CreateWebSocket");
static_assert(sizeof(WebSocketFunctionLibrary_CreateWebSocket) == 0x000028, "Wrong size on WebSocketFunctionLibrary_CreateWebSocket");
static_assert(offsetof(WebSocketFunctionLibrary_CreateWebSocket, ServerUrl) == 0x000000, "Member 'WebSocketFunctionLibrary_CreateWebSocket::ServerUrl' has a wrong offset!");
static_assert(offsetof(WebSocketFunctionLibrary_CreateWebSocket, ServerProtocol) == 0x000010, "Member 'WebSocketFunctionLibrary_CreateWebSocket::ServerProtocol' has a wrong offset!");
static_assert(offsetof(WebSocketFunctionLibrary_CreateWebSocket, ReturnValue) == 0x000020, "Member 'WebSocketFunctionLibrary_CreateWebSocket::ReturnValue' has a wrong offset!");

// Function EasyWebsockets.WebSocketFunctionLibrary.CreateWebSocketWithHeaders
// 0x0078 (0x0078 - 0x0000)
struct WebSocketFunctionLibrary_CreateWebSocketWithHeaders final
{
public:
	class FString                                 ServerUrl;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            UpgradeHeaders;                                    // 0x0010(0x0050)(Parm, NativeAccessSpecifierPublic)
	class FString                                 ServerProtocol;                                    // 0x0060(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWebSocket*                             ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebSocketFunctionLibrary_CreateWebSocketWithHeaders) == 0x000008, "Wrong alignment on WebSocketFunctionLibrary_CreateWebSocketWithHeaders");
static_assert(sizeof(WebSocketFunctionLibrary_CreateWebSocketWithHeaders) == 0x000078, "Wrong size on WebSocketFunctionLibrary_CreateWebSocketWithHeaders");
static_assert(offsetof(WebSocketFunctionLibrary_CreateWebSocketWithHeaders, ServerUrl) == 0x000000, "Member 'WebSocketFunctionLibrary_CreateWebSocketWithHeaders::ServerUrl' has a wrong offset!");
static_assert(offsetof(WebSocketFunctionLibrary_CreateWebSocketWithHeaders, UpgradeHeaders) == 0x000010, "Member 'WebSocketFunctionLibrary_CreateWebSocketWithHeaders::UpgradeHeaders' has a wrong offset!");
static_assert(offsetof(WebSocketFunctionLibrary_CreateWebSocketWithHeaders, ServerProtocol) == 0x000060, "Member 'WebSocketFunctionLibrary_CreateWebSocketWithHeaders::ServerProtocol' has a wrong offset!");
static_assert(offsetof(WebSocketFunctionLibrary_CreateWebSocketWithHeaders, ReturnValue) == 0x000070, "Member 'WebSocketFunctionLibrary_CreateWebSocketWithHeaders::ReturnValue' has a wrong offset!");

}

