#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Car1_witch

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function car1_witch.car1_witch_C.ExecuteUbergraph_car1_witch
// 0x02B0 (0x02B0 - 0x0000)
struct Car1_witch_C_ExecuteUbergraph_car1_witch final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0008(0x0018)(HasGetValueTypeHash)
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam;                // 0x0020(0x0080)(IsPlainOldData, NoDestructor)
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam_1;              // 0x00A0(0x0080)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x0128(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_158[0x8];                                      // 0x0158(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0160(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D8[0x8];                                      // 0x01D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_rocket_C*                         CallFunc_FinishSpawningActor_ReturnValue;          // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable;                              // 0x0258(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0280(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Car1_witch_C_ExecuteUbergraph_car1_witch) == 0x000010, "Wrong alignment on Car1_witch_C_ExecuteUbergraph_car1_witch");
static_assert(sizeof(Car1_witch_C_ExecuteUbergraph_car1_witch) == 0x0002B0, "Wrong size on Car1_witch_C_ExecuteUbergraph_car1_witch");
static_assert(offsetof(Car1_witch_C_ExecuteUbergraph_car1_witch, EntryPoint) == 0x000000, "Member 'Car1_witch_C_ExecuteUbergraph_car1_witch::EntryPoint' has a wrong offset!");
static_assert(offsetof(Car1_witch_C_ExecuteUbergraph_car1_witch, K2Node_InputKeyEvent_Key) == 0x000008, "Member 'Car1_witch_C_ExecuteUbergraph_car1_witch::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(Car1_witch_C_ExecuteUbergraph_car1_witch, K2Node_MakeStruct_ParticleSysParam) == 0x000020, "Member 'Car1_witch_C_ExecuteUbergraph_car1_witch::K2Node_MakeStruct_ParticleSysParam' has a wrong offset!");
static_assert(offsetof(Car1_witch_C_ExecuteUbergraph_car1_witch, K2Node_MakeStruct_ParticleSysParam_1) == 0x0000A0, "Member 'Car1_witch_C_ExecuteUbergraph_car1_witch::K2Node_MakeStruct_ParticleSysParam_1' has a wrong offset!");
static_assert(offsetof(Car1_witch_C_ExecuteUbergraph_car1_witch, K2Node_Event_DeltaSeconds) == 0x000120, "Member 'Car1_witch_C_ExecuteUbergraph_car1_witch::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Car1_witch_C_ExecuteUbergraph_car1_witch, K2Node_InputKeyEvent_Key_2) == 0x000128, "Member 'Car1_witch_C_ExecuteUbergraph_car1_witch::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(Car1_witch_C_ExecuteUbergraph_car1_witch, CallFunc_GetForwardVector_ReturnValue) == 0x000140, "Member 'Car1_witch_C_ExecuteUbergraph_car1_witch::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car1_witch_C_ExecuteUbergraph_car1_witch, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00014C, "Member 'Car1_witch_C_ExecuteUbergraph_car1_witch::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car1_witch_C_ExecuteUbergraph_car1_witch, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000160, "Member 'Car1_witch_C_ExecuteUbergraph_car1_witch::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car1_witch_C_ExecuteUbergraph_car1_witch, CallFunc_Add_VectorVector_ReturnValue) == 0x000190, "Member 'Car1_witch_C_ExecuteUbergraph_car1_witch::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car1_witch_C_ExecuteUbergraph_car1_witch, CallFunc_BreakTransform_Location) == 0x00019C, "Member 'Car1_witch_C_ExecuteUbergraph_car1_witch::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Car1_witch_C_ExecuteUbergraph_car1_witch, CallFunc_BreakTransform_Rotation) == 0x0001A8, "Member 'Car1_witch_C_ExecuteUbergraph_car1_witch::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Car1_witch_C_ExecuteUbergraph_car1_witch, CallFunc_BreakTransform_Scale) == 0x0001B4, "Member 'Car1_witch_C_ExecuteUbergraph_car1_witch::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Car1_witch_C_ExecuteUbergraph_car1_witch, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x0001C0, "Member 'Car1_witch_C_ExecuteUbergraph_car1_witch::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car1_witch_C_ExecuteUbergraph_car1_witch, CallFunc_GetComponentVelocity_ReturnValue) == 0x0001CC, "Member 'Car1_witch_C_ExecuteUbergraph_car1_witch::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car1_witch_C_ExecuteUbergraph_car1_witch, CallFunc_MakeTransform_ReturnValue) == 0x0001E0, "Member 'Car1_witch_C_ExecuteUbergraph_car1_witch::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car1_witch_C_ExecuteUbergraph_car1_witch, CallFunc_GetActorRightVector_ReturnValue) == 0x000210, "Member 'Car1_witch_C_ExecuteUbergraph_car1_witch::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car1_witch_C_ExecuteUbergraph_car1_witch, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000220, "Member 'Car1_witch_C_ExecuteUbergraph_car1_witch::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car1_witch_C_ExecuteUbergraph_car1_witch, CallFunc_Dot_VectorVector_ReturnValue) == 0x000228, "Member 'Car1_witch_C_ExecuteUbergraph_car1_witch::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car1_witch_C_ExecuteUbergraph_car1_witch, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00022C, "Member 'Car1_witch_C_ExecuteUbergraph_car1_witch::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car1_witch_C_ExecuteUbergraph_car1_witch, CallFunc_FinishSpawningActor_ReturnValue) == 0x000230, "Member 'Car1_witch_C_ExecuteUbergraph_car1_witch::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car1_witch_C_ExecuteUbergraph_car1_witch, CallFunc_GetActorForwardVector_ReturnValue) == 0x000238, "Member 'Car1_witch_C_ExecuteUbergraph_car1_witch::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car1_witch_C_ExecuteUbergraph_car1_witch, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000244, "Member 'Car1_witch_C_ExecuteUbergraph_car1_witch::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car1_witch_C_ExecuteUbergraph_car1_witch, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x000250, "Member 'Car1_witch_C_ExecuteUbergraph_car1_witch::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car1_witch_C_ExecuteUbergraph_car1_witch, Temp_struct_Variable) == 0x000258, "Member 'Car1_witch_C_ExecuteUbergraph_car1_witch::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Car1_witch_C_ExecuteUbergraph_car1_witch, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000270, "Member 'Car1_witch_C_ExecuteUbergraph_car1_witch::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car1_witch_C_ExecuteUbergraph_car1_witch, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000274, "Member 'Car1_witch_C_ExecuteUbergraph_car1_witch::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car1_witch_C_ExecuteUbergraph_car1_witch, K2Node_InputKeyEvent_Key_1) == 0x000280, "Member 'Car1_witch_C_ExecuteUbergraph_car1_witch::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(Car1_witch_C_ExecuteUbergraph_car1_witch, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000298, "Member 'Car1_witch_C_ExecuteUbergraph_car1_witch::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

// Function car1_witch.car1_witch_C.InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct Car1_witch_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key_0;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(Car1_witch_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on Car1_witch_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0");
static_assert(sizeof(Car1_witch_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on Car1_witch_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0");
static_assert(offsetof(Car1_witch_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0, Key_0) == 0x000000, "Member 'Car1_witch_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0::Key_0' has a wrong offset!");

// Function car1_witch.car1_witch_C.InpActEvt_LeftShift_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct Car1_witch_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key_0;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(Car1_witch_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on Car1_witch_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_1");
static_assert(sizeof(Car1_witch_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on Car1_witch_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_1");
static_assert(offsetof(Car1_witch_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_1, Key_0) == 0x000000, "Member 'Car1_witch_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_1::Key_0' has a wrong offset!");

// Function car1_witch.car1_witch_C.InpActEvt_LeftShift_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct Car1_witch_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key_0;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(Car1_witch_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on Car1_witch_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_2");
static_assert(sizeof(Car1_witch_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on Car1_witch_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_2");
static_assert(offsetof(Car1_witch_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_2, Key_0) == 0x000000, "Member 'Car1_witch_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_2::Key_0' has a wrong offset!");

// Function car1_witch.car1_witch_C.SetDamping
// 0x000C (0x000C - 0x0000)
struct Car1_witch_C_SetDamping final
{
public:
	bool                                          bPickA;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Car1_witch_C_SetDamping) == 0x000004, "Wrong alignment on Car1_witch_C_SetDamping");
static_assert(sizeof(Car1_witch_C_SetDamping) == 0x00000C, "Wrong size on Car1_witch_C_SetDamping");
static_assert(offsetof(Car1_witch_C_SetDamping, bPickA) == 0x000000, "Member 'Car1_witch_C_SetDamping::bPickA' has a wrong offset!");
static_assert(offsetof(Car1_witch_C_SetDamping, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'Car1_witch_C_SetDamping::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car1_witch_C_SetDamping, CallFunc_SelectFloat_ReturnValue) == 0x000004, "Member 'Car1_witch_C_SetDamping::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car1_witch_C_SetDamping, CallFunc_SelectFloat_ReturnValue_1) == 0x000008, "Member 'Car1_witch_C_SetDamping::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");

// Function car1_witch.car1_witch_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Car1_witch_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Car1_witch_C_ReceiveTick) == 0x000004, "Wrong alignment on Car1_witch_C_ReceiveTick");
static_assert(sizeof(Car1_witch_C_ReceiveTick) == 0x000004, "Wrong size on Car1_witch_C_ReceiveTick");
static_assert(offsetof(Car1_witch_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Car1_witch_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

