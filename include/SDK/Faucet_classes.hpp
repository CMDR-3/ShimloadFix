#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Faucet

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Enum_interactionActions_structs.hpp"
#include "Actor_save_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass faucet.faucet_C
// 0x0050 (0x02A0 - 0x0250)
class AFaucet_C final : public AActor_save_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Faucet_C;                           // 0x0250(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Audio;                                             // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Eff_water;                                         // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Faucet;                                            // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Connect;                                           // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mesh;                                              // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Turnon;                                            // 0x0280(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Active;                                            // 0x0281(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_282[0x6];                                      // 0x0282(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGroundHose_C*                          Hose;                                              // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Hose_key;                                          // 0x0290(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_faucet(int32 EntryPoint);
	void GamemodePostKeys();
	void ReceiveTick(float DeltaSeconds);
	void SignalDeleted();
	void PlayerR(class AMainPlayer_C* Player);
	void PlayerHold(class AMainPlayer_C* Player);
	void PlayerUnequip(class AMainPlayer_C* Player);
	void UpdateStrAgl();
	void DamageByPlayer(class AMainPlayer_C* Player, const struct FHitResult& Hit, float Damage);
	void Thrown(class AMainPlayer_C* Player);
	void broken_fire();
	void broken();
	void SendName(class FName Name_0);
	void Kicked(bool Kick);
	void Player_use(class AMainPlayer_C* Player, const struct FHitResult& Hit);
	void DriveDetached();
	void NewFunction_3();
	void NewFunction_2();
	void TexturePickerApply(class UUmg_texturePicker_C* Picker, class UTexture2D* Texture, int32 Index_0);
	void ApplyColor(const struct FLinearColor& Color);
	void PropRenderer_finishProps();
	void GamemodeMakeKeys();
	void AnyKey(const struct FKey& Key_0, bool Pressed);
	void GamemodePreLoad();
	void Unfocused();
	void SettingsApplied(const struct FStruct_settings& Settings);
	void Unfoc();
	void StuffUpgraded(class AMainGamemode_C* GameMode_0);
	void GamemodeBeginPlay();
	void SignalSaved();
	void Upd();
	void LandedOn(class AMainPlayer_C* Player, bool* IgnoreFallDamage);
	void CanBePutInContainer(bool* Return);
	void PlayerUsedOn(class AMainPlayer_C* Player, const struct FHitResult& Hit);
	void AsProp(class AProp_C** Return);
	void CanPickup(bool* Return);
	void NoRespawn(bool NoRespawn_0, bool* Return);
	void LookAt(class AMainPlayer_C* Player, const struct FHitResult& Hit, bool* Return, class FString* Text, class UPrimitiveComponent** boundObjectReplace, uint8* Number);
	void IsButtonUsed(bool* Failed);
	void DreamInv(TArray<struct FStruct_save>& Invv, class ADreamBase_C** Base);
	void ActionOptionIndex(class AMainPlayer_C* Player, const struct FHitResult& Hit, Enum_interactionActions Action);
	void LoadData(const struct FStruct_save& Data, bool* Return);
	void GetData(struct FStruct_save* Data);
	void ProcessKeys(bool* Return);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"faucet_C">();
	}
	static class AFaucet_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFaucet_C>();
	}
};
static_assert(alignof(AFaucet_C) == 0x000008, "Wrong alignment on AFaucet_C");
static_assert(sizeof(AFaucet_C) == 0x0002A0, "Wrong size on AFaucet_C");
static_assert(offsetof(AFaucet_C, UberGraphFrame_Faucet_C) == 0x000250, "Member 'AFaucet_C::UberGraphFrame_Faucet_C' has a wrong offset!");
static_assert(offsetof(AFaucet_C, Audio) == 0x000258, "Member 'AFaucet_C::Audio' has a wrong offset!");
static_assert(offsetof(AFaucet_C, Eff_water) == 0x000260, "Member 'AFaucet_C::Eff_water' has a wrong offset!");
static_assert(offsetof(AFaucet_C, Faucet) == 0x000268, "Member 'AFaucet_C::Faucet' has a wrong offset!");
static_assert(offsetof(AFaucet_C, Connect) == 0x000270, "Member 'AFaucet_C::Connect' has a wrong offset!");
static_assert(offsetof(AFaucet_C, Mesh) == 0x000278, "Member 'AFaucet_C::Mesh' has a wrong offset!");
static_assert(offsetof(AFaucet_C, Turnon) == 0x000280, "Member 'AFaucet_C::Turnon' has a wrong offset!");
static_assert(offsetof(AFaucet_C, Active) == 0x000281, "Member 'AFaucet_C::Active' has a wrong offset!");
static_assert(offsetof(AFaucet_C, Hose) == 0x000288, "Member 'AFaucet_C::Hose' has a wrong offset!");
static_assert(offsetof(AFaucet_C, Hose_key) == 0x000290, "Member 'AFaucet_C::Hose_key' has a wrong offset!");

}

